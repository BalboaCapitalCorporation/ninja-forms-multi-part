{"version":3,"sources":["../../../config-wrap-start-default.js","../lib/almond.js","models/partModel.js","models/partCollection.js","controllers/data.js","controllers/clickControls.js","controllers/gutterDroppables.js","controllers/partSettings.js","controllers/partDroppable.js","controllers/partSortable.js","controllers/undo.js","controllers/loadControllers.js","views/drawerItem.js","views/drawerCollection.js","views/drawerLayout.js","views/layout.js","views/gutterLeft.js","views/gutterRight.js","views/mainContentEmpty.js","controllers/filters.js","main.js","../../../config-wrap-end-default.js"],"names":["requirejs","require","define","undef","hasProp","obj","prop","hasOwn","call","normalize","name","baseName","nameParts","nameSegment","mapValue","foundMap","lastIndex","foundI","foundStarMap","starI","i","j","part","baseParts","split","map","config","starMap","charAt","length","nodeIdCompat","jsSuffixRegExp","test","replace","slice","concat","splice","join","indexOf","substring","makeRequire","relName","forceSync","args","aps","arguments","push","req","apply","makeNormalize","makeLoad","depName","value","defined","callDep","waiting","defining","main","Error","splitPrefix","prefix","index","makeConfig","makeMap","handlers","Object","prototype","hasOwnProperty","plugin","parts","f","n","pr","p","exports","e","module","id","uri","deps","callback","cjsModule","ret","usingExports","callbackType","load","undefined","alt","setTimeout","cfg","_defined","amd","jQuery","model","Backbone","Model","extend","defaults","order","type","clean","title","initialize","this","on","unclean","filterFormContentData","listenTo","get","sortFormContentData","fieldCollection","nfRadio","channel","request","triggerRemove","set","Math","random","toString","substr","sort","fieldModel","_","isArray","trigger","pluck","formContentData","formContentLoadFilters","sortedArray","without","empty","cells","partFields","each","cell","fields","flatten","union","PartModel","collection","Collection","currentElement","comparator","models","options","afterRemove","afterAdd","maybeChangeBuilderClass","changeCurrentPart","at","listenToOnce","afterFirstDrawerClose","openFirstDrawer","openDrawer","setElement","newModel","max","settingGroupCollection","settingModel","findWhere","count","changeBuilderClass","groupCollection","focusTitle","drawerEl","find","select","focus","off","hasParts","builderEl","addClass","removeClass","getElement","silent","previousElement","currentDrawer","next","hasNext","previous","hasPrevious","getFormContentData","updateOrder","append","add","PartCollection","controller","Marionette","reply","initPartCollection","getCollection","addField","partCollection","clickPrevious","clickNext","clickNew","clickPart","clickRemove","clickDuplicate","label","object","change","dashicon","data","partModel","settingView","remove","partClone","over","out","dropRight","dropLeft","ui","item","draggable","drop","dir","dropping","hasClass","oldOrder","previousPart","oldPart","newPart","stagedFields","field","nextPart","keys","fieldType","changePart","helper","SettingGroupCollection","setupCollection","display","priority","settings","width","partView","css","height","opacity","sortableEl","fieldWidth","effect","to","el","dropField","dropNewField","dropStaging","start","stop","update","collectionView","show","key","sortable","undoAddPart","undoRemovePart","undoDupilcatePart","undoFieldChangePart","undoSortParts","undoAll","changeCollection","filter","maybeRemoveChange","Data","ClickControls","GutterDroppables","PartSettings","PartDroppable","PartSortable","Undo","view","ItemView","tagName","template","updatedTitle","maybeChangeActive","render","setULWidth","attributes","onShow","that","droppable","activeClass","hoverClass","accept","tolerance","events","click","templateHelpers","getIndex","DrawerItemView","CollectionView","childView","reorderOnSort","drawerLayoutView","window","context","resizeEvent","maybeScroll","li","children","marginLeft","parseInt","viewportWidth","viewport","diff","offset","left","outerWidth","animate","scrollLeft","showHidePagination","childViewOptions","items","onAttach","ulWidth","onRemoveChild","onAddChild","onBeforeAddChild","parent","is","hide","DrawerCollectionView","LayoutView","regions","resizeWindow","beforeDrawerOpen","beforeDrawerClose","onBeforeDestroy","resizeViewport","viewportEl","targetWidth","currentView","DrawerLayoutView","mainContent","drawer","formContentViewFilters","formContentView","click .nf-mp-drawer-scroll-previous","click .nf-mp-drawer-scroll-next","lis","viewportTotal","widthCounter","currentIndex","previousIndex","hideDir","showDir","direction","click .fa","onRender","click .next","click .new","console","log","hasContent","$el","unwrap","GutterLeftView","GutterRightView","MainContentEmptyView","addFilters","getLeftView","getRightView","getContentView","formContentSave","formContentLoad","conditionsFilter","conditionTriggers","maybeAddElse","emptyView","first","collectionClone","formContentSaveFilters","toJSON","defaultMainContentEmptyView","getMainContentEmpty","groups","modelType","partOptions","unshift","defaultTriggers","show_field","hide_field","thenModel","opposite","target","val","conditionModel","Radio","LoadControllers","LoadFilters","NFMultiPart","Application","loadControllers","onStart","nfMultiPart"],"mappings":"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CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,ACjbhHA,ADiHA;AChvMA,ADwMA;ACvpzUA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AClEA,ADmEA;ACljvCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AChFA,ADiFA;AChhhDA,ADiDA;AChxLA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACvBA,ADwBA","file":"builder.js","sourcesContent":["(function () {\n","/**\n * @license almond 0.3.1 Copyright (c) 2011-2014, The Dojo Foundation All Rights Reserved.\n * Available via the MIT or new BSD license.\n * see: http://github.com/jrburke/almond for details\n */\n//Going sloppy to avoid 'use strict' string cost, but strict practices should\n//be followed.\n/*jslint sloppy: true */\n/*global setTimeout: false */\n\nvar requirejs, require, define;\n(function (undef) {\n    var main, req, makeMap, handlers,\n        defined = {},\n        waiting = {},\n        config = {},\n        defining = {},\n        hasOwn = Object.prototype.hasOwnProperty,\n        aps = [].slice,\n        jsSuffixRegExp = /\\.js$/;\n\n    function hasProp(obj, prop) {\n        return hasOwn.call(obj, prop);\n    }\n\n    /**\n     * Given a relative module name, like ./something, normalize it to\n     * a real name that can be mapped to a path.\n     * @param {String} name the relative name\n     * @param {String} baseName a real name that the name arg is relative\n     * to.\n     * @returns {String} normalized name\n     */\n    function normalize(name, baseName) {\n        var nameParts, nameSegment, mapValue, foundMap, lastIndex,\n            foundI, foundStarMap, starI, i, j, part,\n            baseParts = baseName && baseName.split(\"/\"),\n            map = config.map,\n            starMap = (map && map['*']) || {};\n\n        //Adjust any relative paths.\n        if (name && name.charAt(0) === \".\") {\n            //If have a base name, try to normalize against it,\n            //otherwise, assume it is a top-level require that will\n            //be relative to baseUrl in the end.\n            if (baseName) {\n                name = name.split('/');\n                lastIndex = name.length - 1;\n\n                // Node .js allowance:\n                if (config.nodeIdCompat && jsSuffixRegExp.test(name[lastIndex])) {\n                    name[lastIndex] = name[lastIndex].replace(jsSuffixRegExp, '');\n                }\n\n                //Lop off the last part of baseParts, so that . matches the\n                //\"directory\" and not name of the baseName's module. For instance,\n                //baseName of \"one/two/three\", maps to \"one/two/three.js\", but we\n                //want the directory, \"one/two\" for this normalization.\n                name = baseParts.slice(0, baseParts.length - 1).concat(name);\n\n                //start trimDots\n                for (i = 0; i < name.length; i += 1) {\n                    part = name[i];\n                    if (part === \".\") {\n                        name.splice(i, 1);\n                        i -= 1;\n                    } else if (part === \"..\") {\n                        if (i === 1 && (name[2] === '..' || name[0] === '..')) {\n                            //End of the line. Keep at least one non-dot\n                            //path segment at the front so it can be mapped\n                            //correctly to disk. Otherwise, there is likely\n                            //no path mapping for a path starting with '..'.\n                            //This can still fail, but catches the most reasonable\n                            //uses of ..\n                            break;\n                        } else if (i > 0) {\n                            name.splice(i - 1, 2);\n                            i -= 2;\n                        }\n                    }\n                }\n                //end trimDots\n\n                name = name.join(\"/\");\n            } else if (name.indexOf('./') === 0) {\n                // No baseName, so this is ID is resolved relative\n                // to baseUrl, pull off the leading dot.\n                name = name.substring(2);\n            }\n        }\n\n        //Apply map config if available.\n        if ((baseParts || starMap) && map) {\n            nameParts = name.split('/');\n\n            for (i = nameParts.length; i > 0; i -= 1) {\n                nameSegment = nameParts.slice(0, i).join(\"/\");\n\n                if (baseParts) {\n                    //Find the longest baseName segment match in the config.\n                    //So, do joins on the biggest to smallest lengths of baseParts.\n                    for (j = baseParts.length; j > 0; j -= 1) {\n                        mapValue = map[baseParts.slice(0, j).join('/')];\n\n                        //baseName segment has  config, find if it has one for\n                        //this name.\n                        if (mapValue) {\n                            mapValue = mapValue[nameSegment];\n                            if (mapValue) {\n                                //Match, update name to the new value.\n                                foundMap = mapValue;\n                                foundI = i;\n                                break;\n                            }\n                        }\n                    }\n                }\n\n                if (foundMap) {\n                    break;\n                }\n\n                //Check for a star map match, but just hold on to it,\n                //if there is a shorter segment match later in a matching\n                //config, then favor over this star map.\n                if (!foundStarMap && starMap && starMap[nameSegment]) {\n                    foundStarMap = starMap[nameSegment];\n                    starI = i;\n                }\n            }\n\n            if (!foundMap && foundStarMap) {\n                foundMap = foundStarMap;\n                foundI = starI;\n            }\n\n            if (foundMap) {\n                nameParts.splice(0, foundI, foundMap);\n                name = nameParts.join('/');\n            }\n        }\n\n        return name;\n    }\n\n    function makeRequire(relName, forceSync) {\n        return function () {\n            //A version of a require function that passes a moduleName\n            //value for items that may need to\n            //look up paths relative to the moduleName\n            var args = aps.call(arguments, 0);\n\n            //If first arg is not require('string'), and there is only\n            //one arg, it is the array form without a callback. Insert\n            //a null so that the following concat is correct.\n            if (typeof args[0] !== 'string' && args.length === 1) {\n                args.push(null);\n            }\n            return req.apply(undef, args.concat([relName, forceSync]));\n        };\n    }\n\n    function makeNormalize(relName) {\n        return function (name) {\n            return normalize(name, relName);\n        };\n    }\n\n    function makeLoad(depName) {\n        return function (value) {\n            defined[depName] = value;\n        };\n    }\n\n    function callDep(name) {\n        if (hasProp(waiting, name)) {\n            var args = waiting[name];\n            delete waiting[name];\n            defining[name] = true;\n            main.apply(undef, args);\n        }\n\n        if (!hasProp(defined, name) && !hasProp(defining, name)) {\n            throw new Error('No ' + name);\n        }\n        return defined[name];\n    }\n\n    //Turns a plugin!resource to [plugin, resource]\n    //with the plugin being undefined if the name\n    //did not have a plugin prefix.\n    function splitPrefix(name) {\n        var prefix,\n            index = name ? name.indexOf('!') : -1;\n        if (index > -1) {\n            prefix = name.substring(0, index);\n            name = name.substring(index + 1, name.length);\n        }\n        return [prefix, name];\n    }\n\n    /**\n     * Makes a name map, normalizing the name, and using a plugin\n     * for normalization if necessary. Grabs a ref to plugin\n     * too, as an optimization.\n     */\n    makeMap = function (name, relName) {\n        var plugin,\n            parts = splitPrefix(name),\n            prefix = parts[0];\n\n        name = parts[1];\n\n        if (prefix) {\n            prefix = normalize(prefix, relName);\n            plugin = callDep(prefix);\n        }\n\n        //Normalize according\n        if (prefix) {\n            if (plugin && plugin.normalize) {\n                name = plugin.normalize(name, makeNormalize(relName));\n            } else {\n                name = normalize(name, relName);\n            }\n        } else {\n            name = normalize(name, relName);\n            parts = splitPrefix(name);\n            prefix = parts[0];\n            name = parts[1];\n            if (prefix) {\n                plugin = callDep(prefix);\n            }\n        }\n\n        //Using ridiculous property names for space reasons\n        return {\n            f: prefix ? prefix + '!' + name : name, //fullName\n            n: name,\n            pr: prefix,\n            p: plugin\n        };\n    };\n\n    function makeConfig(name) {\n        return function () {\n            return (config && config.config && config.config[name]) || {};\n        };\n    }\n\n    handlers = {\n        require: function (name) {\n            return makeRequire(name);\n        },\n        exports: function (name) {\n            var e = defined[name];\n            if (typeof e !== 'undefined') {\n                return e;\n            } else {\n                return (defined[name] = {});\n            }\n        },\n        module: function (name) {\n            return {\n                id: name,\n                uri: '',\n                exports: defined[name],\n                config: makeConfig(name)\n            };\n        }\n    };\n\n    main = function (name, deps, callback, relName) {\n        var cjsModule, depName, ret, map, i,\n            args = [],\n            callbackType = typeof callback,\n            usingExports;\n\n        //Use name if no relName\n        relName = relName || name;\n\n        //Call the callback to define the module, if necessary.\n        if (callbackType === 'undefined' || callbackType === 'function') {\n            //Pull out the defined dependencies and pass the ordered\n            //values to the callback.\n            //Default to [require, exports, module] if no deps\n            deps = !deps.length && callback.length ? ['require', 'exports', 'module'] : deps;\n            for (i = 0; i < deps.length; i += 1) {\n                map = makeMap(deps[i], relName);\n                depName = map.f;\n\n                //Fast path CommonJS standard dependencies.\n                if (depName === \"require\") {\n                    args[i] = handlers.require(name);\n                } else if (depName === \"exports\") {\n                    //CommonJS module spec 1.1\n                    args[i] = handlers.exports(name);\n                    usingExports = true;\n                } else if (depName === \"module\") {\n                    //CommonJS module spec 1.1\n                    cjsModule = args[i] = handlers.module(name);\n                } else if (hasProp(defined, depName) ||\n                           hasProp(waiting, depName) ||\n                           hasProp(defining, depName)) {\n                    args[i] = callDep(depName);\n                } else if (map.p) {\n                    map.p.load(map.n, makeRequire(relName, true), makeLoad(depName), {});\n                    args[i] = defined[depName];\n                } else {\n                    throw new Error(name + ' missing ' + depName);\n                }\n            }\n\n            ret = callback ? callback.apply(defined[name], args) : undefined;\n\n            if (name) {\n                //If setting exports via \"module\" is in play,\n                //favor that over return value and exports. After that,\n                //favor a non-undefined return value over exports use.\n                if (cjsModule && cjsModule.exports !== undef &&\n                        cjsModule.exports !== defined[name]) {\n                    defined[name] = cjsModule.exports;\n                } else if (ret !== undef || !usingExports) {\n                    //Use the return value from the function.\n                    defined[name] = ret;\n                }\n            }\n        } else if (name) {\n            //May just be an object definition for the module. Only\n            //worry about defining if have a module name.\n            defined[name] = callback;\n        }\n    };\n\n    requirejs = require = req = function (deps, callback, relName, forceSync, alt) {\n        if (typeof deps === \"string\") {\n            if (handlers[deps]) {\n                //callback in this case is really relName\n                return handlers[deps](callback);\n            }\n            //Just return the module wanted. In this scenario, the\n            //deps arg is the module name, and second arg (if passed)\n            //is just the relName.\n            //Normalize module name, if it contains . or ..\n            return callDep(makeMap(deps, callback).f);\n        } else if (!deps.splice) {\n            //deps is a config object, not an array.\n            config = deps;\n            if (config.deps) {\n                req(config.deps, config.callback);\n            }\n            if (!callback) {\n                return;\n            }\n\n            if (callback.splice) {\n                //callback is an array, which means it is a dependency list.\n                //Adjust args if there are dependencies\n                deps = callback;\n                callback = relName;\n                relName = null;\n            } else {\n                deps = undef;\n            }\n        }\n\n        //Support require(['a'])\n        callback = callback || function () {};\n\n        //If relName is a function, it is an errback handler,\n        //so remove it.\n        if (typeof relName === 'function') {\n            relName = forceSync;\n            forceSync = alt;\n        }\n\n        //Simulate async callback;\n        if (forceSync) {\n            main(undef, deps, callback, relName);\n        } else {\n            //Using a non-zero value because of concern for what old browsers\n            //do, and latest browsers \"upgrade\" to 4 if lower value is used:\n            //http://www.whatwg.org/specs/web-apps/current-work/multipage/timers.html#dom-windowtimers-settimeout:\n            //If want a value immediately, use require('id') instead -- something\n            //that works in almond on the global level, but not guaranteed and\n            //unlikely to work in other AMD implementations.\n            setTimeout(function () {\n                main(undef, deps, callback, relName);\n            }, 4);\n        }\n\n        return req;\n    };\n\n    /**\n     * Just drops the config on the floor, but returns req in case\n     * the config return value is used.\n     */\n    req.config = function (cfg) {\n        return req(cfg);\n    };\n\n    /**\n     * Expose module registry for debugging and tooling\n     */\n    requirejs._defined = defined;\n\n    define = function (name, deps, callback) {\n        if (typeof name !== 'string') {\n            throw new Error('See almond README: incorrect module build, no module name');\n        }\n\n        //This module may not have dependencies\n        if (!deps.splice) {\n            //deps is not an array, so probably means\n            //an object literal or factory function for\n            //the value. Adjust args.\n            callback = deps;\n            deps = [];\n        }\n\n        if (!hasProp(defined, name) && !hasProp(waiting, name)) {\n            waiting[name] = [name, deps, callback];\n        }\n    };\n\n    define.amd = {\n        jQuery: true\n    };\n}());\n\ndefine(\"../lib/almond\", function(){});\n\n","/**\n * Model that represents part information.\n * \n * @package Ninja Forms Multi-Part\n * @subpackage Fields\n * @copyright (c) 2016 WP Ninjas\n * @since 3.0\n */\ndefine( 'models/partModel',[], function() {\n\tvar model = Backbone.Model.extend( {\n\t\tdefaults: {\n\t\t\t// formContentData: [],\n\t\t\torder: 0,\n\t\t\ttype: 'part',\n\t\t\tclean: true,\n\t\t\ttitle: 'Part Title'\n\t\t},\n\n\t\tinitialize: function() {\n\t\t\t/*\n\t\t\t * TODO: For some reason, each part model is being initialized when you add a new part.\n\t\t\t */\n\t\t\tthis.on( 'change:title', this.unclean );\n\t\t\tthis.filterFormContentData();\n\t\t\tthis.listenTo( this.get( 'formContentData' ), 'change:order', this.sortFormContentData );\n\t\t\t/*\n\t\t\t * When we remove a field from our field collection, remove it from this part if it exists there.\n\t\t\t */\n\t\t\tvar fieldCollection = nfRadio.channel( 'fields' ).request( 'get:collection' );\n\t\t\tthis.listenTo( fieldCollection, 'remove', this.triggerRemove );\n\n\t\t\t/*\n\t\t\t * Set a key for part.\n\t\t\t */\n\t\t\tif ( ! this.get( 'key' ) ) {\n\t\t\t\tthis.set( 'key', Math.random().toString( 36 ).replace( /[^a-z]+/g, '' ).substr( 0, 8 ) );\n\t\t\t}\n\t\t},\n\n\t\tunclean: function() {\n\t\t\tthis.set( 'clean', false );\n\t\t},\n\n\t\tsortFormContentData: function() {\n\t\t\tthis.get( 'formContentData' ).sort();\n\t\t},\n\n\t\ttriggerRemove: function( fieldModel ) {\n\t\t\tif ( _.isArray( this.get( 'formContentData' ) ) ) {\n\t\t\t\tthis.filterFormContentData();\n\t\t\t}\n\t\t\tthis.get( 'formContentData' ).trigger( 'remove:field', fieldModel );\n\t\t},\n\n\t\tfilterFormContentData: function() {\n\t\t\tif ( ! this.get( 'formContentData' ) ) {\n\t\t\t\tthis.set( 'formContentData', nfRadio.channel( 'fields' ).request( 'get:collection' ).pluck( 'key' ) );\n\t\t\t}\n\n\t\t\tvar formContentData = this.get( 'formContentData' );\n\t\t\t/*\n\t\t\t * Update our formContentData by running it through our fromContentData filter\n\t\t\t */\n\t\t\tvar formContentLoadFilters = nfRadio.channel( 'formContent' ).request( 'get:loadFilters' );\n\t\t\t/* \n\t\t\t* Get our second filter, this will be the one with the highest priority after MP Forms.\n\t\t\t*/\n\t\t\tvar sortedArray = _.without( formContentLoadFilters, undefined );\n\t\t\tvar callback = sortedArray[ 1 ];\n\t\t\t/*\n\t\t\t * If our formContentData is an empty array, we want to pass the \"empty\" flag as true so that filters know it's purposefully empty.\n\t\t\t */\n\t\t\tvar empty = ( 0 == formContentData.length ) ? true : false;\n\t\t\t/*\n\t\t\t * TODO: This is a bandaid fix to prevent forms with layouts and parts from freaking out of layouts & styles are deactivated.\n\t\t\t * If Layouts is deactivated, it will try to grab the layout data and show the fields on the appropriate parts.\n\t\t\t */\n\t\t\tif ( 'undefined' == typeof formContentLoadFilters[4] && _.isArray( formContentData ) && 0 != formContentData.length && 'undefined' != typeof formContentData[0].cells ) {\n\t\t\t\t/*\n\t\t\t\t * We need to get our field keys from our layout data.\n\t\t\t\t * Layout data looks like:\n\t\t\t\t * Rows\n\t\t\t\t *   Row\n\t\t\t\t *     Cells\n\t\t\t\t *       Cell\n\t\t\t\t *         Fields\n\t\t\t\t *       Cell\n\t\t\t\t *         Fields\n\t\t\t\t *   Row\n\t\t\t\t *     Cells\n\t\t\t\t *       Cell\n\t\t\t\t *         Fields  \n\t\t\t\t */\n\t\t\t\tvar partFields = [];\n\t\t\t\tvar cells = _.pluck( formContentData, 'cells' );\n\t\t\t\t_.each( cells, function( cell ) {\n\t\t\t\t\tvar fields = _.flatten( _.pluck( cell, 'fields' ) );\n\t\t\t\t\tpartFields = _.union( partFields, fields );\n\t\t\t\t} );\n\n\t\t\t\tformContentData = partFields;\n\n\t\t\t\tthis.set( 'formContentData', formContentData );\n\t\t\t}\n\n\t\t\tthis.set( 'formContentData', callback( formContentData, empty, formContentData ) );\n\t\t}\n\n\t} );\n\n\treturn model;\n} );\n\n","define( 'models/partCollection',[ 'models/partModel' ], function( PartModel ) {\n\tvar collection = Backbone.Collection.extend( {\n\t\tmodel: PartModel,\n\t\tcurrentElement: false,\n\t\tcomparator: 'order',\n\n\t\tinitialize: function( models, options ){\n\t\t\tmodels = models || [];\n\n\t\t\tthis.on( 'remove', this.afterRemove );\n\t\t\tthis.on( 'add', this.afterAdd );\n\t\t\tthis.maybeChangeBuilderClass( models.length );\n\t\t},\n\n\t\tafterRemove: function( model, collection, options ) {\n\t\t\tthis.changeCurrentPart( model, collection, options );\n\t\t\tthis.maybeChangeBuilderClass( model, collection, options );\n\t\t\t/*\n\t\t\t * If our drawer is open, close it.\n\t\t\t */\n\t\t\tnfRadio.channel( 'app' ).request( 'close:drawer' );\n\t\t},\n\n\t\tafterAdd: function( model ) {\n\t\t\t/*\n\t\t\t * If we only have one model and it's set to clean, open a drawer so that the user can edit its title.\n\t\t\t */\n\t\t\tif ( this.at( 0 ).get( 'clean' ) && 2 == this.length ) {\n\t\t\t\t/*\n\t\t\t\t * When the first part title drawer closes, continue our new part processing.\n\t\t\t\t */\n\t\t\t\tthis.listenToOnce( nfRadio.channel( 'drawer' ), 'closed', this.afterFirstDrawerClose, model );\n\t\t\t\tthis.openFirstDrawer( this.at( 0 ) );\n\t\t\t} else {\n\t\t\t\tthis.openDrawer( model );\n\t\t\t\tthis.setElement( model );\n\t\t\t\tthis.maybeChangeBuilderClass( model );\n\t\t\t}\n\t\t},\n\n\t\tafterFirstDrawerClose: function() {\n\t\t\tvar newModel = this.at( _.max( this.pluck( 'order' ) ) );\n\t\t\tvar settingGroupCollection = nfRadio.channel( 'mp' ).request( 'get:settingGroupCollection' );\n\t\t\tvar settingModel = settingGroupCollection.get( 'primary' ).get( 'settings' ).findWhere( { name: 'title' } );\n\t\t\tsettingModel.set( 'label', settingModel.get( 'oldLabel' ) );\n\t\t\tthis.openDrawer( newModel );\n\t\t\tthis.setElement( newModel );\n\t\t\tthis.maybeChangeBuilderClass( newModel );\n\t\t},\n\n\t\tmaybeChangeBuilderClass: function( count, collection, options ) {\n\t\t\tif ( true === count instanceof Backbone.Model ) {\n\t\t\t\tcount = this.length;\n\t\t\t}\n\n\t\t\tthis.changeBuilderClass( 1 < count );\n\t\t},\n\t\t\n\t\topenFirstDrawer: function( model ) {\n\t\t\tvar settingGroupCollection = nfRadio.channel( 'mp' ).request( 'get:settingGroupCollection' );\n\t\t\tvar settingModel = settingGroupCollection.get( 'primary' ).get( 'settings' ).findWhere( { name: 'title' } );\n\t\t\tsettingModel.set( 'oldLabel', settingModel.get( 'label' ) );\n\t\t\tsettingModel.set( 'label', 'Give your first part a title' );\n\t\t\tnfRadio.channel( 'app' ).request( 'open:drawer', 'editSettings', { model: model, groupCollection: settingGroupCollection } );\n\t\t\n\t\t\t/*\n\t\t\t * When the drawer opens, focus the input box.\n\t\t\t */\n\t\t\tnfRadio.channel( 'drawer' ).on( 'opened', this.focusTitle );\n\t\t},\n\n\t\topenDrawer: function( model ) {\n\t\t\tvar settingGroupCollection = nfRadio.channel( 'mp' ).request( 'get:settingGroupCollection' );\n\t\t\tnfRadio.channel( 'app' ).request( 'open:drawer', 'editSettings', { model: model, groupCollection: settingGroupCollection } );\n\t\t\n\t\t\t/*\n\t\t\t * When the drawer opens, focus the input box.\n\t\t\t */\n\t\t\tnfRadio.channel( 'drawer' ).on( 'opened', this.focusTitle );\n\t\t},\n\n\t\tfocusTitle: function() {\n\t\t\tvar drawerEl = nfRadio.channel( 'app' ).request( 'get:drawerEl' );\n\t\t\tjQuery( drawerEl ).find( '#title' ).select();\n\t\t\tjQuery( drawerEl ).find( '#title' ).focus();\n\t\t\tnfRadio.channel( 'drawer' ).off( 'opened', this.focusTitle );\n\t\t},\n\n\t\tchangeBuilderClass: function( hasParts ) {\n\t\t\tvar builderEl = nfRadio.channel( 'app' ).request( 'get:builderEl' );\n\t\t\tif ( hasParts ) {\n\t\t\t\tjQuery( builderEl ).addClass( 'nf-has-parts' );\n\t\t\t} else {\n\t\t\t\tjQuery( builderEl ).removeClass( 'nf-has-parts' );\n\t\t\t}\n\t\t},\n\n\t\tchangeCurrentPart: function( model, collection, options ) {\n\t\t\t/*\n\t\t\t * When we remove the current part, change the current part in our collection.\n\t\t\t *\n\t\t\t * TODO: Find a way to pass index to has previous or has next for proper testing.\n\t\t\t * Since the model has been removed, it will always return a -1.\n\t\t\t */\n\t\t\tif ( this.getElement() == model ) {\n\t\t\t\tif ( 0 == options.index ) {\n\t\t\t\t\tthis.setElement( this.at( 0 ) );\n\t\t\t\t} else {\n\t\t\t\t\tthis.setElement( this.at( options.index - 1 ) );\n\t\t\t\t}\n\t\t\t} else if ( 1 == this.length ) {\n\t\t\t\tthis.setElement( this.at( 0 ) );\n\t\t\t}\n\t\t},\n\n\t\tgetElement: function() {\n\t\t\t/*\n\t\t\t * If we haven't set an element yet, set it to the first one.\n\t\t\t */\n\t\t\tif ( ! this.currentElement ) {\n\t\t\t\tthis.setElement( this.at( 0 ), true );\n\t\t\t}\n\t\t\treturn this.currentElement;\n\t\t},\n\t\t  \n\t\tsetElement: function( model, silent ) {\n\t\t\tif ( model == this.currentElement ) return;\n\t\t\tsilent = silent || false;\n\t\t\tthis.previousElement = this.currentElement;\n\t\t\tthis.currentElement = model;\n\t\t\tif ( ! silent ) {\n\t\t\t\t/*\n\t\t\t\t * If we are editing a part and we change parts, update the data being displayed in the drawer to match the new part.\n\t\t\t\t */\n\t\t\t\tvar currentDrawer = nfRadio.channel( 'app' ).request( 'get:currentDrawer' );\n\t\t\t\tif ( currentDrawer && 'editSettings' == currentDrawer.get( 'id' ) ) {\n\t\t\t\t\tvar settingGroupCollection = nfRadio.channel( 'mp' ).request( 'get:settingGroupCollection' );\n\t\t\t\t\tnfRadio.channel( 'app' ).request( 'open:drawer', 'editSettings', { model: model, groupCollection: settingGroupCollection } );\n\t\t\t\t}\n\n\t\t\t\tthis.trigger( 'change:part', this );\n\t\t\t}\n\t\t},\n\t\t\n\t\tnext: function (){\n\t\t\t/*\n\t\t\t * If this isn't the last part, move forward.\n\t\t\t */\n\t\t\tif ( this.hasNext() ) {\n\t\t\t\tthis.setElement( this.at( this.indexOf( this.getElement() ) + 1 ) );\n\t\t\t}\n\t\t\t\n\t\t\treturn this;\n\t\t},\n\n\t\tprevious: function() {\n\t\t\t/*\n\t\t\t * If this isn't the first part, move backward.\n\t\t\t */\n\t\t\tif ( this.hasPrevious() ) {\n\t\t\t\tthis.setElement( this.at( this.indexOf( this.getElement() ) - 1 ) );\t\n\t\t\t}\n\t\t\t\n\t\t\treturn this;\n\t\t},\n\n\t\thasNext: function() {\n\t\t\tif ( 0 == this.length ) return false;\n\t\t\treturn this.length - 1 != this.indexOf( this.getElement() );\n\t\t},\n\n\t\thasPrevious: function() {\n\t\t\tif ( 0 == this.length ) return false;\n\t\t\treturn 0 != this.indexOf( this.getElement() );\n\t\t},\n\n\t\tgetFormContentData: function() {\n\t\t\treturn this.getElement().get( 'formContentData' );\n\t\t},\n\n\t\tupdateOrder: function() {\n\t\t\tthis.each( function( model, index ) {\n\t\t\t\tmodel.set( 'order', index );\n\t\t\t} );\n\t\t\tthis.sort();\n\t\t},\n\n\t\tappend: function( model ) {\n\t\t    var order = _.max( this.pluck( 'order' ) ) + 1;\n\t\t    if( model instanceof Backbone.Model ) {\n\t\t        model.set( 'order', order );\n\t\t    } else {\n\t\t        model.order = order;\n\t\t    }\n\t\t    return this.add( model );\n\t\t}\n\t} );\n\n\treturn collection;\n} );\n","/**\n * Holds our part collection.\n * \n * @package Ninja Forms Multi-Part\n * @subpackage Fields\n * @copyright (c) 2016 WP Ninjas\n * @since 3.0\n */\ndefine( 'controllers/data',[ 'models/partCollection' ], function ( PartCollection) {\n\tvar controller = Marionette.Object.extend( {\n\t\tinitialize: function() {\n\t\t\t/*\n\t\t\t * Instantiate our part collection.\n\t\t\t */\n\t\t\tnfRadio.channel( 'mp' ).reply( 'init:partCollection', this.initPartCollection, this );\n\n\t\t\t/*\n\t\t\t * Listen for requests for our part collection.\n\t\t\t */\n\t\t\tnfRadio.channel( 'mp' ).reply( 'get:collection', this.getCollection, this );\n\n\t\t\t/*\n\t\t\t * When we add a field to our field collection, collection, trigger an \"add:model\"\n\t\t\t */\n\t\t\tthis.listenTo( nfRadio.channel( 'fields' ), 'render:newField', this.addField );\n\t\t},\n\n\t\tinitPartCollection: function( partCollection ) {\n\t\t\tthis.collection = partCollection;\n\t\t},\n\n\t\tgetCollection: function() {\n\t\t\treturn this.collection;\n\t\t},\n\n\t\taddField: function( fieldModel ) {\n\t\t\tthis.collection.getFormContentData().trigger( 'add:field', fieldModel );\n\t\t\tif( 1 == this.collection.getFormContentData().length ) {\n\t\t\t\tthis.collection.getFormContentData().trigger( 'reset' );\n\t\t\t}\n\t\t}\n\n\t});\n\n\treturn controller;\n} );\n","/**\n * Listen for clicks on our previous and next buttons\n * \n * @package Ninja Forms Multi-Part\n * @subpackage Fields\n * @copyright (c) 2016 WP Ninjas\n * @since 3.0\n */\ndefine(\t'controllers/clickControls',[],\tfunction () {\n\tvar controller = Marionette.Object.extend( {\n\t\tinitialize: function() {\n\t\t\tthis.listenTo( nfRadio.channel( 'mp' ), 'click:previous', this.clickPrevious );\n\t\t\tthis.listenTo( nfRadio.channel( 'mp' ), 'click:next', this.clickNext );\n\t\t\tthis.listenTo( nfRadio.channel( 'mp' ), 'click:new', this.clickNew );\n\t\t\tthis.listenTo( nfRadio.channel( 'mp' ), 'click:part', this.clickPart );\n\n\t\t\tthis.listenTo( nfRadio.channel( 'setting-name-mp_remove' ), 'click:extra', this.clickRemove );\n\t\t\tthis.listenTo( nfRadio.channel( 'setting-name-mp_duplicate' ), 'click:extra', this.clickDuplicate );\n\n\t\t},\n\n\t\tclickPrevious: function( e ) {\n\t\t\tvar collection = nfRadio.channel( 'mp' ).request( 'get:collection' );\n\t\t\tcollection.previous();\n\t\t},\n\n\t\tclickNext: function( e ) {\n\t\t\tvar collection = nfRadio.channel( 'mp' ).request( 'get:collection' );\n\t\t\tcollection.next();\n\t\t},\n\n\t\tclickNew: function( e ) {\n\t\t\tvar collection = nfRadio.channel( 'mp' ).request( 'get:collection' );\n\t\t\tvar model = collection.append({});\n\t\t\t\n\t\t\t/*\n\t\t\t * Register our new part to the change manager.\n\t\t\t */\n\t\t\t// Set our 'clean' status to false so that we get a notice to publish changes\n\t\t\tnfRadio.channel( 'app' ).request( 'update:setting', 'clean', false );\n\t\t\t// Update our preview\n\t\t\tnfRadio.channel( 'app' ).request( 'update:db' );\n\n\t\t\t// Add our field addition to our change log.\n\t\t\tvar label = {\n\t\t\t\tobject: 'Part',\n\t\t\t\tlabel: model.get( 'title' ),\n\t\t\t\tchange: 'Added',\n\t\t\t\tdashicon: 'plus-alt'\n\t\t\t};\n\n\t\t\tvar data = {\n\t\t\t\tcollection: model.collection\n\t\t\t};\n\n\t\t\tvar newChange = nfRadio.channel( 'changes' ).request( 'register:change', 'addPart', model, null, label, data );\n\t\t},\n\n\t\tclickPart: function( e, partModel ) {\n\t\t\tif ( partModel == partModel.collection.getElement( partModel ) ) {\n\t\t\t\t/*\n\t\t\t\t * If we are on the active part, open the drawer for that part.\n\t\t\t\t */\n\t\t\t\tvar settingGroupCollection = nfRadio.channel( 'mp' ).request( 'get:settingGroupCollection' );\n\t\t\t\tnfRadio.channel( 'app' ).request( 'open:drawer', 'editSettings', { model: partModel, groupCollection: settingGroupCollection } );\n\t\t\t} else {\n\t\t\t\t/*\n\t\t\t\t * If we aren't on the active part, move to it.\n\t\t\t\t */\n\t\t\t\tpartModel.collection.setElement( partModel );\n\t\t\t}\n\t\t},\n\n\t\tclickRemove: function( e, settingModel, partModel, settingView ) {\n\t\t\t/*\n\t\t\t * Register our change.\n\t\t\t */\n\t\t\t// Set our 'clean' status to false so that we get a notice to publish changes\n\t\t\tnfRadio.channel( 'app' ).request( 'update:setting', 'clean', false );\n\t\t\t// Update our preview\n\t\t\tnfRadio.channel( 'app' ).request( 'update:db' );\n\n\t\t\t// Add our field addition to our change log.\n\t\t\tvar label = {\n\t\t\t\tobject: 'Part',\n\t\t\t\tlabel: partModel.get( 'title' ),\n\t\t\t\tchange: 'Removed',\n\t\t\t\tdashicon: 'dismiss'\n\t\t\t};\n\n\t\t\tvar data = {\n\t\t\t\tcollection: partModel.collection\n\t\t\t};\n\n\t\t\tvar newChange = nfRadio.channel( 'changes' ).request( 'register:change', 'removePart', partModel, null, label, data );\n\t\t\t/*\n\t\t\t * Remove our part.\n\t\t\t */\n\t\t\tpartModel.collection.remove( partModel );\n\t\t},\n\n\t\tclickDuplicate: function( e, settingModel, partModel, settingView ) {\n\t\t\tvar partClone = nfRadio.channel( 'app' ).request( 'clone:modelDeep', partModel );\n\t\t\tpartModel.collection.add( partClone );\n\t\t\tpartClone.set( 'order', partModel.get( 'order' ) );\n\t\t\tpartModel.collection.updateOrder();\n\t\t\tpartModel.collection.setElement( partClone );\n\n\t\t\t// Set our 'clean' status to false so that we get a notice to publish changes\n\t\t\tnfRadio.channel( 'app' ).request( 'update:setting', 'clean', false );\n\t\t\t// Update our preview\n\t\t\tnfRadio.channel( 'app' ).request( 'update:db' );\n\n\t\t\t// Add our field addition to our change log.\n\t\t\tvar label = {\n\t\t\t\tobject: 'Part',\n\t\t\t\tlabel: partClone.get( 'title' ),\n\t\t\t\tchange: 'Duplicated',\n\t\t\t\tdashicon: 'admin-page'\n\t\t\t};\n\n\t\t\tvar data = {\n\t\t\t\tcollection: partClone.collection\n\t\t\t};\n\n\t\t\tvar newChange = nfRadio.channel( 'changes' ).request( 'register:change', 'duplicatePart', partClone, null, label, data );\n\t\t}\n\n\t});\n\n\treturn controller;\n} );\n","/**\n * Listen for drag events on our arrows.\n * \n * @package Ninja Forms Multi-Part\n * @subpackage Fields\n * @copyright (c) 2016 WP Ninjas\n * @since 3.0\n */\ndefine(\t'controllers/gutterDroppables',[],\tfunction () {\n\tvar controller = Marionette.Object.extend( {\n\t\tinitialize: function() {\n\t\t\tthis.listenTo( nfRadio.channel( 'mp' ), 'over:gutter', this.over );\n\t\t\tthis.listenTo( nfRadio.channel( 'mp' ), 'out:gutter', this.out );\n\t\t\tthis.listenTo( nfRadio.channel( 'mp' ), 'drop:rightGutter', this.dropRight );\n\t\t\tthis.listenTo( nfRadio.channel( 'mp' ), 'drop:leftGutter', this.dropLeft );\n\t\t},\n\n\t\tover: function( ui, partCollection ) {\n\t\t\t/*\n\t\t\t * Remove any other draggable placeholders.\n\t\t\t */\n\t\t\tjQuery( '#nf-main' ).find( '.nf-fields-sortable-placeholder' ).addClass( 'nf-sortable-removed' ).removeClass( 'nf-fields-sortable-placeholder' );\n\n\t\t\t// Trigger Ninja Forms default handler for being over a field sortable.\n\t\t\tui.item = ui.draggable;\n\t\t\tnfRadio.channel( 'app' ).request( 'over:fieldsSortable', ui );\n\t\t\t\n\t\t\t/*\n\t\t\t * If we hover over our droppable for more than x seconds, change the part.\n\t\t\t */\n\t\t\t// setTimeout( this.changePart, 1500, ui, partCollection );\n\t\t},\n\n\t\tout: function( ui, partCollection ) {\n\t\t\t/*\n\t\t\t * Re-add any draggable placeholders that we removed.\n\t\t\t */\n\t\t\tjQuery( '#nf-main' ).find( '.nf-sortable-removed' ).addClass( 'nf-fields-sortable-placeholder' );\n\t\t\t\n\t\t\t// Trigger Ninja Forms default handler for being out of a field sortable.\n\t\t\tui.item = ui.draggable;\n\t\t\tnfRadio.channel( 'app' ).request( 'out:fieldsSortable', ui );\n\n\t\t\t/*\n\t\t\t * If we hover over our droppable for more than x seconds, change the part.\n\t\t\t */\n\t\t\t// clearTimeout( this.changePart );\n\t\t},\n\n\t\tdrop: function( ui, partCollection, dir ) {\n\t\t\tui.draggable.dropping = true;\n\t\t\tui.item = ui.draggable;\n\t\t\tnfRadio.channel( 'app' ).request( 'out:fieldsSortable', ui );\n\t\t\tnfRadio.channel( 'fields' ).request( 'sort:fields', null, null, false );\n\n\t\t\t/*\n\t\t\t * If we hover over our droppable for more than x seconds, change the part.\n\t\t\t */\n\t\t\t// clearTimeout( this.changePart );\t\t\t\t\n\t\t},\n\n\t\tdropLeft: function( ui, partCollection ) {\n\t\t\tthis.drop( ui, partCollection, 'left' );\n\t\t\t/*\n\t\t\t * Check to see if we have a previous part.\n\t\t\t */\n\t\t\tif ( ! partCollection.hasPrevious() ) return;\n\t\t\t/*\n\t\t\t * If we're dealing with a field that already exists on our form, handle moving it.\n\t\t\t */\n\t\t\tif ( jQuery( ui.draggable ).hasClass( 'nf-field-wrap' ) ) {\n\t\t\t\tvar fieldModel = nfRadio.channel( 'fields' ).request( 'get:field', jQuery( ui.draggable ).data( 'id' ) );\n\t\t\t\t/*\n\t\t\t\t * Add the dragged field to the previous part.\n\t\t\t\t */\n\t\t\t\tvar oldOrder = fieldModel.get( 'order' );\n\n\t\t\t\tpartCollection.getFormContentData().trigger( 'remove:field', fieldModel );\n\t\t\t\tvar previousPart = partCollection.at( partCollection.indexOf( partCollection.getElement() ) - 1 );\n\t\t\t\tpreviousPart.get( 'formContentData' ).trigger( 'append:field', fieldModel );\n\t\t\t\t\n\t\t\t\t/*\n\t\t\t\t * Register our part change to the change manager.\n\t\t\t\t */\n\t\t\t\t// Set our 'clean' status to false so that we get a notice to publish changes\n\t\t\t\tnfRadio.channel( 'app' ).request( 'update:setting', 'clean', false );\n\t\t\t\t// Update our preview\n\t\t\t\tnfRadio.channel( 'app' ).request( 'update:db' );\n\n\t\t\t\t// Add our field addition to our change log.\n\t\t\t\tvar label = {\n\t\t\t\t\tobject: 'Field',\n\t\t\t\t\tlabel: fieldModel.get( 'label' ),\n\t\t\t\t\tchange: 'Changed Part',\n\t\t\t\t\tdashicon: 'image-flip-horizontal'\n\t\t\t\t};\n\n\t\t\t\tvar data = {\n\t\t\t\t\toldPart: partCollection.getElement(),\n\t\t\t\t\tnewPart: previousPart,\n\t\t\t\t\tfieldModel: fieldModel,\n\t\t\t\t\toldOrder: oldOrder\n\t\t\t\t};\n\n\t\t\t\tvar newChange = nfRadio.channel( 'changes' ).request( 'register:change', 'fieldChangePart', previousPart, null, label, data );\n\n\t\t\t} else if ( jQuery( ui.draggable ).hasClass( 'nf-field-type-draggable' ) ) {\n\t\t\t\tvar type = jQuery( ui.draggable ).data( 'id' );\n\t\t\t\tvar fieldModel = this.addField( type, partCollection );\n\t\t\t\t/*\n\t\t\t\t * We have a previous part. Add the new field to it.\n\t\t\t\t */\n\t\t\t\tpartCollection.at( partCollection.indexOf( partCollection.getElement() ) - 1 ).get( 'formContentData' ).trigger( 'append:field', fieldModel );\n\t\t\t} else {\n\t\t\t\t/*\n\t\t\t\t * We are dropping a stage\n\t\t\t\t */\n\t\t\t\t\n\t\t\t\t// Make sure that our staged fields are sorted properly.\t\n\t\t\t\tnfRadio.channel( 'fields' ).request( 'sort:staging' );\n\t\t\t\t// Grab our staged fields.\n\t\t\t\tvar stagedFields = nfRadio.channel( 'fields' ).request( 'get:staging' );\n\n\t\t\t\t_.each( stagedFields.models, function( field, index ) {\n\t\t\t\t\t// Add our field.\n\t\t\t\t\t\n\t\t\t\t\tvar fieldModel = this.addField( field.get( 'slug' ), partCollection );\n\t\t\t\t\tpartCollection.at( partCollection.indexOf( partCollection.getElement() ) - 1 ).get( 'formContentData' ).trigger( 'append:field', fieldModel );\n\t\t\t\t}, this );\n\n\t\t\t\t// Clear our staging\n\t\t\t\tnfRadio.channel( 'fields' ).request( 'clear:staging' );\n\t\t\t}\n\t\t},\n\n\t\tdropRight: function( ui, partCollection ) {\n\t\t\tthis.drop( ui, partCollection );\n\t\t\t/*\n\t\t\t * If we're dealing with a field that already exists on our form, handle moving it.\n\t\t\t */\n\t\t\tif ( jQuery( ui.draggable ).hasClass( 'nf-field-wrap' ) ) {\n\t\t\t\tvar fieldModel = nfRadio.channel( 'fields' ).request( 'get:field', jQuery( ui.draggable ).data( 'id' ) );\n\t\t\t\t/*\n\t\t\t\t * Check to see if we have a next part.\n\t\t\t\t */\n\t\t\t\tif ( partCollection.hasNext() ) {\n\t\t\t\t\t/*\n\t\t\t\t\t * Add the dragged field to the next part.\n\t\t\t\t\t */\n\t\t\t\t\tvar oldOrder = fieldModel.get( 'order' );\n\n\t\t\t\t\tpartCollection.getFormContentData().trigger( 'remove:field', fieldModel );\n\t\t\t\t\tvar nextPart = partCollection.at( partCollection.indexOf( partCollection.getElement() ) + 1 );\n\t\t\t\t\tnextPart.get( 'formContentData' ).trigger( 'append:field', fieldModel );\n\t\t\t\t\n\t\t\t\t\t/*\n\t\t\t\t\t * Register our part change to the change manager.\n\t\t\t\t\t */\n\t\t\t\t\t// Set our 'clean' status to false so that we get a notice to publish changes\n\t\t\t\t\tnfRadio.channel( 'app' ).request( 'update:setting', 'clean', false );\n\t\t\t\t\t// Update our preview\n\t\t\t\t\tnfRadio.channel( 'app' ).request( 'update:db' );\n\n\t\t\t\t\t// Add our field addition to our change log.\n\t\t\t\t\tvar label = {\n\t\t\t\t\t\tobject: 'Field',\n\t\t\t\t\t\tlabel: fieldModel.get( 'label' ),\n\t\t\t\t\t\tchange: 'Changed Part',\n\t\t\t\t\t\tdashicon: 'image-flip-horizontal'\n\t\t\t\t\t};\n\n\t\t\t\t\tvar data = {\n\t\t\t\t\t\toldPart: partCollection.getElement(),\n\t\t\t\t\t\tnewPart: nextPart,\n\t\t\t\t\t\tfieldModel: fieldModel,\n\t\t\t\t\t\toldOrder: oldOrder\n\t\t\t\t\t};\n\n\t\t\t\t\tvar newChange = nfRadio.channel( 'changes' ).request( 'register:change', 'fieldChangePart', nextPart, null, label, data );\n\n\t\t\t\t} else {\n\t\t\t\t\tvar oldPart = partCollection.getElement();\n\t\t\t\t\t/*\n\t\t\t\t\t * Add the dragged field to a new part.\n\t\t\t\t\t */\n\t\t\t\t\tpartCollection.getFormContentData().trigger( 'remove:field', fieldModel );\n\t\t\t\t\tvar newPart = partCollection.append( { formContentData: [ fieldModel.get( 'key' ) ] } );\n\t\t\t\t\tpartCollection.setElement( newPart );\n\n\t\t\t\t\t/*\n\t\t\t\t\t * Register our new part to the change manager.\n\t\t\t\t\t */\n\t\t\t\t\t// Set our 'clean' status to false so that we get a notice to publish changes\n\t\t\t\t\tnfRadio.channel( 'app' ).request( 'update:setting', 'clean', false );\n\t\t\t\t\t// Update our preview\n\t\t\t\t\tnfRadio.channel( 'app' ).request( 'update:db' );\n\n\t\t\t\t\t// Add our field addition to our change log.\n\t\t\t\t\tvar label = {\n\t\t\t\t\t\tobject: 'Part',\n\t\t\t\t\t\tlabel: newPart.get( 'title' ),\n\t\t\t\t\t\tchange: 'Added',\n\t\t\t\t\t\tdashicon: 'plus-alt'\n\t\t\t\t\t};\n\n\t\t\t\t\tvar data = {\n\t\t\t\t\t\tcollection: newPart.collection,\n\t\t\t\t\t\toldPart: oldPart,\n\t\t\t\t\t\tfieldModel: fieldModel\n\t\t\t\t\t};\n\n\t\t\t\t\tvar newChange = nfRadio.channel( 'changes' ).request( 'register:change', 'addPart', newPart, null, label, data );\n\n\t\t\t\t}\n\t\t\t} else if ( jQuery( ui.draggable ).hasClass( 'nf-field-type-draggable' ) ) {\n\t\t\t\tvar type = jQuery( ui.draggable ).data( 'id' );\n\t\t\t\tvar fieldModel = this.addField( type, partCollection );\n\t\t\t\tif ( partCollection.hasNext() ) {\n\t\t\t\t\t/*\n\t\t\t\t\t * We have a next part. Add the new field to it.\n\t\t\t\t\t */\n\t\t\t\t\tpartCollection.at( partCollection.indexOf( partCollection.getElement() ) + 1 ).get( 'formContentData' ).trigger( 'append:field', fieldModel );\n\t\t\t\t\treturn false;\n\t\t\t\t} else {\n\t\t\t\t\t/*\n\t\t\t\t\t * We don't have a next part, so add a new one, then add this field to it.\n\t\t\t\t\t */\n\t\t\t\t\tvar newPart = partCollection.append( { formContentData: [ fieldModel.get( 'key' ) ] } );\n\t\t\t\t\tpartCollection.setElement( newPart );\n\n\t\t\t\t\t/*\n\t\t\t\t\t * Register our new part to the change manager.\n\t\t\t\t\t */\n\t\t\t\t\t// Set our 'clean' status to false so that we get a notice to publish changes\n\t\t\t\t\tnfRadio.channel( 'app' ).request( 'update:setting', 'clean', false );\n\t\t\t\t\t// Update our preview\n\t\t\t\t\tnfRadio.channel( 'app' ).request( 'update:db' );\n\n\t\t\t\t\t// Add our field addition to our change log.\n\t\t\t\t\tvar label = {\n\t\t\t\t\t\tobject: 'Part',\n\t\t\t\t\t\tlabel: newPart.get( 'title' ),\n\t\t\t\t\t\tchange: 'Added',\n\t\t\t\t\t\tdashicon: 'plus-alt'\n\t\t\t\t\t};\n\n\t\t\t\t\tvar data = {\n\t\t\t\t\t\tcollection: newPart.collection,\n\n\t\t\t\t\t};\n\n\t\t\t\t\tvar newChange = nfRadio.channel( 'changes' ).request( 'register:change', 'addPart', newPart, null, label, data );\n\n\t\t\t\t\treturn newPart;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t// Make sure that our staged fields are sorted properly.\t\n\t\t\t\tnfRadio.channel( 'fields' ).request( 'sort:staging' );\n\t\t\t\t// Grab our staged fields.\n\t\t\t\tvar stagedFields = nfRadio.channel( 'fields' ).request( 'get:staging' );\n\t\t\t\t\n\t\t\t\tvar keys = [];\n\t\t\t\t_.each( stagedFields.models, function( field, index ) {\n\t\t\t\t\t// Add our field.\n\t\t\t\t\tvar fieldModel = this.addField( field.get( 'slug' ), partCollection );\n\t\t\t\t\tif ( partCollection.hasNext() ) {\n\t\t\t\t\t\tpartCollection.at( partCollection.indexOf( partCollection.getElement() ) + 1 ).get( 'formContentData' ).trigger( 'append:field', fieldModel );\n\t\t\t\t\t} else {\n\t\t\t\t\t\tkeys.push( fieldModel.get( 'key' ) );\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t}, this );\n\n\t\t\t\tif ( ! partCollection.hasNext() ) {\n\t\t\t\t\t/*\n\t\t\t\t\t * Add each of our fields to our next part\n\t\t\t\t\t */\n\t\t\t\t\tvar newPart = partCollection.append( { formContentData: keys } );\n\t\t\t\t\tpartCollection.setElement( newPart );\n\n\t\t\t\t\t/*\n\t\t\t\t\t * Register our new part to the change manager.\n\t\t\t\t\t */\n\t\t\t\t\t// Set our 'clean' status to false so that we get a notice to publish changes\n\t\t\t\t\tnfRadio.channel( 'app' ).request( 'update:setting', 'clean', false );\n\t\t\t\t\t// Update our preview\n\t\t\t\t\tnfRadio.channel( 'app' ).request( 'update:db' );\n\n\t\t\t\t\t// Add our field addition to our change log.\n\t\t\t\t\tvar label = {\n\t\t\t\t\t\tobject: 'Part',\n\t\t\t\t\t\tlabel: newPart.get( 'title' ),\n\t\t\t\t\t\tchange: 'Added',\n\t\t\t\t\t\tdashicon: 'plus-alt'\n\t\t\t\t\t};\n\n\t\t\t\t\tvar data = {\n\t\t\t\t\t\tcollection: newPart.collection\n\t\t\t\t\t};\n\n\t\t\t\t\tvar newChange = nfRadio.channel( 'changes' ).request( 'register:change', 'addPart', newPart, null, label, data );\t\t\t\t\n\t\t\t\t}\n\n\t\t\t\t// Clear our staging\n\t\t\t\tnfRadio.channel( 'fields' ).request( 'clear:staging' );\n\t\t\t}\n\t\t},\n\n\t\taddField: function( type, collection ) {\n\t\t\tvar fieldType = nfRadio.channel( 'fields' ).request( 'get:type', type ); \n\t\t\t// Add our field\n\t\t\tvar fieldModel = nfRadio.channel( 'fields' ).request( 'add', {\n\t\t\t\tlabel: fieldType.get( 'nicename' ),\n\t\t\t\ttype: type\n\t\t\t} );\n\n\t\t\tcollection.getFormContentData().trigger( 'remove:field', fieldModel );\n\t\t\treturn fieldModel;\n\t\t},\n\n\t\tchangePart: function( ui, partCollection ) {\n\t\t\tpartCollection.next();\n\t\t\tjQuery( ui.helper ).draggable();\n\t\t}\n\n\t});\n\n\treturn controller;\n} );\n","/**\n * Stores part setting information.\n *\n * @package Ninja Forms builder\n * @subpackage App - Edit Settings Drawer\n * @copyright (c) 2016 WP Ninjas\n * @since 3.0\n */\ndefine( 'controllers/partSettings',[], function( SettingGroupCollection ) {\n\tvar controller = Marionette.Object.extend( {\n\t\tinitialize: function() {\n\t\t\t/*\n\t\t\t * Instantiate our setting group collection\n\t\t\t */\n\t\t\tthis.setupCollection();\n\n\t\t\t// Respond to requests for our part setting group collection\n\t\t\tnfRadio.channel( 'mp' ).reply( 'get:settingGroupCollection', this.getCollection, this );\n\t\t},\n\n\t\tsetupCollection: function() {\n\t\t\tvar settingGroupCollection = nfRadio.channel( 'app' ).request( 'get:settingGroupCollectionDefinition' );\n\t\t\tthis.collection = new settingGroupCollection([\n\t\t\t\t{\n\t\t\t\t\tid: 'primary',\n\t\t\t\t\tlabel: '',\n\t\t\t\t\tdisplay: true,\n\t\t\t\t\tpriority: 100,\n\t\t\t\t\tsettings: [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tname: 'title',\n\t\t\t\t\t\t\ttype: 'textbox',\n\t\t\t\t\t\t\tlabel: 'Part Title',\n\t\t\t\t\t\t\twidth: 'full',\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tname: 'mp_duplicate',\n\t\t\t\t\t\t\ttype: 'html',\n\t\t\t\t\t\t\twidth: 'one-half',\n\t\t\t\t\t\t\tvalue: '<a href=\"#\" class=\"nf-duplicate-part nf-button secondary extra\">Duplicate Part</a>'\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tname: 'mp_remove',\n\t\t\t\t\t\t\ttype: 'html',\n\t\t\t\t\t\t\twidth: 'one-half',\n\t\t\t\t\t\t\tvalue: '<a href=\"#\" class=\"nf-remove-part nf-button secondary extra\">Remove Part</a>'\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t] );\n\t\t},\n\n\t\t/**\n\t\t * Return our setting group collection.\n\t\t *\n\t\t * @since  3.0\n\t\t * @return backbone.collection\n\t\t */\n\t\tgetCollection: function() {\n\t\t\treturn this.collection;\n\t\t}\n\n\t});\n\n\treturn controller;\n} );\n\n","/**\n * Handles events for the part items in our bottom drawer.\n * \n * @package Ninja Forms Multi-Part\n * @subpackage Fields\n * @copyright (c) 2016 WP Ninjas\n * @since 3.0\n */\ndefine(\t'controllers/partDroppable',[],\tfunction () {\n\tvar controller = Marionette.Object.extend( {\n\t\tinitialize: function() {\n\t\t\tthis.listenTo( nfRadio.channel( 'mp' ), 'over:part', this.over );\n\t\t\tthis.listenTo( nfRadio.channel( 'mp' ), 'out:part', this.out );\n\t\t\tthis.listenTo( nfRadio.channel( 'mp' ), 'drop:part', this.drop );\n\t\t},\n\n\t\tover: function( e, ui, partModel, partView ) {\n\t\t\t/*\n\t\t\t * Remove any other draggable placeholders.\n\t\t\t */\n\t\t\tjQuery( '#nf-main' ).find( '.nf-fields-sortable-placeholder' ).addClass( 'nf-sortable-removed' ).removeClass( 'nf-fields-sortable-placeholder' );\n\n\t\t\t// Trigger Ninja Forms default handler for being over a field sortable.\n\t\t\tui.item = ui.draggable;\n\n\t\t\tif ( jQuery( ui.draggable ).hasClass( 'nf-field-type-draggable' ) || jQuery( ui.draggable ).hasClass( 'nf-stage' ) ) {\n\t\t\t\tnfRadio.channel( 'app' ).request( 'over:fieldsSortable', ui );\n\t\t\t} else {\n\t\t\t\tjQuery( ui.helper ).css( { 'width': '300px', 'height': '50px', 'opacity': '0.7' } );\n\t\t\t}\n\t\t},\n\n\t\tout: function( e, ui, partModel, partView ) {\n\t\t\t/*\n\t\t\t * Re-add any draggable placeholders that we removed.\n\t\t\t */\n\t\t\tjQuery( '#nf-main' ).find( '.nf-sortable-removed' ).addClass( 'nf-fields-sortable-placeholder' );\n\n\t\t\t// Trigger Ninja Forms default handler for being out of a field sortable.\n\t\t\tui.item = ui.draggable;\n\t\t\tif ( jQuery( ui.draggable ).hasClass( 'nf-field-type-draggable' ) || jQuery( ui.draggable ).hasClass( 'nf-stage' ) ) {\n\t\t\t\tnfRadio.channel( 'app' ).request( 'out:fieldsSortable', ui );\n\t\t\t} else {\n\t\t\t\t// Get our sortable element.\n\t\t\t\tvar sortableEl = nfRadio.channel( 'fields' ).request( 'get:sortableEl' );\n\t\t\t\t// Get our fieldwidth.\n\t\t\t\tvar fieldWidth = jQuery( sortableEl ).width();\n\t\t\t\tvar fieldHeight = jQuery( sortableEl ).height();\n\n\t\t\t\tjQuery( ui.helper ).css( { 'width': fieldWidth, 'height': '', 'opacity': '' } );\n\t\t\t}\n\t\t},\n\n\t\tdrop: function( e, ui, partModel, partView ) {\n\t\t\tui.draggable.dropping = true;\n\t\t\t// Trigger Ninja Forms default handler for being out of a field sortable.\n\t\t\tui.item = ui.draggable;\n\t\t\tnfRadio.channel( 'app' ).request( 'out:fieldsSortable', ui );\n\n\t\t\tjQuery( ui.draggable ).effect( 'transfer', { to: jQuery( partView.el ) }, 500 );\n\n\t\t\tif ( jQuery( ui.draggable ).hasClass( 'nf-field-wrap' ) ) { // Dropping a field that already exists\n\t\t\t\tthis.dropField( e, ui, partModel, partView );\n\t\t\t} else if ( jQuery( ui.draggable ).hasClass( 'nf-field-type-draggable' ) ) { // Dropping a new field\n\t\t\t\tthis.dropNewField( e, ui, partModel, partView );\n\t\t\t} else if ( jQuery( ui.draggable ).hasClass( 'nf-stage' ) ) { // Dropping the staging area\n\t\t\t\tthis.dropStaging( e, ui, partModel, partView );\n\t\t\t}\n\t\t},\n\n\t\tdropField: function( e, ui, partModel, partView ) {\n\t\t\t/*\n\t\t\t * If we are dropping a field that exists on our form already:\n\t\t\t * Remove it from the current part.\n\t\t\t * Add it to the new part.\n\t\t\t */\n\t\t\tnfRadio.channel( 'fields' ).request( 'sort:fields', null, null, false );\n\t\t\tnfRadio.channel( 'app' ).request( 'out:fieldsSortable', ui );\n\t\t\tvar fieldModel = nfRadio.channel( 'fields' ).request( 'get:field', jQuery( ui.draggable ).data( 'id' ) );\n\t\t\tvar oldOrder = fieldModel.get( 'order' );\n\t\t\tvar oldPart = partModel.collection.getElement();\n\t\t\tvar newPart = partModel;\n\n\t\t\t/*\n\t\t\t * Add the dragged field to the previous part.\n\t\t\t */\n\t\t\tpartModel.collection.getFormContentData().trigger( 'remove:field', fieldModel );\n\t\t\tpartModel.get( 'formContentData' ).trigger( 'append:field', fieldModel );\n\n\t\t\t/*\n\t\t\t * Register our part change to the change manager.\n\t\t\t */\n\t\t\t// Set our 'clean' status to false so that we get a notice to publish changes\n\t\t\tnfRadio.channel( 'app' ).request( 'update:setting', 'clean', false );\n\t\t\t// Update our preview\n\t\t\tnfRadio.channel( 'app' ).request( 'update:db' );\n\n\t\t\t// Add our field addition to our change log.\n\t\t\tvar label = {\n\t\t\t\tobject: 'Field',\n\t\t\t\tlabel: fieldModel.get( 'label' ),\n\t\t\t\tchange: 'Changed Part',\n\t\t\t\tdashicon: 'image-flip-horizontal'\n\t\t\t};\n\n\t\t\tvar data = {\n\t\t\t\toldPart: oldPart,\n\t\t\t\tnewPart: newPart,\n\t\t\t\tfieldModel: fieldModel,\n\t\t\t\toldOrder: oldOrder\n\t\t\t};\n\n\t\t\tvar newChange = nfRadio.channel( 'changes' ).request( 'register:change', 'fieldChangePart', partModel, null, label, data );\n\t\t},\n\n\t\tdropNewField: function( e, ui, partModel, partView ) {\n\t\t\tvar type = jQuery( ui.draggable ).data( 'id' );\n\t\t\tvar fieldModel = this.addField( type, partModel.collection );\n\t\t\t/*\n\t\t\t * We have a previous part. Add the new field to it.\n\t\t\t */\n\t\t\tpartModel.get( 'formContentData' ).trigger( 'append:field', fieldModel );\n\t\t},\n\n\t\tdropStaging: function( e, ui, partModel, partView ) {\n\t\t\t/*\n\t\t\t * We are dropping a stage\n\t\t\t */\n\t\t\t\n\t\t\t// Make sure that our staged fields are sorted properly.\t\n\t\t\tnfRadio.channel( 'fields' ).request( 'sort:staging' );\n\t\t\t// Grab our staged fields.\n\t\t\tvar stagedFields = nfRadio.channel( 'fields' ).request( 'get:staging' );\n\n\t\t\t_.each( stagedFields.models, function( field, index ) {\n\t\t\t\t// Add our field.\n\t\t\t\tvar fieldModel = this.addField( field.get( 'slug' ), partModel.collection );\n\t\t\t\tpartModel.get( 'formContentData' ).trigger( 'append:field', fieldModel );\n\t\t\t}, this );\n\n\t\t\t// Clear our staging\n\t\t\tnfRadio.channel( 'fields' ).request( 'clear:staging' );\n\t\t},\t\n\n\t\taddField: function( type, collection ) {\n\t\t\tvar fieldType = nfRadio.channel( 'fields' ).request( 'get:type', type ); \n\t\t\t// Add our field\n\t\t\tvar fieldModel = nfRadio.channel( 'fields' ).request( 'add', {\n\t\t\t\tlabel: fieldType.get( 'nicename' ),\n\t\t\t\ttype: type\n\t\t\t} );\n\n\t\t\tcollection.getFormContentData().trigger( 'remove:field', fieldModel );\n\t\t\treturn fieldModel;\n\t\t}\n\n\n\t});\n\n\treturn controller;\n} );\n","/**\n * Handles events for our bottom drawer part title sortable\n * \n * @package Ninja Forms Multi-Part\n * @subpackage Fields\n * @copyright (c) 2016 WP Ninjas\n * @since 3.0\n */\ndefine(\t'controllers/partSortable',[],\tfunction () {\n\tvar controller = Marionette.Object.extend( {\n\t\tinitialize: function() {\n\t\t\tthis.listenTo( nfRadio.channel( 'mp' ), 'start:partSortable', this.start );\n\t\t\tthis.listenTo( nfRadio.channel( 'mp' ), 'stop:partSortable', this.stop );\n\t\t\tthis.listenTo( nfRadio.channel( 'mp' ), 'update:partSortable', this.update );\n\t\t},\n\n\t\tstart: function( e, ui, collection, collectionView ) {\n\t\t\t// If we aren't dragging an item in from types or staging, update our change log.\n\t\t\tif( ! jQuery( ui.item ).hasClass( 'nf-field-type-draggable' ) && ! jQuery( ui.item ).hasClass( 'nf-stage' ) ) { \n\t\t\t\tjQuery( ui.item ).css( 'opacity', '0.5' ).show();\n\t\t\t\tjQuery( ui.helper ).css( 'opacity', '0.75' );\n\t\t\t}\n\t\t},\n\n\t\tstop: function( e, ui, collection, collectionView ) {\n\t\t\t// If we aren't dragging an item in from types or staging, update our change log.\n\t\t\tif( ! jQuery( ui.item ).hasClass( 'nf-field-type-draggable' ) && ! jQuery( ui.item ).hasClass( 'nf-stage' ) ) { \n\t\t\t\tjQuery( ui.item ).css( 'opacity', '' );\n\t\t\t}\n\t\t},\n\n\t\tupdate: function( e, ui, collection, collectionView ) {\n\t\t\tvar partModel = collection.findWhere( { key: jQuery( ui.item ).prop( 'id' ) } );\n\t\t\t/*\n\t\t\t * Store our current order.\n\t\t\t */\n\t\t\tvar oldOrder = {};\n\t\t\tcollection.each( function( partModel, index ) {\n\t\t\t\toldOrder[ partModel.get( 'key' ) ] = index;\n\t\t\t} );\n\n\t\t\tjQuery( ui.item ).css( 'opacity', '' );\n\n\t\t\tvar order = _.without( jQuery( collectionView.el ).sortable( 'toArray' ), '' );\n\t\t\t_.each( order, function( key, index ) {\n\t\t\t\tcollection.findWhere( { key: key } ).set( 'order', index );\n\t\t\t}, this );\n\t\t\tcollection.sort();\n\n\t\t\t/*\n\t\t\t * Register our part change to the change manager.\n\t\t\t */\n\t\t\t//Set our 'clean' status to false so that we get a notice to publish changes\n\t\t\tnfRadio.channel( 'app' ).request( 'update:setting', 'clean', false );\n\t\t\t// Update our preview\n\t\t\tnfRadio.channel( 'app' ).request( 'update:db' );\n\n\t\t\t// Add our field addition to our change log.\n\t\t\tvar label = {\n\t\t\t\tobject: 'Part',\n\t\t\t\tlabel: partModel.get( 'title' ),\n\t\t\t\tchange: 'Sorted',\n\t\t\t\tdashicon: 'sort'\n\t\t\t};\n\n\t\t\tvar data = {\n\t\t\t\toldOrder: oldOrder,\n\t\t\t\tcollection: collection\n\t\t\t};\n\n\t\t\tvar newChange = nfRadio.channel( 'changes' ).request( 'register:change', 'sortParts', partModel, null, label, data );\n\t\t},\n\n\t});\n\n\treturn controller;\n} );\n","/**\n * Respond to undo requests.\n * \n * @package Ninja Forms Multi-Part\n * @subpackage Fields\n * @copyright (c) 2016 WP Ninjas\n * @since 3.0\n */\ndefine( 'controllers/undo',[], function() {\n\tvar controller = Marionette.Object.extend( {\n\t\tinitialize: function() {\n\t\t\tnfRadio.channel( 'changes' ).reply( 'undo:addPart', this.undoAddPart, this );\n\t\t\tnfRadio.channel( 'changes' ).reply( 'undo:removePart', this.undoRemovePart, this );\n\t\t\tnfRadio.channel( 'changes' ).reply( 'undo:duplicatePart', this.undoDupilcatePart, this );\n\t\t\tnfRadio.channel( 'changes' ).reply( 'undo:fieldChangePart', this.undoFieldChangePart, this );\n\t\t\tnfRadio.channel( 'changes' ).reply( 'undo:sortParts', this.undoSortParts, this );\n\t\t},\n\n\t\tundoAddPart: function( change, undoAll ) {\n\t\t\tvar partModel = change.get( 'model' );\n\t\t\tvar data = change.get( 'data' );\n\t\t\tvar partCollection = data.collection;\n\t\t\tpartCollection.remove( partModel );\n\n\t\t\t/*\n\t\t\t * If we have a fieldModel, then we dragged an existing field to create our part.\n\t\t\t * Undoing should put that field back where it was.\n\t\t\t */\n\t\t\tif ( 'undefined' != typeof data.fieldModel ) {\n\t\t\t\tdata.oldPart.get( 'formContentData' ).trigger( 'add:field', data.fieldModel );\n\t\t\t}\n\n\t\t\t/*\n\t\t\t * Remove any changes that have this model.\n\t\t\t */\n\t\t\tvar changeCollection = nfRadio.channel( 'changes' ).request( 'get:collection' );\n\t\t\tchangeCollection.remove( changeCollection.filter( { model: partModel } ) );\n\t\t\t\n\t\t\tthis.maybeRemoveChange( change, undoAll );\n\t\t},\n\n\t\tundoFieldChangePart: function( change, undoAll ) {\n\t\t\tvar data = change.get( 'data' );\n\t\t\tvar oldPart = data.oldPart;\n\t\t\tvar fieldModel = data.fieldModel;\n\t\t\tvar oldOrder = data.oldOrder;\n\t\t\tvar newPart = data.newPart;\n\n\t\t\tnewPart.get( 'formContentData' ).trigger( 'remove:field', fieldModel );\n\t\t\toldPart.get( 'formContentData' ).trigger( 'add:field', fieldModel );\n\t\t\t\t\t\t\n\t\t\tfieldModel.set( 'order', oldOrder );\n\n\t\t\tthis.maybeRemoveChange( change, undoAll );\n\t\t},\n\n\t\tundoRemovePart: function( change, undoAll ) {\n\t\t\tvar partModel = change.get( 'model' );\n\t\t\tvar data = change.get( 'data' );\n\t\t\tvar partCollection = data.collection;\n\t\t\tpartCollection.add( partModel );\n\t\t\t\n\t\t\tthis.maybeRemoveChange( change, undoAll );\n\t\t},\n\n\t\tundoDupilcatePart: function( change, undoAll ) {\n\t\t\tvar partModel = change.get( 'model' );\n\t\t\tvar data = change.get( 'data' );\n\t\t\tvar partCollection = data.collection;\n\t\t\tpartCollection.remove( partModel );\n\n\t\t\t/*\n\t\t\t * If we have a fieldModel, then we dragged an existing field to create our part.\n\t\t\t * Undoing should put that field back where it was.\n\t\t\t */\n\t\t\tif ( 'undefined' != typeof data.fieldModel ) {\n\t\t\t\tdata.oldPart.get( 'formContentData' ).trigger( 'add:field', data.fieldModel );\n\t\t\t}\n\n\t\t\t/*\n\t\t\t * Remove any changes that have this model.\n\t\t\t */\n\t\t\tvar changeCollection = nfRadio.channel( 'changes' ).request( 'get:collection' );\n\t\t\tchangeCollection.remove( changeCollection.filter( { model: partModel } ) );\n\t\t\t\n\t\t\tthis.maybeRemoveChange( change, undoAll );\n\t\t},\n\n\t\tundoSortParts: function( change, undoAll ) {\n\t\t\tvar collection = change.get( 'data' ).collection;\n\t\t\tvar oldOrder = change.get( 'data' ).oldOrder;\n\n\t\t\tcollection.each( function( partModel ) {\n\t\t\t\tpartModel.set( 'order', oldOrder[ partModel.get( 'key' ) ] );\n\t\t\t} );\n\t\t\tcollection.sort();\n\n\t\t\tthis.maybeRemoveChange( change, undoAll );\n\t\t},\n\n\t\t/**\n\t\t * If our undo action was requested to 'remove' the change from the collection, remove it.\n\t\t * \n\t\t * @since  3.0\n\t\t * @param  backbone.model \tchange \tmodel of our change\n\t\t * @param  boolean \t\t\tremove \tshould we remove this item from our change collection\n\t\t * @return void\n\t\t */\n\t\tmaybeRemoveChange: function( change, undoAll ) {\t\t\t\n\t\t\tvar undoAll = typeof undoAll !== 'undefined' ? undoAll : false;\n\t\t\tif ( ! undoAll ) {\n\t\t\t\t// Update preview.\n\t\t\t\tnfRadio.channel( 'app' ).request( 'update:db' );\n\t\t\t\tvar changeCollection = nfRadio.channel( 'changes' ).request( 'get:collection' );\n\t\t\t\tchangeCollection.remove( change );\n\t\t\t\tif ( 0 == changeCollection.length ) {\n\t\t\t\t\tnfRadio.channel( 'app' ).request( 'update:setting', 'clean', true );\n\t\t\t\t\tnfRadio.channel( 'app' ).request( 'close:drawer' );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t});\n\n\treturn controller;\n} );\n","/*\n * Load our builder controllers\n */\ndefine( \n\t'controllers/loadControllers',[\n\t\t'controllers/data',\n\t\t'controllers/clickControls',\n\t\t'controllers/gutterDroppables',\n\t\t'controllers/partSettings',\n\t\t'controllers/partDroppable',\n\t\t'controllers/partSortable',\n\t\t'controllers/undo'\n\t], \n\tfunction\n\t(\n\t\tData,\n\t\tClickControls,\n\t\tGutterDroppables,\n\t\tPartSettings,\n\t\tPartDroppable,\n\t\tPartSortable,\n\t\tUndo\n\t)\n\t{\n\tvar controller = Marionette.Object.extend( {\n\t\tinitialize: function() {\n\t\t\tnew Data();\n\t\t\tnew ClickControls();\n\t\t\tnew GutterDroppables();\n\t\t\tnew PartSettings();\n\t\t\tnew PartDroppable();\n\t\t\tnew PartSortable();\n\t\t\tnew Undo();\n\t\t}\n\n\t});\n\n\treturn controller;\n} );\n","/**\n * Top drawer part view\n * \n * @package Ninja Forms builder\n * @subpackage App\n * @copyright (c) 2016 WP Ninjas\n * @since 3.0\n */\ndefine( 'views/drawerItem',[], function() {\n\tvar view = Marionette.ItemView.extend({\n\t\ttagName: 'li',\n\t\ttemplate: '#nf-tmpl-mp-drawer-item',\n\n\t\tinitialize: function( options ) {\n\t\t\tthis.collectionView = options.collectionView;\n\t\t\tthis.listenTo( this.model, 'change:title', this.updatedTitle );\n\t\t\tthis.listenTo( this.model.collection, 'change:part', this.maybeChangeActive );\n\t\t},\n\n\t\tupdatedTitle: function() {\n\t\t\tthis.render();\n\t\t\tthis.collectionView.setULWidth( this.collectionView.el );\n\t\t},\n\n\t\tmaybeChangeActive: function() {\n\t\t\tjQuery( this.el ).removeClass( 'active' );\n\t\t\tif ( this.model == this.model.collection.getElement() ) {\n\t\t\t\tjQuery( this.el ).addClass( 'active' );\n\t\t\t}\n\t\t},\n\n\t\tattributes: function() {\n\t\t\treturn {\n\t\t\t\tid: this.model.get( 'key' )\n\t\t\t}\n\t\t},\n\n\t\tonShow: function() {\n\t\t\tvar that = this;\n\t\t\tjQuery( this.el ).droppable( {\n\t\t\t\tactiveClass: 'mp-drag-active',\n\t\t\t\thoverClass: 'mp-drag-hover',\n\t\t\t\taccept: '.nf-field-type-draggable, .nf-field-wrap, .nf-stage',\n\t\t\t\ttolerance: 'pointer',\n\n\t\t\t\tover: function( e, ui ) {\n\t\t\t\t\tnfRadio.channel( 'mp' ).trigger( 'over:part', e, ui, that.model, that );\n\t\t\t\t},\n\n\t\t\t\tout: function( e, ui ) {\n\t\t\t\t\tnfRadio.channel( 'mp' ).trigger( 'out:part', e, ui, that.model, that );\n\t\t\t\t},\n\n\t\t\t\tdrop: function( e, ui ) {\n\t\t\t\t\tnfRadio.channel( 'mp' ).trigger( 'drop:part', e, ui, that.model, that );\n\t\t\t\t}\n\t\t\t} );\n\n\t\t\tthis.maybeChangeActive();\n\t\t},\n\n\t\tevents: {\n\t\t\t'click': 'click',\n\t\t},\n\n\t\tclick: function( e ) {\n\t\t\tnfRadio.channel( 'mp' ).trigger( 'click:part', e, this.model );\n\t\t},\n\n\t\ttemplateHelpers: function() {\n\t\t\tvar that = this;\n\t\t\treturn {\n\t\t\t\tgetIndex: function() {\n\t\t\t\t\treturn that.model.collection.indexOf( that.model ) + 1;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t});\n\n\treturn view;\n} );\n","/**\n * Drawer collection view.\n * \n * @package Ninja Forms builder\n * @subpackage App\n * @copyright (c) 2016 WP Ninjas\n * @since 3.0\n */\ndefine( 'views/drawerCollection',[ 'views/drawerItem' ], function( DrawerItemView ) {\n\tvar view = Marionette.CollectionView.extend( {\n\t\ttagName: 'ul',\n\t\tchildView: DrawerItemView,\n\t\treorderOnSort: true,\n\t\t\n\t\tinitialize: function( options ) {\n\t\t\tthis.drawerLayoutView = options.drawerLayoutView;\n\n\t\t\t/*\n\t\t\t * When we resize our window, maybe show/hide pagination.\n\t\t\t */\n\t\t\tjQuery( window ).on( 'resize', { context: this }, this.resizeEvent );\n\n\t\t\t/*\n\t\t\t * If our new part title is off screen in the drawer, scroll to it.\n\t\t\t */\n\t\t\tthis.listenTo( this.collection, 'change:part', this.maybeScroll );\n\t\t},\n\n\t\tmaybeScroll: function( partCollection ) {\n\t\t\tvar li = jQuery( this.el ).children( '#' + partCollection.getElement().get( 'key' ) );\n\t\t\tif ( 0 == jQuery( li ).length ) return false;\n\t\t\tvar marginLeft = parseInt( jQuery( li ).css( 'marginLeft' ).replace( 'px', '' ) );\n\t\t\tvar viewportWidth = jQuery( this.drawerLayoutView.viewport.el ).width();\n\t\t\tvar diff = jQuery( li ).offset().left + jQuery( li ).outerWidth() + marginLeft - viewportWidth;\n\n\t\t\tjQuery( this.drawerLayoutView.viewport.el ).animate( {\n\t\t\t\tscrollLeft: '+=' + diff\n\t\t\t}, 100 );\n\t\t},\n\n\t\tresizeEvent: function( e ) {\n\t\t\te.data.context.showHidePagination( e.data.context );\n\t\t},\n\n\t\tchildViewOptions: function( model, index ){\n\t\t\tvar that = this;\n\t\t\treturn {\n\t\t\t\tcollectionView: that\n\t\t\t}\n\t\t},\n\n\t\tonShow: function() {\n\t\t\tvar that = this;\n\t\t\tjQuery( this.el ).sortable( {\n\t\t\t\titems: 'li:not(.no-sort)',\n\t\t\t\thelper: 'clone',\n\n\t\t\t\tupdate: function( e, ui ) {\n\t\t\t\t\tnfRadio.channel( 'mp' ).trigger( 'update:partSortable', e, ui, that.collection, that );\n\t\t\t\t},\n\n\t\t\t\tstart: function( e, ui ) {\n\t\t\t\t\tnfRadio.channel( 'mp' ).trigger( 'start:partSortable', e, ui, that.collection, that );\n\t\t\t\t},\n\n\t\t\t\tstop: function( e, ui ) {\n\t\t\t\t\tnfRadio.channel( 'mp' ).trigger( 'stop:partSortable', e, ui, that.collection, that );\n\t\t\t\t}\n\t\t\t} );\n\t\t},\n\n\t\t/**\n\t\t * Set our UL width when we attach the html to the dom.\n\t\t *\n\t\t * @since  3.0\n\t\t * @return void\n\t\t */\n\t\tonAttach: function() {\n\t\t\tthis.setULWidth( this.el );\n\n\t\t\t/*\n\t\t\t * When load, hide the pagination arrows if they aren't needed.\n\t\t\t */\n\t\t\tthis.showHidePagination();\n\t\t},\n\n\t\t/**\n\t\t * Set the width of our UL based upon the size of its items.\n\t\t * \n\t\t * @since 3.0\n\t\t * @return void\n\t\t */\n\t\tsetULWidth: function( el ) {\n\t\t\tif ( 0 == jQuery( el ).find( 'li' ).length ) return;\n\n\t\t\tvar ulWidth = 0;\n\t\t\tjQuery( el ).find( 'li' ).each( function() {\n\t\t\t\tvar marginLeft = parseInt( jQuery( this ).css( 'marginLeft' ).replace( 'px', '' ) );\n\t\t\t\tulWidth += ( jQuery( this ).outerWidth() + marginLeft + 2 );\n\t\t\t} );\n\n\t\t\tjQuery( el ).width( ulWidth );\t\t\t\n\t\t},\n\n\t\tonRemoveChild: function() {\n\t\t\t/* \n\t\t\t * Change the size of our collection UL\n\t\t\t */\n\t\t\tthis.setULWidth( this.el );\n\t\t},\n\n\t\tonAddChild: function() {\n\t\t\t/* \n\t\t\t * Change the size of our collection UL\n\t\t\t */\n\t\t\tthis.setULWidth( this.el );\n\n\t\t\tthis.maybeScroll( this.collection );\n\t\t},\n\n\t\tonBeforeAddChild: function( childView ) {\n\t\t\tjQuery( this.el ).css( 'width', '+=100' );\n\t\t},\n\n\t\tshowHidePagination: function( context, viewportWidth ) {\n\t\t\tcontext = context || this;\n\n\t\t\tviewportWidth = viewportWidth || jQuery( context.el ).parent().parent().width() - 120;\n\n\t\t\tif ( jQuery( context.el ).width() >= viewportWidth ) {\n\t\t\t\tif ( ! jQuery( context.drawerLayoutView.el ).find( '.nf-mp-drawer-scroll' ).is( ':visible' ) ) {\n\t\t\t\t\tjQuery( context.drawerLayoutView.el ).find( '.nf-mp-drawer-scroll' ).show();\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tif ( jQuery( context.drawerLayoutView.el ).find( '.nf-mp-drawer-scroll' ).is( ':visible' ) ) {\n\t\t\t\t\tjQuery( context.drawerLayoutView.el ).find( '.nf-mp-drawer-scroll' ).hide();\n\t\t\t\t\tnfRadio.channel( 'app' ).request( 'update:gutters' );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t} );\n\n\treturn view;\n} );\n","/**\n * Main layout view\n *\n * Regions:\n * mainContent\n * drawer\n * \n * @package Ninja Forms builder\n * @subpackage App\n * @copyright (c) 2015 WP Ninjas\n * @since 3.0\n */\ndefine( 'views/drawerLayout',[ 'views/drawerCollection' ], function( DrawerCollectionView ) {\n\tvar view = Marionette.LayoutView.extend({\n\t\ttagName: 'div',\n\t\ttemplate: '#nf-tmpl-mp-drawer-layout',\n\t\tregions: {\n\t\t\tviewport: '#nf-mp-drawer-viewport',\n\t\t},\n\n\t\tinitialize: function( options ) {\n\t\t\t/*\n\t\t\t * Make sure that our drawer resizes to match our screen upon resize or drawer open/close.\n\t\t\t */\n\t\t\tjQuery( window ).on( 'resize', { context: this }, this.resizeWindow );\n\n\t\t\tthis.listenTo( nfRadio.channel( 'drawer' ), 'before:open', this.beforeDrawerOpen );\n\t\t\tthis.listenTo( nfRadio.channel( 'drawer' ), 'before:close', this.beforeDrawerClose );\n\t\t},\n\n\t\tonBeforeDestroy: function() {\n\t\t\tjQuery( window ).off( 'resize', this.resizeWindow );\n\t\t},\n\n\t\tonShow: function() {\n\t\t\tthis.viewport.show( new DrawerCollectionView( { collection: this.collection, drawerLayoutView: this } ) );\n\t\t},\n\n\t\t/**\n\t\t * When we attach this el to our dom, resize our viewport.\n\t\t * \n\t\t * @since  3.0\n\t\t * @return void\n\t\t */\n\t\tonAttach: function() {\n\t\t\tthis.resizeViewport( this.viewport.el );\n\t\t},\n\n\t\t/**\n\t\t * Resize our viewport.\n\t\t * \n\t\t * @since  3.0\n\t\t * @return void\n\t\t */\n\t\tresizeViewport: function( viewportEl) {\n\t\t\t/*\n\t\t\t * If the drawer is closed, our viewport size is based upon the window size.\n\t\t\t *\n\t\t\t * If the drawer is opened, our viewport size is based upon the drawer size.\n\t\t\t */\n\t\t\tvar builderEl = nfRadio.channel( 'app' ).request( 'get:builderEl' );\n\t\t\tif ( jQuery( builderEl ).hasClass( 'nf-drawer-opened' ) ) {\n\t\t\t\tvar drawerEl = nfRadio.channel( 'app' ).request( 'get:drawerEl' );\n\t\t\t\tvar targetWidth = targetWidth || jQuery( drawerEl ).outerWidth() - 140;\n\t\t\t} else {\n\t\t\t\tvar targetWidth = targetWidth || jQuery( window ).width() - 140;\n\t\t\t}\n\t\t\t\n\t\t\tjQuery( viewportEl ).width( targetWidth );\n\t\t},\n\n\t\t/**\n\t\t * When we resize our browser window, update our viewport size.\n\t\t * \n\t\t * @since  3.0\n\t\t * @param  {object} e \tevent object\n\t\t * @return void\n\t\t */\n\t\tresizeWindow: function( e ) {\n\t\t\te.data.context.resizeViewport( e.data.context.viewport.el );\n\t\t},\n\n\t\tbeforeDrawerOpen: function() {\n\t\t\tvar that = this;\n\t\t\tvar drawerEl = nfRadio.channel( 'app' ).request( 'get:drawerEl' );\n\t\t\tvar targetWidth = jQuery( drawerEl ).width() - 60;\n\t\t\t\n\t\t\tjQuery( this.viewport.el ).animate( {\n\t\t\t\twidth: targetWidth\n\t\t\t}, 300, function() {\n\t\t\t\tthat.viewport.currentView.showHidePagination( null, targetWidth );\n\t\t\t\tthat.viewport.currentView.maybeScroll( that.collection );\n\t\t\t} );\n\t\t},\n\n\t\tbeforeDrawerClose: function() {\n\t\t\tvar that = this;\n\t\t\tvar targetWidth = jQuery( window ).width() - 140;\n\n\t\t\tjQuery( this.viewport.el ).animate( {\n\t\t\t\twidth: targetWidth\n\t\t\t}, 500, function() {\n\t\t\t\tthat.viewport.currentView.showHidePagination( null, targetWidth );\n\t\t\t\tthat.viewport.currentView.maybeScroll( that.collection );\n\t\t\t} );\n\t\t}\n\t});\n\n\treturn view;\n} );\n","/**\n * Main layout view\n *\n * Regions:\n * mainContent\n * drawer\n * \n * @package Ninja Forms builder\n * @subpackage App\n * @copyright (c) 2015 WP Ninjas\n * @since 3.0\n */\ndefine( 'views/layout',[ 'views/drawerLayout' ], function( DrawerLayoutView ) {\n\tvar view = Marionette.LayoutView.extend({\n\t\ttagName: 'div',\n\t\ttemplate: '#nf-tmpl-mp-layout',\n\n\t\tregions: {\n\t\t\tmainContent: '#nf-mp-main-content',\n\t\t\tdrawer: '#nf-mp-drawer'\n\t\t},\n\n\t\tinitialize: function() {\n\t\t\tthis.listenTo( this.collection, 'change:part', this.changePart );\n\t\t},\n\n\t\tonShow: function() {\n\t\t\tthis.drawer.show( new DrawerLayoutView( { collection: this.collection } ) );\n\n\t\t\t/*\n\t\t\t * Check our fieldContentViewsFilter to see if we have any defined.\n\t\t\t * If we do, overwrite our default with the view returned from the filter.\n\t\t\t */\n\t\t\tvar formContentViewFilters = nfRadio.channel( 'formContent' ).request( 'get:viewFilters' );\n\t\t\t\n\t\t\t/* \n\t\t\t* Get our first filter, this will be the one with the highest priority.\n\t\t\t*/\n\t\t\tvar sortedArray = _.without( formContentViewFilters, undefined );\n\t\t\tvar callback = sortedArray[1];\n\t\t\tthis.formContentView = callback();\n\n\t\t\tthis.mainContent.show(  new this.formContentView( { collection: this.collection.getFormContentData() } ) );\n\t\t},\n\n\t\tevents: {\n\t\t\t'click .nf-mp-drawer-scroll-previous': 'clickPrevious',\n\t\t\t'click .nf-mp-drawer-scroll-next': 'clickNext'\n\t\t},\n\n\t\tclickPrevious: function( e ) {\n\t\t\tvar that = this;\n\t\t\tvar scrollLeft = jQuery( this.drawer.currentView.viewport.el ).scrollLeft();\n\t\t\tvar lis = jQuery( this.drawer.currentView.viewport.currentView.el ).find( 'li' );\n\n\t\t\tjQuery( lis ).each( function( index ) {\n\t\t\t\t/*\n\t\t\t\t * If scrollLeft <= the left of this li, then we know we're at the first visible LI.\n\t\t\t\t * Move our scroll to the previous LI and return false.\n\t\t\t\t */\n\t\t\t\tif ( 0 < jQuery( this ).offset().left ) {\n\t\t\t\t\tvar marginLeft = parseInt( jQuery( this ).css( 'marginLeft' ).replace( 'px', '' ) );\n\t\t\t\t\tvar scrollLeft = jQuery( jQuery( lis )[ index - 1 ] ).outerWidth() + marginLeft + 5\n\t\t\t\t\tjQuery( that.drawer.currentView.viewport.el ).animate( {\n\t\t\t\t\t\tscrollLeft: '-=' + scrollLeft\n\t\t\t\t\t}, 300 );\n\t\t\t\t\treturn false;\t\t\t\n\t\t\t\t}\n\t\t\t} );\n\t\t\t\n\n\t\t},\n\n\t\tclickNext: function( e ) {\n\t\t\tvar that = this;\n\t\t\tvar ULWidth = jQuery( this.drawer.currentView.viewport.currentView.el ).width();\n\t\t\tvar viewportWidth = jQuery( this.drawer.currentView.viewport.el ).width();\n\t\t\tvar scrollLeft = jQuery( this.drawer.currentView.viewport.el ).scrollLeft();\n\t\t\tvar lis = jQuery( this.drawer.currentView.viewport.currentView.el ).find( 'li' );\n\t\t\tvar viewportTotal = viewportWidth + scrollLeft;\n\t\t\tvar widthCounter = 0;\n\t\t\tvar scrollLeft = 0;\n\n\t\t\tjQuery( lis ).each( function( index ) {\n\t\t\t\tvar marginLeft = parseInt( jQuery( this ).css( 'marginLeft' ).replace( 'px', '' ) );\n\t\t\t\twidthCounter += ( jQuery( this ).outerWidth() + marginLeft + 5 );\n\t\t\t\tif ( widthCounter >= viewportTotal ) {\n\t\t\t\t\tscrollLeft = jQuery( this ).outerWidth() + marginLeft + 5;\n\t\t\t\t\tjQuery( that.drawer.currentView.viewport.el ).animate( {\n\t\t\t\t\t\tscrollLeft: '+=' + scrollLeft\n\t\t\t\t\t}, 300 );\t\t\t\t\t\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t} );\n\t\t},\n\n\t\tchangePart: function() {\n\t\t\tvar currentIndex = this.collection.indexOf( this.collection.getElement() );\n\t\t\tvar previousIndex = this.collection.indexOf( this.collection.previousElement );\n\n\t\t\tif ( currentIndex > previousIndex ) {\n\t\t\t\tvar hideDir = 'left';\n\t\t\t\tvar showDir = 'right';\n\t\t\t} else {\n\t\t\t\tvar hideDir = 'right';\n\t\t\t\tvar showDir = 'left';\n\t\t\t}\n\n\t\t\tvar that = this;\n\t\t\t/*\n\t\t\t * Start our current part sliding out.\n\t\t\t */\n\t\t\tjQuery( this.mainContent.el ).hide( 'slide', { direction: hideDir }, 100, function() {\n\t\t\t\tthat.mainContent.empty();\n\t\t\t\tthat.mainContent.show( new that.formContentView( { collection: that.collection.getFormContentData() } ) );\n\t\t\t} );\n\n\t\t\tjQuery( that.mainContent.el ).show( 'slide', { direction: showDir }, 100 );\n\t\t}\n\t});\n\n\treturn view;\n} );\n","/**\n * Main content left gutter\n * \n * @package Ninja Forms builder\n * @subpackage App\n * @copyright (c) 2016 WP Ninjas\n * @since 3.0\n */\ndefine( 'views/gutterLeft',[], function() {\n\tvar view = Marionette.ItemView.extend({\n\t\ttagName: 'div',\n\t\ttemplate: '#nf-tmpl-mp-gutter-left',\n\n\t\tevents: {\n\t\t\t'click .fa': 'clickPrevious'\n\t\t},\n\n\t\tinitialize: function() {\n\t\t\tthis.collection = nfRadio.channel( 'mp' ).request( 'get:collection' );\n\t\t\tthis.listenTo( this.collection, 'change:part', this.render );\n\t\t\tthis.listenTo( this.collection, 'sort', this.render );\n\t\t\tthis.listenTo( this.collection, 'remove', this.render );\n\t\t},\n\n\t\tonRender: function() {\n\t\t\tvar that = this;\n\t\t\tjQuery( this.el ).find( '.fa' ).droppable( {\n\t\t\t\t// Activate by pointer\n\t\t\t\ttolerance: 'pointer',\n\t\t\t\t// Class added when we're dragging over\n\t\t\t\thoverClass: 'mp-circle-over',\n\t\t\t\tactiveClass: 'mp-circle-active',\n\t\t\t\t// Which elements do we want to accept?\n\t\t\t\taccept: '.nf-field-type-draggable, .nf-field-wrap, .nf-stage',\n\n\t\t\t\t/**\n\t\t\t\t * When we drag over this droppable, trigger a radio event.\n\t\t\t\t * \n\t\t\t\t * @since  3.0\n\t\t\t\t * @param  object \te  event\n\t\t\t\t * @param  object \tui jQuery UI element\n\t\t\t\t * @return void\n\t\t\t\t */\n\t\t\t\tover: function( e, ui ) {\n\t\t\t\t\tnfRadio.channel( 'mp' ).trigger( 'over:gutter', ui, that.collection );\n\t\t\t\t},\n\n\t\t\t\t/**\n\t\t\t\t * When we drag out of this droppable, trigger a radio event.\n\t\t\t\t * \n\t\t\t\t * @since  3.0\n\t\t\t\t * @param  object \te  event\n\t\t\t\t * @param  object \tui jQuery UI element\n\t\t\t\t * @return void\n\t\t\t\t */\n\t\t\t\tout: function( e, ui ) {\n\t\t\t\t\tnfRadio.channel( 'mp' ).trigger( 'out:gutter', ui, that.collection );\n\t\t\t\t},\n\n\t\t\t\t/**\n\t\t\t\t * When we drop on this droppable, trigger a radio event.\n\t\t\t\t * \n\t\t\t\t * @since  3.0\n\t\t\t\t * @param  object \te  event\n\t\t\t\t * @param  object \tui jQuery UI element\n\t\t\t\t * @return void\n\t\t\t\t */\n\t\t\t\tdrop: function( e, ui ) {\n\t\t\t\t\tnfRadio.channel( 'mp' ).trigger( 'drop:leftGutter', ui, that.collection );\n\t\t\t\t}\n\t\t\t} );\n\t\t},\n\n\t\tclickPrevious: function( e ) {\n\t\t\tnfRadio.channel( 'mp' ).trigger( 'click:previous', e );\n\t\t},\n\n\t\ttemplateHelpers: function() {\n\t\t\tvar that = this;\n\t\t\treturn {\n\t\t\t\thasPrevious: function() {\n\t\t\t\t\treturn that.collection.hasPrevious();\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\n\t\tchangePart: function( context ) {\n\t\t\tcontext.collection.previous();\n\t\t}\n\t});\n\n\treturn view;\n} );\n","/**\n * Main content right gutter\n * \n * @package Ninja Forms builder\n * @subpackage App\n * @copyright (c) 2015 WP Ninjas\n * @since 3.0\n */\ndefine( 'views/gutterRight',[], function() {\n\tvar view = Marionette.ItemView.extend({\n\t\ttagName: 'div',\n\t\ttemplate: '#nf-tmpl-mp-gutter-right',\n\n\t\tevents: {\n\t\t\t'click .next': 'clickNext',\n\t\t\t'click .new': 'clickNew'\n\t\t},\n\n\t\tinitialize: function() {\n\t\t\tthis.collection = nfRadio.channel( 'mp' ).request( 'get:collection' );\n\t\t\tthis.listenTo( this.collection, 'change:part', this.render );\n\t\t\tthis.listenTo( this.collection, 'sort', this.render );\n\t\t\tthis.listenTo( this.collection, 'remove', this.render );\n\t\t\tthis.listenTo( this.collection, 'add', this.render );\n\n\t\t\tthis.listenTo( nfRadio.channel( 'fields' ), 'add:field', this.render );\n\t\t},\n\n\t\ttest: function() {\n\t\t\tconsole.log( 'test test test' );\n\t\t},\n\n\t\tonRender: function() {\n\t\t\tvar that = this;\n\t\t\tjQuery( this.el ).find( '.fa' ).droppable( {\n\t\t\t\t// Activate by pointer\n\t\t\t\ttolerance: 'pointer',\n\t\t\t\t// Class added when we're dragging over\n\t\t\t\thoverClass: 'mp-circle-over',\n\t\t\t\tactiveClass: 'mp-circle-active',\n\t\t\t\t// Which elements do we want to accept?\n\t\t\t\taccept: '.nf-field-type-draggable, .nf-field-wrap, .nf-stage',\n\n\t\t\t\t/**\n\t\t\t\t * When we drag over this droppable, trigger a radio event.\n\t\t\t\t * \n\t\t\t\t * @since  3.0\n\t\t\t\t * @param  object \te  event\n\t\t\t\t * @param  object \tui jQuery UI element\n\t\t\t\t * @return void\n\t\t\t\t */\n\t\t\t\tover: function( e, ui ) {\n\t\t\t\t\tnfRadio.channel( 'mp' ).trigger( 'over:gutter', ui, that.collection );\n\t\t\t\t},\n\n\t\t\t\t/**\n\t\t\t\t * When we drag out of this droppable, trigger a radio event.\n\t\t\t\t * \n\t\t\t\t * @since  3.0\n\t\t\t\t * @param  object \te  event\n\t\t\t\t * @param  object \tui jQuery UI element\n\t\t\t\t * @return void\n\t\t\t\t */\n\t\t\t\tout: function( e, ui ) {\n\t\t\t\t\tnfRadio.channel( 'mp' ).trigger( 'out:gutter', ui, that.collection );\n\t\t\t\t},\n\n\t\t\t\t/**\n\t\t\t\t * When we drop on this droppable, trigger a radio event.\n\t\t\t\t * \n\t\t\t\t * @since  3.0\n\t\t\t\t * @param  object \te  event\n\t\t\t\t * @param  object \tui jQuery UI element\n\t\t\t\t * @return void\n\t\t\t\t */\n\t\t\t\tdrop: function( e, ui ) {\n\t\t\t\t\tnfRadio.channel( 'mp' ).trigger( 'drop:rightGutter', ui, that.collection );\n\t\t\t\t}\n\t\t\t} );\n\t\t},\n\n\t\tclickNext: function( e ) {\n\t\t\tnfRadio.channel( 'mp' ).trigger( 'click:next', e );\n\t\t},\n\n\t\tclickNew: function( e ) {\n\t\t\tnfRadio.channel( 'mp' ).trigger( 'click:new', e );\n\t\t},\n\n\t\ttemplateHelpers: function() {\n\t\t\tvar that = this;\n\t\t\treturn {\n\t\t\t\thasNext: function() {\n\t\t\t\t\treturn that.collection.hasNext();\n\t\t\t\t},\n\n\t\t\t\thasContent: function() {\n\t\t\t\t\treturn 0 != nfRadio.channel( 'fields' ).request( 'get:collection' ).length;\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\n\t\tchangePart: function( context ) {\n\t\t\tcontext.collection.next();\n\t\t}\n\t});\n\n\treturn view;\n} );\n","define( 'views/mainContentEmpty',[], function() {\n\tvar view = Marionette.ItemView.extend({\n\t\ttagName: 'div',\n\t\ttemplate: '#nf-tmpl-mp-main-content-fields-empty',\n\n\t\tonBeforeDestroy: function() {\n\t\t\tjQuery( this.el ).parent().removeClass( 'nf-fields-empty-droppable' ).droppable( 'destroy' );\n\t\t},\n\n\t\tonRender: function() {\n\t\t\tthis.$el = this.$el.children();\n\t\t\tthis.$el.unwrap();\n\t\t\tthis.setElement( this.$el );\n\t\t},\n\n\t\tonShow: function() {\n\t\t\tif ( jQuery( this.el ).parent().hasClass( 'ui-sortable' ) ) {\n\t\t\t\tjQuery( this.el ).parent().sortable( 'destroy' );\n\t\t\t}\n\t\t\tjQuery( this.el ).parent().addClass( 'nf-fields-empty-droppable' );\n\t\t\tjQuery( this.el ).parent().droppable( {\n\t\t\t\taccept: function( draggable ) {\n\t\t\t\t\tif ( jQuery( draggable ).hasClass( 'nf-stage' ) || jQuery( draggable ).hasClass( 'nf-field-type-button' ) ) {\n\t\t\t\t\t\treturn true;\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\tactiveClass: 'nf-droppable-active',\n\t\t\t\thoverClass: 'nf-droppable-hover',\n\t\t\t\ttolerance: 'pointer',\n\t\t\t\tover: function( e, ui ) {\n\t\t\t\t\tui.item = ui.draggable;\n\t\t\t\t\tnfRadio.channel( 'app' ).request( 'over:fieldsSortable', ui );\n\t\t\t\t},\n\t\t\t\tout: function( e, ui ) {\n\t\t\t\t\tui.item = ui.draggable;\n\t\t\t\t\tnfRadio.channel( 'app' ).request( 'out:fieldsSortable', ui );\n\t\t\t\t},\n\t\t\t\tdrop: function( e, ui ) {\n\t\t\t\t\tui.item = ui.draggable;\n\t\t\t\t\tnfRadio.channel( 'app' ).request( 'receive:fieldsSortable', ui );\n\t\t\t\t\tvar fieldCollection = nfRadio.channel( 'fields' ).request( 'get:collection' );\n\t\t\t\t\tfieldCollection.trigger( 'reset', fieldCollection );\n\t\t\t\t},\n\t\t\t} );\n\t\t}\n\t});\n\n\treturn view;\n} );\n","/**\n * Add our view and content load filters.\n * \n * @package Ninja Forms Multi-Part\n * @subpackage Fields\n * @copyright (c) 2016 WP Ninjas\n * @since 3.0\n */\ndefine(\n\t'controllers/filters',[\n\t\t'views/layout',\n\t\t'views/gutterLeft',\n\t\t'views/gutterRight',\n\t\t'views/mainContentEmpty',\n\t\t'models/partCollection',\n\t],\n\tfunction (\n\t\tLayoutView,\n\t\tGutterLeftView,\n\t\tGutterRightView,\n\t\tMainContentEmptyView,\n\t\tPartCollection\n\t)\n\t{\n\tvar controller = Marionette.Object.extend( {\n\t\tinitialize: function() {\n\t\t\tthis.listenTo( nfRadio.channel( 'app' ), 'after:loadViews', this.addFilters );\n\t\t},\n\n\t\taddFilters: function() {\n\t\t\tnfRadio.channel( 'formContentGutters' ).request( 'add:leftFilter', this.getLeftView, 1, this );\n\t\t\tnfRadio.channel( 'formContentGutters' ).request( 'add:rightFilter', this.getRightView, 1, this );\n\t\t\n\t\t\tnfRadio.channel( 'formContent' ).request( 'add:viewFilter', this.getContentView, 1 );\n\t\t\tnfRadio.channel( 'formContent' ).request( 'add:saveFilter', this.formContentSave, 1 );\n\t\t\t\n\t\t\tnfRadio.channel( 'formContent' ).request( 'add:loadFilter', this.formContentLoad, 1 );\n\n\t\t\t/*\n\t\t\t * Add a filter so that we can add a \"Parts\" group to the advanced conditions selects.\n\t\t\t */\n\t\t\tnfRadio.channel( 'conditions' ).request( 'add:groupFilter', this.conditionsFilter );\n\t\t\tnfRadio.channel( 'conditions-part' ).reply( 'get:triggers', this.conditionTriggers );\n\n\t\t\t/*\n\t\t\t * Listen to changes on our \"then\" statement.\n\t\t\t */\n\t\t\tthis.listenTo( nfRadio.channel( 'conditions' ), 'change:then', this.maybeAddElse );\n\n\t\t\tthis.emptyView();\n\t\t},\n\n\t\tgetLeftView: function() {\n\t\t\treturn GutterLeftView;\n\t\t},\n\n\t\tgetRightView: function() {\n\t\t\treturn GutterRightView;\n\t\t},\n\n\t\tformContentLoad: function( formContentData ) {\n\t\t\t/*\n\t\t\t * If the data has already been converted, just return it.\n\t\t\t */\n\t\t\tif ( true === formContentData instanceof PartCollection ) return formContentData;\n\t\t\t/*\n\t\t\t * If the data isn't converted, but is an array, let's make sure it's part data.\n\t\t\t */\n\t\t\tif ( _.isArray( formContentData ) && 0 != _.isArray( formContentData ).length  && 'undefined' != typeof _.first( formContentData ) && 'part' == _.first( formContentData ).type ) {\n\t\t\t\t/*\n\t\t\t\t * We have multi-part data. Let's convert it to a collection.\n\t\t\t\t */\n\t\t\t\tvar partCollection = new PartCollection( formContentData );\n\t\t\t} else {\n\t\t\t\t/*\n\t\t\t\t * We have unknown data. Create a new part collection and use the data as the content.\n\t\t\t\t */\n\t\t\t\tvar partCollection = new PartCollection( { formContentData: formContentData } );\n\t\t\t}\n\t\t\tnfRadio.channel( 'mp' ).request( 'init:partCollection', partCollection );\n\t\t\treturn partCollection;\n\t\t},\n\n\t\tgetContentView: function() {\n\t\t\treturn LayoutView;\n\t\t},\n\n\t\tformContentSave: function( partCollection ) {\n\t\t\t/*\n\t\t\t * For each of our part models, call the next save filter for its formContentData\n\t\t\t */\n\t\t\tvar collectionClone = nfRadio.channel( 'app' ).request( 'clone:collectionDeep', partCollection );\n\t\t\t\n\t\t\t/*\n\t\t\t * If we don't have a filter for our formContentData, default to fieldCollection.\n\t\t\t */\n\t\t\tvar formContentSaveFilters = nfRadio.channel( 'formContent' ).request( 'get:saveFilters' );\n\t\t\t\n\t\t\tcollectionClone.each( function( partModel ) {\n\t\t\t\t/* \n\t\t\t\t * Get our first filter, this will be the one with the highest priority.\n\t\t\t\t */\n\t\t\t\tvar sortedArray = _.without( formContentSaveFilters, undefined );\n\t\t\t\tvar callback = sortedArray[1];\n\t\t\t\tpartModel.set( 'formContentData', callback( partModel.get( 'formContentData' ) ) );\n\t\t\t} );\n\n\t\t\treturn collectionClone.toJSON();\n\t\t},\n\n\t\temptyView: function() {\n\t\t\tthis.defaultMainContentEmptyView = nfRadio.channel( 'views' ).request( 'get:mainContentEmpty' );\n\t\t\tnfRadio.channel( 'views' ).reply( 'get:mainContentEmpty', this.getMainContentEmpty, this );\n\t\t},\n\n\t\tgetMainContentEmpty: function() {\n\t\t\tif ( 1 == nfRadio.channel( 'mp' ).request( 'get:collection' ).length ) {\n\t\t\t\treturn this.defaultMainContentEmptyView;\n\t\t\t} else {\n\t\t\t\treturn MainContentEmptyView;\n\t\t\t}\n\t\t},\n\n\t\tconditionsFilter: function( groups, modelType ) {\n\t\t\tvar partCollection = nfRadio.channel( 'mp' ).request( 'get:collection' );\n\t\t\tif ( 0 == partCollection.length || 'when' == modelType ) return groups;\n\n\t\t\tvar partOptions = partCollection.map( function( part ) {\n\t\t\t\treturn { key: part.get( 'key' ), label: part.get( 'title' ) };\n\t\t\t} );\n\n\t\t\tgroups.unshift( { label: 'Parts', type: 'part', options: partOptions } );\n\t\t\treturn groups;\n\t\t},\n\n\t\tconditionTriggers: function( defaultTriggers ) {\n\t\t\treturn {\n\t\t\t\tshow_field: {\n\t\t\t\t\tlabel: 'Show Part',\n\t\t\t\t\tvalue: 'show_part'\n\t\t\t\t},\n\n\t\t\t\thide_field: {\n\t\t\t\t\tlabel: 'Hide Part',\n\t\t\t\t\tvalue: 'hide_part'\n\t\t\t\t}\n\t\t\t};\n\t\t},\n\n\t\t/**\n\t\t * When we change our then condition, if we are show/hiding a part add the opposite.\n\t\t * \n\t\t * @since  3.0\n\t\t * @param  {[type]} e         [description]\n\t\t * @param  {[type]} thenModel [description]\n\t\t * @return {[type]}           [description]\n\t\t */\n\t\tmaybeAddElse: function( e, thenModel ) {\n\t\t\tvar opposite = false;\n\t\t\t/*\n\t\t\t * TODO: Make this more dynamic.\n\t\t\t * Currently, show, hide, show option, and hide option are hard-coded here.\n\t\t\t */\n\t\t\tvar trigger = jQuery( e.target ).val();\n\t\t\tswitch( trigger ) {\n\t\t\t\tcase 'show_part':\n\t\t\t\t\topposite = 'hide_part';\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'hide_part':\n\t\t\t\t\topposite = 'show_part';\n\t\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\tif ( opposite ) {\n\t\t\t\tvar conditionModel = thenModel.collection.options.conditionModel;\n\t\t\t\tif( 'undefined' == typeof conditionModel.get( 'else' ).findWhere( { 'key': thenModel.get( 'key' ), 'trigger': opposite } ) ) {\n\t\t\t\t\tconditionModel.get( 'else' ).add( { type: thenModel.get( 'type' ), key: thenModel.get( 'key' ), trigger: opposite } );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t});\n\n\treturn controller;\n} );\n","var nfRadio = Backbone.Radio;\n\nrequire( [ 'controllers/loadControllers', 'controllers/filters' ], function( LoadControllers, LoadFilters ) {\n\n\tvar NFMultiPart = Marionette.Application.extend( {\n\n\t\tinitialize: function( options ) {\n\t\t\tthis.listenTo( nfRadio.channel( 'app' ), 'after:loadControllers', this.loadControllers );\n\t\t},\n\n\t\tloadControllers: function() {\n\t\t\tnew LoadControllers();\n\t\t},\n\n\t\tonStart: function() {\n\t\t\tnew LoadFilters();\n\t\t}\n\t} );\n\n\tvar nfMultiPart = new NFMultiPart();\n\tnfMultiPart.start();\n} );\ndefine(\"main\", function(){});\n\n","}());"],"sourceRoot":"/source/"}