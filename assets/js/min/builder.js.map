{"version":3,"sources":["../lib/almond.js","models/partModel.js","models/partCollection.js","controllers/data.js","controllers/clickControls.js","controllers/gutterDroppables.js","controllers/partSettings.js","controllers/partDroppable.js","controllers/partSortable.js","controllers/undo.js","controllers/loadControllers.js","views/drawerItem.js","views/drawerCollection.js","views/drawerLayout.js","views/layout.js","views/gutterLeft.js","views/gutterRight.js","views/mainContentEmpty.js","controllers/filters.js","main.js"],"names":["requirejs","require","define","undef","hasProp","obj","prop","hasOwn","call","normalize","name","baseName","nameParts","nameSegment","mapValue","foundMap","lastIndex","foundI","foundStarMap","starI","i","j","part","baseParts","split","map","config","starMap","charAt","length","nodeIdCompat","jsSuffixRegExp","test","replace","slice","concat","splice","join","indexOf","substring","makeRequire","relName","forceSync","args","aps","arguments","push","req","apply","makeNormalize","makeLoad","depName","value","defined","callDep","waiting","defining","main","Error","splitPrefix","prefix","index","makeConfig","makeMap","handlers","Object","prototype","hasOwnProperty","plugin","parts","f","n","pr","p","exports","e","module","id","uri","deps","callback","cjsModule","ret","usingExports","callbackType","load","undefined","alt","setTimeout","cfg","_defined","amd","jQuery","model","Backbone","Model","extend","defaults","formContentData","order","type","clean","title","initialize","this","on","unclean","filterFormContentData","listenTo","get","sortFormContentData","fieldCollection","nfRadio","channel","request","triggerRemove","set","sort","fieldModel","isArray","trigger","formContentLoadFilters","sortedArray","_","without","PartModel","collection","Collection","currentElement","comparator","models","options","afterRemove","afterAdd","maybeChangeBuilderClass","changeCurrentPart","at","listenToOnce","afterFirstDrawerClose","openFirstDrawer","openDrawer","setElement","newModel","max","pluck","settingGroupCollection","settingModel","findWhere","count","changeBuilderClass","groupCollection","focusTitle","drawerEl","find","select","focus","off","hasParts","builderEl","addClass","removeClass","getElement","append","data","add","silent","previousElement","currentDrawer","next","hasNext","previous","hasPrevious","getFormContentData","updateOrder","each","PartCollection","controller","Marionette","reply","initPartCollection","getCollection","addField","partCollection","clickPrevious","clickNext","clickNew","clickPart","clickRemove","clickDuplicate","label","object","change","dashicon","partModel","settingView","remove","partClone","over","out","dropRight","dropLeft","ui","item","draggable","drop","dir","dropping","hasClass","stagedFields","field","oldPart","newPart","keys","fieldType","changePart","helper","SettingGroupCollection","setupCollection","display","priority","settings","width","partView","css","height","opacity","sortableEl","fieldWidth","effect","to","el","dropField","dropNewField","dropStaging","start","stop","update","collectionView","show","sortable","cid","undoAddPart","undoAll","changeCollection","filter","maybeRemoveChange","Data","ClickControls","GutterDroppables","PartSettings","PartDroppable","PartSortable","Undo","view","ItemView","tagName","template","render","maybeChangeActive","attributes","onShow","that","droppable","activeClass","hoverClass","accept","tolerance","events","click","templateHelpers","getIndex","DrawerItemView","CollectionView","childView","reorderOnSort","items","DrawerCollectionView","LayoutView","regions","viewport","window","context","resizeEvent","beforeDrawerOpen","beforeDrawerClose","onBeforeDestroy","resizeViewport","animate","scrollLeft","onAttach","ulWidth","outerWidth","targetWidth","hide","viewportEl","DrawerLayoutView","mainContent","drawer","formContentViewFilters","formContentView","currentIndex","previousIndex","hideDir","showDir","direction","empty","click .fa","onRender","click .next","click .new","console","log","hasContent","parent","$el","children","unwrap","GutterLeftView","GutterRightView","MainContentEmptyView","addFilters","getLeftView","getRightView","getContentView","formContentSave","formContentLoad","emptyView","collectionClone","formContentSaveFilters","toJSON","defaultMainContentEmptyView","getMainContentEmpty","Radio","LoadControllers","LoadFilters","NFMultiPart","Application","loadControllers","onStart","nfMultiPart"],"mappings":"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,IAAA,GAAAA,YAAAJ,UAAAiC,WAAA,MAAA7B,EAEA,IAAAoF,GAAA,GAAAP,GAAA7E,EAEA,OADAc,GAAAC,QAAA,MAAAC,QAAA,sBAAAoE,GACAA,GAGA6I,eAAA,WACA,MAAA9C,IAGA+C,gBAAA,SAAA9I,GAIA,GAAAiJ,GAAAvN,EAAAC,QAAA,OAAAC,QAAA,uBAAAoE,GAKAkJ,EAAAxN,EAAAC,QAAA,eAAAC,QAAA,kBAWA,OATAqN,GAAAzJ,KAAA,SAAAmB,GAIA,GAAAvE,GAAAC,EAAAC,QAAA4M,EAAAlP,QACAN,EAAA0C,EAAA,EACAuE,GAAA7E,IAAA,kBAAApC,EAAAiH,EAAApF,IAAA,uBAGA0N,EAAAE,UAGAH,UAAA,WACA9N,KAAAkO,4BAAA1N,EAAAC,QAAA,SAAAC,QAAA,wBACAF,EAAAC,QAAA,SAAAiE,MAAA,uBAAA1E,KAAAmO,oBAAAnO,OAGAmO,oBAAA,WACA,MAAA,IAAA3N,EAAAC,QAAA,MAAAC,QAAA,kBAAArF,OACA2E,KAAAkO,4BAEAX,IAKA,OAAA/I,IAEA,IAAAhE,GAAAlB,SAAA8O,KClGA3U,IAAA,8BAAA,uBAAA,SAAA4U,EAAAC,GAEA,GAAAC,GAAA9J,WAAA+J,YAAAhP,QAEAO,WAAA,SAAA4B,GACA3B,KAAAI,SAAAI,EAAAC,QAAA,OAAA,wBAAAT,KAAAyO,kBAGAA,gBAAA,WACA,GAAAJ,IAGAK,QAAA,WACA,GAAAJ,MAIAK,EAAA,GAAAJ,EACAI,GAAAzG,UAEAxO,EAAA,OAAA;AnBrjbA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AC/DA,ADggjEA,ADkEA;ACjpvtzKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AC/EA,ADghDA,ADiDA;AChpGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"builder.js","sourcesContent":["/**\n * @license almond 0.3.1 Copyright (c) 2011-2014, The Dojo Foundation All Rights Reserved.\n * Available via the MIT or new BSD license.\n * see: http://github.com/jrburke/almond for details\n */\n//Going sloppy to avoid 'use strict' string cost, but strict practices should\n//be followed.\n/*jslint sloppy: true */\n/*global setTimeout: false */\n\nvar requirejs, require, define;\n(function (undef) {\n    var main, req, makeMap, handlers,\n        defined = {},\n        waiting = {},\n        config = {},\n        defining = {},\n        hasOwn = Object.prototype.hasOwnProperty,\n        aps = [].slice,\n        jsSuffixRegExp = /\\.js$/;\n\n    function hasProp(obj, prop) {\n        return hasOwn.call(obj, prop);\n    }\n\n    /**\n     * Given a relative module name, like ./something, normalize it to\n     * a real name that can be mapped to a path.\n     * @param {String} name the relative name\n     * @param {String} baseName a real name that the name arg is relative\n     * to.\n     * @returns {String} normalized name\n     */\n    function normalize(name, baseName) {\n        var nameParts, nameSegment, mapValue, foundMap, lastIndex,\n            foundI, foundStarMap, starI, i, j, part,\n            baseParts = baseName && baseName.split(\"/\"),\n            map = config.map,\n            starMap = (map && map['*']) || {};\n\n        //Adjust any relative paths.\n        if (name && name.charAt(0) === \".\") {\n            //If have a base name, try to normalize against it,\n            //otherwise, assume it is a top-level require that will\n            //be relative to baseUrl in the end.\n            if (baseName) {\n                name = name.split('/');\n                lastIndex = name.length - 1;\n\n                // Node .js allowance:\n                if (config.nodeIdCompat && jsSuffixRegExp.test(name[lastIndex])) {\n                    name[lastIndex] = name[lastIndex].replace(jsSuffixRegExp, '');\n                }\n\n                //Lop off the last part of baseParts, so that . matches the\n                //\"directory\" and not name of the baseName's module. For instance,\n                //baseName of \"one/two/three\", maps to \"one/two/three.js\", but we\n                //want the directory, \"one/two\" for this normalization.\n                name = baseParts.slice(0, baseParts.length - 1).concat(name);\n\n                //start trimDots\n                for (i = 0; i < name.length; i += 1) {\n                    part = name[i];\n                    if (part === \".\") {\n                        name.splice(i, 1);\n                        i -= 1;\n                    } else if (part === \"..\") {\n                        if (i === 1 && (name[2] === '..' || name[0] === '..')) {\n                            //End of the line. Keep at least one non-dot\n                            //path segment at the front so it can be mapped\n                            //correctly to disk. Otherwise, there is likely\n                            //no path mapping for a path starting with '..'.\n                            //This can still fail, but catches the most reasonable\n                            //uses of ..\n                            break;\n                        } else if (i > 0) {\n                            name.splice(i - 1, 2);\n                            i -= 2;\n                        }\n                    }\n                }\n                //end trimDots\n\n                name = name.join(\"/\");\n            } else if (name.indexOf('./') === 0) {\n                // No baseName, so this is ID is resolved relative\n                // to baseUrl, pull off the leading dot.\n                name = name.substring(2);\n            }\n        }\n\n        //Apply map config if available.\n        if ((baseParts || starMap) && map) {\n            nameParts = name.split('/');\n\n            for (i = nameParts.length; i > 0; i -= 1) {\n                nameSegment = nameParts.slice(0, i).join(\"/\");\n\n                if (baseParts) {\n                    //Find the longest baseName segment match in the config.\n                    //So, do joins on the biggest to smallest lengths of baseParts.\n                    for (j = baseParts.length; j > 0; j -= 1) {\n                        mapValue = map[baseParts.slice(0, j).join('/')];\n\n                        //baseName segment has  config, find if it has one for\n                        //this name.\n                        if (mapValue) {\n                            mapValue = mapValue[nameSegment];\n                            if (mapValue) {\n                                //Match, update name to the new value.\n                                foundMap = mapValue;\n                                foundI = i;\n                                break;\n                            }\n                        }\n                    }\n                }\n\n                if (foundMap) {\n                    break;\n                }\n\n                //Check for a star map match, but just hold on to it,\n                //if there is a shorter segment match later in a matching\n                //config, then favor over this star map.\n                if (!foundStarMap && starMap && starMap[nameSegment]) {\n                    foundStarMap = starMap[nameSegment];\n                    starI = i;\n                }\n            }\n\n            if (!foundMap && foundStarMap) {\n                foundMap = foundStarMap;\n                foundI = starI;\n            }\n\n            if (foundMap) {\n                nameParts.splice(0, foundI, foundMap);\n                name = nameParts.join('/');\n            }\n        }\n\n        return name;\n    }\n\n    function makeRequire(relName, forceSync) {\n        return function () {\n            //A version of a require function that passes a moduleName\n            //value for items that may need to\n            //look up paths relative to the moduleName\n            var args = aps.call(arguments, 0);\n\n            //If first arg is not require('string'), and there is only\n            //one arg, it is the array form without a callback. Insert\n            //a null so that the following concat is correct.\n            if (typeof args[0] !== 'string' && args.length === 1) {\n                args.push(null);\n            }\n            return req.apply(undef, args.concat([relName, forceSync]));\n        };\n    }\n\n    function makeNormalize(relName) {\n        return function (name) {\n            return normalize(name, relName);\n        };\n    }\n\n    function makeLoad(depName) {\n        return function (value) {\n            defined[depName] = value;\n        };\n    }\n\n    function callDep(name) {\n        if (hasProp(waiting, name)) {\n            var args = waiting[name];\n            delete waiting[name];\n            defining[name] = true;\n            main.apply(undef, args);\n        }\n\n        if (!hasProp(defined, name) && !hasProp(defining, name)) {\n            throw new Error('No ' + name);\n        }\n        return defined[name];\n    }\n\n    //Turns a plugin!resource to [plugin, resource]\n    //with the plugin being undefined if the name\n    //did not have a plugin prefix.\n    function splitPrefix(name) {\n        var prefix,\n            index = name ? name.indexOf('!') : -1;\n        if (index > -1) {\n            prefix = name.substring(0, index);\n            name = name.substring(index + 1, name.length);\n        }\n        return [prefix, name];\n    }\n\n    /**\n     * Makes a name map, normalizing the name, and using a plugin\n     * for normalization if necessary. Grabs a ref to plugin\n     * too, as an optimization.\n     */\n    makeMap = function (name, relName) {\n        var plugin,\n            parts = splitPrefix(name),\n            prefix = parts[0];\n\n        name = parts[1];\n\n        if (prefix) {\n            prefix = normalize(prefix, relName);\n            plugin = callDep(prefix);\n        }\n\n        //Normalize according\n        if (prefix) {\n            if (plugin && plugin.normalize) {\n                name = plugin.normalize(name, makeNormalize(relName));\n            } else {\n                name = normalize(name, relName);\n            }\n        } else {\n            name = normalize(name, relName);\n            parts = splitPrefix(name);\n            prefix = parts[0];\n            name = parts[1];\n            if (prefix) {\n                plugin = callDep(prefix);\n            }\n        }\n\n        //Using ridiculous property names for space reasons\n        return {\n            f: prefix ? prefix + '!' + name : name, //fullName\n            n: name,\n            pr: prefix,\n            p: plugin\n        };\n    };\n\n    function makeConfig(name) {\n        return function () {\n            return (config && config.config && config.config[name]) || {};\n        };\n    }\n\n    handlers = {\n        require: function (name) {\n            return makeRequire(name);\n        },\n        exports: function (name) {\n            var e = defined[name];\n            if (typeof e !== 'undefined') {\n                return e;\n            } else {\n                return (defined[name] = {});\n            }\n        },\n        module: function (name) {\n            return {\n                id: name,\n                uri: '',\n                exports: defined[name],\n                config: makeConfig(name)\n            };\n        }\n    };\n\n    main = function (name, deps, callback, relName) {\n        var cjsModule, depName, ret, map, i,\n            args = [],\n            callbackType = typeof callback,\n            usingExports;\n\n        //Use name if no relName\n        relName = relName || name;\n\n        //Call the callback to define the module, if necessary.\n        if (callbackType === 'undefined' || callbackType === 'function') {\n            //Pull out the defined dependencies and pass the ordered\n            //values to the callback.\n            //Default to [require, exports, module] if no deps\n            deps = !deps.length && callback.length ? ['require', 'exports', 'module'] : deps;\n            for (i = 0; i < deps.length; i += 1) {\n                map = makeMap(deps[i], relName);\n                depName = map.f;\n\n                //Fast path CommonJS standard dependencies.\n                if (depName === \"require\") {\n                    args[i] = handlers.require(name);\n                } else if (depName === \"exports\") {\n                    //CommonJS module spec 1.1\n                    args[i] = handlers.exports(name);\n                    usingExports = true;\n                } else if (depName === \"module\") {\n                    //CommonJS module spec 1.1\n                    cjsModule = args[i] = handlers.module(name);\n                } else if (hasProp(defined, depName) ||\n                           hasProp(waiting, depName) ||\n                           hasProp(defining, depName)) {\n                    args[i] = callDep(depName);\n                } else if (map.p) {\n                    map.p.load(map.n, makeRequire(relName, true), makeLoad(depName), {});\n                    args[i] = defined[depName];\n                } else {\n                    throw new Error(name + ' missing ' + depName);\n                }\n            }\n\n            ret = callback ? callback.apply(defined[name], args) : undefined;\n\n            if (name) {\n                //If setting exports via \"module\" is in play,\n                //favor that over return value and exports. After that,\n                //favor a non-undefined return value over exports use.\n                if (cjsModule && cjsModule.exports !== undef &&\n                        cjsModule.exports !== defined[name]) {\n                    defined[name] = cjsModule.exports;\n                } else if (ret !== undef || !usingExports) {\n                    //Use the return value from the function.\n                    defined[name] = ret;\n                }\n            }\n        } else if (name) {\n            //May just be an object definition for the module. Only\n            //worry about defining if have a module name.\n            defined[name] = callback;\n        }\n    };\n\n    requirejs = require = req = function (deps, callback, relName, forceSync, alt) {\n        if (typeof deps === \"string\") {\n            if (handlers[deps]) {\n                //callback in this case is really relName\n                return handlers[deps](callback);\n            }\n            //Just return the module wanted. In this scenario, the\n            //deps arg is the module name, and second arg (if passed)\n            //is just the relName.\n            //Normalize module name, if it contains . or ..\n            return callDep(makeMap(deps, callback).f);\n        } else if (!deps.splice) {\n            //deps is a config object, not an array.\n            config = deps;\n            if (config.deps) {\n                req(config.deps, config.callback);\n            }\n            if (!callback) {\n                return;\n            }\n\n            if (callback.splice) {\n                //callback is an array, which means it is a dependency list.\n                //Adjust args if there are dependencies\n                deps = callback;\n                callback = relName;\n                relName = null;\n            } else {\n                deps = undef;\n            }\n        }\n\n        //Support require(['a'])\n        callback = callback || function () {};\n\n        //If relName is a function, it is an errback handler,\n        //so remove it.\n        if (typeof relName === 'function') {\n            relName = forceSync;\n            forceSync = alt;\n        }\n\n        //Simulate async callback;\n        if (forceSync) {\n            main(undef, deps, callback, relName);\n        } else {\n            //Using a non-zero value because of concern for what old browsers\n            //do, and latest browsers \"upgrade\" to 4 if lower value is used:\n            //http://www.whatwg.org/specs/web-apps/current-work/multipage/timers.html#dom-windowtimers-settimeout:\n            //If want a value immediately, use require('id') instead -- something\n            //that works in almond on the global level, but not guaranteed and\n            //unlikely to work in other AMD implementations.\n            setTimeout(function () {\n                main(undef, deps, callback, relName);\n            }, 4);\n        }\n\n        return req;\n    };\n\n    /**\n     * Just drops the config on the floor, but returns req in case\n     * the config return value is used.\n     */\n    req.config = function (cfg) {\n        return req(cfg);\n    };\n\n    /**\n     * Expose module registry for debugging and tooling\n     */\n    requirejs._defined = defined;\n\n    define = function (name, deps, callback) {\n        if (typeof name !== 'string') {\n            throw new Error('See almond README: incorrect module build, no module name');\n        }\n\n        //This module may not have dependencies\n        if (!deps.splice) {\n            //deps is not an array, so probably means\n            //an object literal or factory function for\n            //the value. Adjust args.\n            callback = deps;\n            deps = [];\n        }\n\n        if (!hasProp(defined, name) && !hasProp(waiting, name)) {\n            waiting[name] = [name, deps, callback];\n        }\n    };\n\n    define.amd = {\n        jQuery: true\n    };\n}());\n\ndefine(\"../lib/almond\", function(){});\n\n","/**\n * Model that represents part information.\n * \n * @package Ninja Forms Multi-Part\n * @subpackage Fields\n * @copyright (c) 2016 WP Ninjas\n * @since 3.0\n */\ndefine( 'models/partModel',[], function() {\n\tvar model = Backbone.Model.extend( {\n\t\tdefaults: {\n\t\t\tformContentData: [],\n\t\t\torder: 0,\n\t\t\ttype: 'part',\n\t\t\tclean: true,\n\t\t\ttitle: 'Part Title'\n\t\t},\n\n\t\tinitialize: function() {\n\t\t\tthis.on( 'change:title', this.unclean );\n\t\t\tthis.filterFormContentData();\n\t\t\n\t\t\tthis.listenTo( this.get( 'formContentData' ), 'change:order', this.sortFormContentData );\n\t\t\t/*\n\t\t\t * When we remove a field from our field collection, remove it from this part if it exists there.\n\t\t\t */\n\t\t\tvar fieldCollection = nfRadio.channel( 'fields' ).request( 'get:collection' );\n\t\t\tthis.listenTo( fieldCollection, 'remove', this.triggerRemove );\n\t\t},\n\n\t\tunclean: function() {\n\t\t\tthis.set( 'clean', false );\n\t\t},\n\n\t\tsortFormContentData: function() {\n\t\t\tthis.get( 'formContentData' ).sort();\n\t\t},\n\n\t\ttriggerRemove: function( fieldModel ) {\n\t\t\tif ( jQuery.isArray( this.get( 'formContentData' ) ) ) {\n\t\t\t\tthis.filterFormContentData();\n\t\t\t}\n\t\t\tthis.get( 'formContentData' ).trigger( 'remove:field', fieldModel );\n\t\t},\n\n\t\tfilterFormContentData: function() {\n\t\t\t/*\n\t\t\t * Update our formContentData by running it through our fromContentData filter\n\t\t\t */\n\t\t\tvar formContentLoadFilters = nfRadio.channel( 'formContent' ).request( 'get:loadFilters' );\n\t\t\t/* \n\t\t\t* Get our second filter, this will be the one with the highest priority after MP Forms.\n\t\t\t*/\n\t\t\tvar sortedArray = _.without( formContentLoadFilters, undefined );\n\t\t\tvar callback = sortedArray[ 1 ];\n\n\t\t\tthis.set( 'formContentData', callback( this.get( 'formContentData' ) ) );\n\t\t}\n\n\t} );\n\n\treturn model;\n} );\n\n","define( 'models/partCollection',[ 'models/partModel' ], function( PartModel ) {\n\tvar collection = Backbone.Collection.extend( {\n\t\tmodel: PartModel,\n\t\tcurrentElement: false,\n\t\tcomparator: 'order',\n\n\t\tinitialize: function( models, options ){\n\t\t\tmodels = models || [];\n\n\t\t\tthis.on( 'remove', this.afterRemove );\n\t\t\tthis.on( 'add', this.afterAdd );\n\n\t\t\tthis.maybeChangeBuilderClass( models.length );\n\t\t},\n\n\t\tafterRemove: function( model, collection, options ) {\n\t\t\tthis.changeCurrentPart( model, collection, options );\n\t\t\tthis.maybeChangeBuilderClass( model, collection, options );\n\t\t\t/*\n\t\t\t * If our drawer is open, close it.\n\t\t\t */\n\t\t\tnfRadio.channel( 'app' ).request( 'close:drawer' );\n\t\t},\n\n\t\tafterAdd: function( model ) {\n\t\t\t\n\t\t\t/*\n\t\t\t * If we only have one model and it's set to clean, open a drawer so that the user can edit its title.\n\t\t\t */\n\t\t\tif ( this.at( 0 ).get( 'clean' ) && 2 == this.length ) {\n\t\t\t\t/*\n\t\t\t\t * When the first part title drawer closes, continue our new part processing.\n\t\t\t\t */\n\t\t\t\tthis.listenToOnce( nfRadio.channel( 'drawer' ), 'closed', this.afterFirstDrawerClose, model );\n\t\t\t\tthis.openFirstDrawer( this.at( 0 ) );\n\t\t\t} else {\n\t\t\t\tthis.openDrawer( model );\n\t\t\t\tthis.setElement( model );\n\t\t\t\tthis.maybeChangeBuilderClass( model );\n\t\t\t}\n\t\t},\n\n\t\tafterFirstDrawerClose: function() {\n\t\t\tvar newModel = this.at( _.max( this.pluck( 'order' ) ) );\n\t\t\tvar settingGroupCollection = nfRadio.channel( 'mp' ).request( 'get:settingGroupCollection' );\n\t\t\tvar settingModel = settingGroupCollection.get( 'primary' ).get( 'settings' ).findWhere( { name: 'title' } );\n\t\t\tsettingModel.set( 'label', settingModel.get( 'oldLabel' ) );\n\t\t\tthis.openDrawer( newModel );\n\t\t\tthis.setElement( newModel );\n\t\t\tthis.maybeChangeBuilderClass( newModel );\n\t\t},\n\n\t\tmaybeChangeBuilderClass: function( count, collection, options ) {\n\t\t\tif ( true === count instanceof Backbone.Model ) {\n\t\t\t\tcount = this.length;\n\t\t\t}\n\n\t\t\tthis.changeBuilderClass( 1 < count );\n\t\t},\n\t\t\n\t\topenFirstDrawer: function( model ) {\n\t\t\tvar settingGroupCollection = nfRadio.channel( 'mp' ).request( 'get:settingGroupCollection' );\n\t\t\tvar settingModel = settingGroupCollection.get( 'primary' ).get( 'settings' ).findWhere( { name: 'title' } );\n\t\t\tsettingModel.set( 'oldLabel', settingModel.get( 'label' ) );\n\t\t\tsettingModel.set( 'label', 'Give your first part a title' );\n\t\t\tnfRadio.channel( 'app' ).request( 'open:drawer', 'editSettings', { model: model, groupCollection: settingGroupCollection } );\n\t\t\n\t\t\t/*\n\t\t\t * When the drawer opens, focus the input box.\n\t\t\t */\n\t\t\tnfRadio.channel( 'drawer' ).on( 'opened', this.focusTitle );\n\t\t},\n\n\t\topenDrawer: function( model ) {\n\t\t\tvar settingGroupCollection = nfRadio.channel( 'mp' ).request( 'get:settingGroupCollection' );\n\t\t\tnfRadio.channel( 'app' ).request( 'open:drawer', 'editSettings', { model: model, groupCollection: settingGroupCollection } );\n\t\t\n\t\t\t/*\n\t\t\t * When the drawer opens, focus the input box.\n\t\t\t */\n\t\t\tnfRadio.channel( 'drawer' ).on( 'opened', this.focusTitle );\n\t\t},\n\n\t\tfocusTitle: function() {\n\t\t\tvar drawerEl = nfRadio.channel( 'app' ).request( 'get:drawerEl' );\n\t\t\tjQuery( drawerEl ).find( '#title' ).select();\n\t\t\tjQuery( drawerEl ).find( '#title' ).focus();\n\t\t\tnfRadio.channel( 'drawer' ).off( 'opened', this.focusTitle );\n\t\t},\n\n\t\tchangeBuilderClass: function( hasParts ) {\n\t\t\tvar builderEl = nfRadio.channel( 'app' ).request( 'get:builderEl' );\n\t\t\tif ( hasParts ) {\n\t\t\t\tjQuery( builderEl ).addClass( 'nf-has-parts' );\n\t\t\t} else {\n\t\t\t\tjQuery( builderEl ).removeClass( 'nf-has-parts' );\n\t\t\t}\n\t\t},\n\n\t\tchangeCurrentPart: function( model, collection, options ) {\n\t\t\t/*\n\t\t\t * When we remove the current part, change the current part in our collection.\n\t\t\t *\n\t\t\t * TODO: Find a way to pass index to has previous or has next for proper testing.\n\t\t\t * Since the model has been removed, it will always return a -1.\n\t\t\t */\n\t\t\tif ( this.getElement() == model ) {\n\t\t\t\tif ( 0 == options.index ) {\n\t\t\t\t\tthis.setElement( this.at( 0 ) );\n\t\t\t\t} else {\n\t\t\t\t\tthis.setElement( this.at( options.index - 1 ) );\n\t\t\t\t}\n\t\t\t} else if ( 1 == this.length ) {\n\t\t\t\tthis.setElement( this.at( 0 ) );\n\t\t\t}\n\t\t},\n\n\t\tappend: function( data ) {\n\t\t\tdata = data || {};\n\t\t\tvar order = this.length - 1;\n\t\t\tdata = _.extend( { order: order }, data );\n\t\t\treturn this.add( data );\n\t\t},\n\t\t\n\t\tgetElement: function() {\n\t\t\t/*\n\t\t\t * If we haven't set an element yet, set it to the first one.\n\t\t\t */\n\t\t\tif ( ! this.currentElement ) {\n\t\t\t\tthis.setElement( this.at( 0 ), true );\n\t\t\t}\n\t\t\treturn this.currentElement;\n\t\t},\n\t\t  \n\t\tsetElement: function( model, silent ) {\n\t\t\tif ( model == this.currentElement ) return;\n\t\t\tsilent = silent || false;\n\t\t\tthis.previousElement = this.currentElement;\n\t\t\tthis.currentElement = model;\n\t\t\tif ( ! silent ) {\n\t\t\t\t/*\n\t\t\t\t * Close the drawer for editing this title if it is open.\n\t\t\t\t */\n\t\t\t\tvar currentDrawer = nfRadio.channel( 'app' ).request( 'get:currentDrawer' );\n\t\t\t\tif ( currentDrawer && 'editSettings' == currentDrawer.get( 'id' ) ) {\n\t\t\t\t\tvar settingGroupCollection = nfRadio.channel( 'mp' ).request( 'get:settingGroupCollection' );\n\t\t\t\t\tnfRadio.channel( 'app' ).request( 'open:drawer', 'editSettings', { model: model, groupCollection: settingGroupCollection } );\n\t\t\t\t}\n\t\t\t\tthis.trigger( 'change:part', this );\t\n\t\t\t}\n\t\t},\n\t\t\n\t\tnext: function (){\n\t\t\t/*\n\t\t\t * If this isn't the last part, move forward.\n\t\t\t */\n\t\t\tif ( this.hasNext() ) {\n\t\t\t\tthis.setElement( this.at( this.indexOf( this.getElement() ) + 1 ) );\n\t\t\t}\n\t\t\t\n\t\t\treturn this;\n\t\t},\n\n\t\tprevious: function() {\n\t\t\t/*\n\t\t\t * If this isn't the first part, move backward.\n\t\t\t */\n\t\t\tif ( this.hasPrevious() ) {\n\t\t\t\tthis.setElement( this.at( this.indexOf( this.getElement() ) - 1 ) );\t\n\t\t\t}\n\t\t\t\n\t\t\treturn this;\n\t\t},\n\n\t\thasNext: function() {\n\t\t\tif ( 0 == this.length ) return false;\n\t\t\treturn this.length - 1 != this.indexOf( this.getElement() );\n\t\t},\n\n\t\thasPrevious: function() {\n\t\t\tif ( 0 == this.length ) return false;\n\t\t\treturn 0 != this.indexOf( this.getElement() );\n\t\t},\n\n\t\tgetFormContentData: function() {\n\t\t\treturn this.getElement().get( 'formContentData' );\n\t\t},\n\n\t\tupdateOrder: function() {\n\t\t\tthis.each( function( model, index ) {\n\t\t\t\tmodel.set( 'order', index );\n\t\t\t} );\n\t\t\tthis.sort();\n\t\t},\n\n\t\tappend: function( model ) {\n\t\t    var order = _.max( this.pluck( 'order' ) ) + 1;\n\t\t    if( model instanceof Backbone.Model ) {\n\t\t        model.set( 'order', order );\n\t\t    } else {\n\t\t        model.order = order;\n\t\t    }\n\t\t    return this.add( model );\n\t\t}\n\t} );\n\n\treturn collection;\n} );\n","/**\n * Holds our part collection.\n * \n * @package Ninja Forms Multi-Part\n * @subpackage Fields\n * @copyright (c) 2016 WP Ninjas\n * @since 3.0\n */\ndefine( 'controllers/data',[ 'models/partCollection' ], function ( PartCollection) {\n\tvar controller = Marionette.Object.extend( {\n\t\tinitialize: function() {\n\t\t\t/*\n\t\t\t * Instantiate our part collection.\n\t\t\t */\n\t\t\tnfRadio.channel( 'mp' ).reply( 'init:partCollection', this.initPartCollection, this );\n\n\t\t\t/*\n\t\t\t * Listen for requests for our part collection.\n\t\t\t */\n\t\t\tnfRadio.channel( 'mp' ).reply( 'get:collection', this.getCollection, this );\n\n\t\t\t/*\n\t\t\t * When we add a field to our field collection, collection, trigger an \"add:model\"\n\t\t\t */\n\t\t\tthis.listenTo( nfRadio.channel( 'fields' ), 'add:field', this.addField );\n\t\t},\n\n\t\tinitPartCollection: function( partCollection ) {\n\t\t\tthis.collection = partCollection;\n\t\t},\n\n\t\tgetCollection: function() {\n\t\t\treturn this.collection;\n\t\t},\n\n\t\taddField: function( fieldModel ) {\n\t\t\tthis.collection.getFormContentData().trigger( 'add:field', fieldModel );\n\t\t\tif( 1 == this.collection.getFormContentData().length ) {\n\t\t\t\tthis.collection.getFormContentData().trigger( 'reset' );\n\t\t\t}\n\t\t}\n\n\t});\n\n\treturn controller;\n} );\n","/**\n * Listen for clicks on our previous and next buttons\n * \n * @package Ninja Forms Multi-Part\n * @subpackage Fields\n * @copyright (c) 2016 WP Ninjas\n * @since 3.0\n */\ndefine(\t'controllers/clickControls',[],\tfunction () {\n\tvar controller = Marionette.Object.extend( {\n\t\tinitialize: function() {\n\t\t\tthis.listenTo( nfRadio.channel( 'mp' ), 'click:previous', this.clickPrevious );\n\t\t\tthis.listenTo( nfRadio.channel( 'mp' ), 'click:next', this.clickNext );\n\t\t\tthis.listenTo( nfRadio.channel( 'mp' ), 'click:new', this.clickNew );\n\t\t\tthis.listenTo( nfRadio.channel( 'mp' ), 'click:part', this.clickPart );\n\n\t\t\tthis.listenTo( nfRadio.channel( 'setting-name-mp_remove' ), 'click:extra', this.clickRemove );\n\t\t\tthis.listenTo( nfRadio.channel( 'setting-name-mp_duplicate' ), 'click:extra', this.clickDuplicate );\n\n\t\t},\n\n\t\tclickPrevious: function( e ) {\n\t\t\tvar collection = nfRadio.channel( 'mp' ).request( 'get:collection' );\n\t\t\tcollection.previous();\n\t\t},\n\n\t\tclickNext: function( e ) {\n\t\t\tvar collection = nfRadio.channel( 'mp' ).request( 'get:collection' );\n\t\t\tcollection.next();\n\t\t},\n\n\t\tclickNew: function( e ) {\n\t\t\tvar collection = nfRadio.channel( 'mp' ).request( 'get:collection' );\n\t\t\tvar model = collection.append({});\n\t\t\t\n\t\t\t/*\n\t\t\t * Register our new part to the change manager.\n\t\t\t */\n\t\t\t// Set our 'clean' status to false so that we get a notice to publish changes\n\t\t\tnfRadio.channel( 'app' ).request( 'update:setting', 'clean', false );\n\t\t\t// Update our preview\n\t\t\tnfRadio.channel( 'app' ).request( 'update:db' );\n\n\t\t\t// Add our field addition to our change log.\n\t\t\tvar label = {\n\t\t\t\tobject: 'Part',\n\t\t\t\tlabel: model.get( 'title' ),\n\t\t\t\tchange: 'Added',\n\t\t\t\tdashicon: 'plus-alt'\n\t\t\t};\n\n\t\t\tvar data = {\n\t\t\t\tcollection: model.collection\n\t\t\t};\n\n\t\t\tvar newChange = nfRadio.channel( 'changes' ).request( 'register:change', 'addPart', model, null, label, data );\n\t\t},\n\n\t\tclickPart: function( e, partModel ) {\n\t\t\tif ( partModel == partModel.collection.getElement( partModel ) ) {\n\t\t\t\t/*\n\t\t\t\t * If we are on the active part, open the drawer for that part.\n\t\t\t\t */\n\t\t\t\tvar settingGroupCollection = nfRadio.channel( 'mp' ).request( 'get:settingGroupCollection' );\n\t\t\t\tnfRadio.channel( 'app' ).request( 'open:drawer', 'editSettings', { model: partModel, groupCollection: settingGroupCollection } );\n\t\t\t} else {\n\t\t\t\t/*\n\t\t\t\t * If we aren't on the active part, move to it.\n\t\t\t\t */\n\t\t\t\tpartModel.collection.setElement( partModel );\n\t\t\t}\n\t\t},\n\n\t\tclickRemove: function( e, settingModel, partModel, settingView ) {\n\t\t\t/*\n\t\t\t * Close the drawer and remove our part.\n\t\t\t */\n\t\t\tpartModel.collection.remove( partModel );\n\t\t},\n\n\t\tclickDuplicate: function( e, settingModel, partModel, settingView ) {\n\t\t\tvar partClone = nfRadio.channel( 'app' ).request( 'clone:modelDeep', partModel );\n\t\t\tpartModel.collection.add( partClone );\n\t\t\tpartClone.set( 'order', partModel.get( 'order' ) );\n\t\t\tpartModel.collection.updateOrder();\n\t\t\tpartModel.collection.setElement( partClone );\n\t\t}\n\n\t});\n\n\treturn controller;\n} );\n","/**\n * Listen for drag events on our arrows.\n * \n * @package Ninja Forms Multi-Part\n * @subpackage Fields\n * @copyright (c) 2016 WP Ninjas\n * @since 3.0\n */\ndefine(\t'controllers/gutterDroppables',[],\tfunction () {\n\tvar controller = Marionette.Object.extend( {\n\t\tinitialize: function() {\n\t\t\tthis.listenTo( nfRadio.channel( 'mp' ), 'over:gutter', this.over );\n\t\t\tthis.listenTo( nfRadio.channel( 'mp' ), 'out:gutter', this.out );\n\t\t\tthis.listenTo( nfRadio.channel( 'mp' ), 'drop:rightGutter', this.dropRight );\n\t\t\tthis.listenTo( nfRadio.channel( 'mp' ), 'drop:leftGutter', this.dropLeft );\n\t\t},\n\n\t\tover: function( ui, partCollection ) {\n\t\t\t/*\n\t\t\t * Remove any other draggable placeholders.\n\t\t\t */\n\t\t\tjQuery( '#nf-main' ).find( '.nf-fields-sortable-placeholder' ).addClass( 'nf-sortable-removed' ).removeClass( 'nf-fields-sortable-placeholder' );\n\n\t\t\t// Trigger Ninja Forms default handler for being over a field sortable.\n\t\t\tui.item = ui.draggable;\n\t\t\tnfRadio.channel( 'app' ).request( 'over:fieldsSortable', ui );\n\t\t\t\n\t\t\t/*\n\t\t\t * If we hover over our droppable for more than x seconds, change the part.\n\t\t\t */\n\t\t\t// setTimeout( this.changePart, 1500, ui, partCollection );\n\t\t},\n\n\t\tout: function( ui, partCollection ) {\n\t\t\t/*\n\t\t\t * Re-add any draggable placeholders that we removed.\n\t\t\t */\n\t\t\tjQuery( '#nf-main' ).find( '.nf-sortable-removed' ).addClass( 'nf-fields-sortable-placeholder' );\n\t\t\t\n\t\t\t// Trigger Ninja Forms default handler for being out of a field sortable.\n\t\t\tui.item = ui.draggable;\n\t\t\tnfRadio.channel( 'app' ).request( 'out:fieldsSortable', ui );\n\n\t\t\t/*\n\t\t\t * If we hover over our droppable for more than x seconds, change the part.\n\t\t\t */\n\t\t\t// clearTimeout( this.changePart );\n\t\t},\n\n\t\tdrop: function( ui, partCollection, dir ) {\n\t\t\tui.draggable.dropping = true;\n\t\t\tui.item = ui.draggable;\n\t\t\tnfRadio.channel( 'app' ).request( 'out:fieldsSortable', ui );\n\t\t\tnfRadio.channel( 'fields' ).request( 'sort:fields', null, null, false );\n\n\t\t\t/*\n\t\t\t * If we hover over our droppable for more than x seconds, change the part.\n\t\t\t */\n\t\t\t// clearTimeout( this.changePart );\t\t\t\t\n\t\t},\n\n\t\tdropLeft: function( ui, partCollection ) {\n\t\t\tthis.drop( ui, partCollection, 'left' );\n\t\t\t/*\n\t\t\t * Check to see if we have a previous part.\n\t\t\t */\n\t\t\tif ( ! partCollection.hasPrevious() ) return;\n\t\t\t/*\n\t\t\t * If we're dealing with a field that already exists on our form, handle moving it.\n\t\t\t */\n\t\t\tif ( jQuery( ui.draggable ).hasClass( 'nf-field-wrap' ) ) {\n\t\t\t\tvar fieldModel = nfRadio.channel( 'fields' ).request( 'get:field', jQuery( ui.draggable ).data( 'id' ) );\n\t\t\t\t/*\n\t\t\t\t * Add the dragged field to the previous part.\n\t\t\t\t */\n\t\t\t\tpartCollection.getFormContentData().trigger( 'remove:field', fieldModel );\n\t\t\t\tpartCollection.at( partCollection.indexOf( partCollection.getElement() ) - 1 ).get( 'formContentData' ).trigger( 'append:field', fieldModel );\n\t\t\t} else if ( jQuery( ui.draggable ).hasClass( 'nf-field-type-draggable' ) ) {\n\t\t\t\tvar type = jQuery( ui.draggable ).data( 'id' );\n\t\t\t\tvar fieldModel = this.addField( type, partCollection );\n\t\t\t\t/*\n\t\t\t\t * We have a previous part. Add the new field to it.\n\t\t\t\t */\n\t\t\t\tpartCollection.at( partCollection.indexOf( partCollection.getElement() ) - 1 ).get( 'formContentData' ).trigger( 'append:field', fieldModel );\n\t\t\t} else {\n\t\t\t\t/*\n\t\t\t\t * We are dropping a stage\n\t\t\t\t */\n\t\t\t\t\n\t\t\t\t// Make sure that our staged fields are sorted properly.\t\n\t\t\t\tnfRadio.channel( 'fields' ).request( 'sort:staging' );\n\t\t\t\t// Grab our staged fields.\n\t\t\t\tvar stagedFields = nfRadio.channel( 'fields' ).request( 'get:staging' );\n\n\t\t\t\t_.each( stagedFields.models, function( field, index ) {\n\t\t\t\t\t// Add our field.\n\t\t\t\t\t\n\t\t\t\t\tvar fieldModel = this.addField( field.get( 'slug' ), partCollection );\n\t\t\t\t\tpartCollection.at( partCollection.indexOf( partCollection.getElement() ) - 1 ).get( 'formContentData' ).trigger( 'append:field', fieldModel );\n\t\t\t\t}, this );\n\n\t\t\t\t// Clear our staging\n\t\t\t\tnfRadio.channel( 'fields' ).request( 'clear:staging' );\n\t\t\t}\n\t\t},\n\n\t\tdropRight: function( ui, partCollection ) {\n\t\t\tthis.drop( ui, partCollection );\n\t\t\t/*\n\t\t\t * If we're dealing with a field that already exists on our form, handle moving it.\n\t\t\t */\n\t\t\tif ( jQuery( ui.draggable ).hasClass( 'nf-field-wrap' ) ) {\n\t\t\t\tvar fieldModel = nfRadio.channel( 'fields' ).request( 'get:field', jQuery( ui.draggable ).data( 'id' ) );\n\t\t\t\t/*\n\t\t\t\t * Check to see if we have a next part.\n\t\t\t\t */\n\t\t\t\tif ( partCollection.hasNext() ) {\n\t\t\t\t\t/*\n\t\t\t\t\t * Add the dragged field to the next part.\n\t\t\t\t\t */\n\t\t\t\t\tpartCollection.getFormContentData().trigger( 'remove:field', fieldModel );\n\t\t\t\t\tpartCollection.at( partCollection.indexOf( partCollection.getElement() ) + 1 ).get( 'formContentData' ).trigger( 'append:field', fieldModel );\n\t\t\t\t} else {\n\t\t\t\t\tvar oldPart = partCollection.getElement();\n\t\t\t\t\t/*\n\t\t\t\t\t * Add the dragged field to a new part.\n\t\t\t\t\t */\n\t\t\t\t\tpartCollection.getFormContentData().trigger( 'remove:field', fieldModel );\n\t\t\t\t\tvar newPart = partCollection.append( { formContentData: [ fieldModel.get( 'key' ) ] } );\n\t\t\t\t\tpartCollection.setElement( newPart );\n\n\t\t\t\t\t/*\n\t\t\t\t\t * Register our new part to the change manager.\n\t\t\t\t\t */\n\t\t\t\t\t// Set our 'clean' status to false so that we get a notice to publish changes\n\t\t\t\t\tnfRadio.channel( 'app' ).request( 'update:setting', 'clean', false );\n\t\t\t\t\t// Update our preview\n\t\t\t\t\tnfRadio.channel( 'app' ).request( 'update:db' );\n\n\t\t\t\t\t// Add our field addition to our change log.\n\t\t\t\t\tvar label = {\n\t\t\t\t\t\tobject: 'Part',\n\t\t\t\t\t\tlabel: newPart.get( 'title' ),\n\t\t\t\t\t\tchange: 'Added',\n\t\t\t\t\t\tdashicon: 'plus-alt'\n\t\t\t\t\t};\n\n\t\t\t\t\tvar data = {\n\t\t\t\t\t\tcollection: newPart.collection,\n\t\t\t\t\t\toldPart: oldPart,\n\t\t\t\t\t\tfieldModel: fieldModel\n\t\t\t\t\t};\n\n\t\t\t\t\tvar newChange = nfRadio.channel( 'changes' ).request( 'register:change', 'addPart', newPart, null, label, data );\n\n\t\t\t\t}\n\t\t\t} else if ( jQuery( ui.draggable ).hasClass( 'nf-field-type-draggable' ) ) {\n\t\t\t\tvar type = jQuery( ui.draggable ).data( 'id' );\n\t\t\t\tvar fieldModel = this.addField( type, partCollection );\n\t\t\t\tif ( partCollection.hasNext() ) {\n\t\t\t\t\t/*\n\t\t\t\t\t * We have a next part. Add the new field to it.\n\t\t\t\t\t */\n\t\t\t\t\tpartCollection.at( partCollection.indexOf( partCollection.getElement() ) + 1 ).get( 'formContentData' ).trigger( 'append:field', fieldModel );\n\t\t\t\t\treturn false;\n\t\t\t\t} else {\n\t\t\t\t\t/*\n\t\t\t\t\t * We don't have a next part, so add a new one, then add this field to it.\n\t\t\t\t\t */\n\t\t\t\t\tvar newPart = partCollection.append( { formContentData: [ fieldModel.get( 'key' ) ] } );\n\t\t\t\t\tpartCollection.setElement( newPart );\n\n\t\t\t\t\t/*\n\t\t\t\t\t * Register our new part to the change manager.\n\t\t\t\t\t */\n\t\t\t\t\t// Set our 'clean' status to false so that we get a notice to publish changes\n\t\t\t\t\tnfRadio.channel( 'app' ).request( 'update:setting', 'clean', false );\n\t\t\t\t\t// Update our preview\n\t\t\t\t\tnfRadio.channel( 'app' ).request( 'update:db' );\n\n\t\t\t\t\t// Add our field addition to our change log.\n\t\t\t\t\tvar label = {\n\t\t\t\t\t\tobject: 'Part',\n\t\t\t\t\t\tlabel: newPart.get( 'title' ),\n\t\t\t\t\t\tchange: 'Added',\n\t\t\t\t\t\tdashicon: 'plus-alt'\n\t\t\t\t\t};\n\n\t\t\t\t\tvar data = {\n\t\t\t\t\t\tcollection: newPart.collection,\n\n\t\t\t\t\t};\n\n\t\t\t\t\tvar newChange = nfRadio.channel( 'changes' ).request( 'register:change', 'addPart', newPart, null, label, data );\n\n\t\t\t\t\treturn newPart;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t// Make sure that our staged fields are sorted properly.\t\n\t\t\t\tnfRadio.channel( 'fields' ).request( 'sort:staging' );\n\t\t\t\t// Grab our staged fields.\n\t\t\t\tvar stagedFields = nfRadio.channel( 'fields' ).request( 'get:staging' );\n\t\t\t\t\n\t\t\t\tvar keys = [];\n\t\t\t\t_.each( stagedFields.models, function( field, index ) {\n\t\t\t\t\t// Add our field.\n\t\t\t\t\tvar fieldModel = this.addField( field.get( 'slug' ), partCollection );\n\t\t\t\t\tif ( partCollection.hasNext() ) {\n\t\t\t\t\t\tpartCollection.at( partCollection.indexOf( partCollection.getElement() ) + 1 ).get( 'formContentData' ).trigger( 'append:field', fieldModel );\n\t\t\t\t\t} else {\n\t\t\t\t\t\tkeys.push( fieldModel.get( 'key' ) );\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t}, this );\n\n\t\t\t\tif ( ! partCollection.hasNext() ) {\n\t\t\t\t\t/*\n\t\t\t\t\t * Add each of our fields to our next part\n\t\t\t\t\t */\n\t\t\t\t\tvar newPart = partCollection.append( { formContentData: keys } );\n\t\t\t\t\tpartCollection.setElement( newPart );\n\n\t\t\t\t\t/*\n\t\t\t\t\t * Register our new part to the change manager.\n\t\t\t\t\t */\n\t\t\t\t\t// Set our 'clean' status to false so that we get a notice to publish changes\n\t\t\t\t\tnfRadio.channel( 'app' ).request( 'update:setting', 'clean', false );\n\t\t\t\t\t// Update our preview\n\t\t\t\t\tnfRadio.channel( 'app' ).request( 'update:db' );\n\n\t\t\t\t\t// Add our field addition to our change log.\n\t\t\t\t\tvar label = {\n\t\t\t\t\t\tobject: 'Part',\n\t\t\t\t\t\tlabel: newPart.get( 'title' ),\n\t\t\t\t\t\tchange: 'Added',\n\t\t\t\t\t\tdashicon: 'plus-alt'\n\t\t\t\t\t};\n\n\t\t\t\t\tvar data = {\n\t\t\t\t\t\tcollection: newPart.collection\n\t\t\t\t\t};\n\n\t\t\t\t\tvar newChange = nfRadio.channel( 'changes' ).request( 'register:change', 'addPart', newPart, null, label, data );\t\t\t\t\n\t\t\t\t}\n\n\t\t\t\t// Clear our staging\n\t\t\t\tnfRadio.channel( 'fields' ).request( 'clear:staging' );\n\t\t\t}\n\t\t},\n\n\t\taddField: function( type, collection ) {\n\t\t\tvar fieldType = nfRadio.channel( 'fields' ).request( 'get:type', type ); \n\t\t\t// Add our field\n\t\t\tvar fieldModel = nfRadio.channel( 'fields' ).request( 'add', {\n\t\t\t\tlabel: fieldType.get( 'nicename' ),\n\t\t\t\ttype: type\n\t\t\t} );\n\n\t\t\tcollection.getFormContentData().trigger( 'remove:field', fieldModel );\n\t\t\treturn fieldModel;\n\t\t},\n\n\t\tchangePart: function( ui, partCollection ) {\n\t\t\tpartCollection.next();\n\t\t\tjQuery( ui.helper ).draggable();\n\t\t}\n\n\t});\n\n\treturn controller;\n} );\n","/**\n * Stores part setting information.\n * \n * @package Ninja Forms builder\n * @subpackage App - Edit Settings Drawer\n * @copyright (c) 2016 WP Ninjas\n * @since 3.0\n */\ndefine( 'controllers/partSettings',[], function( SettingGroupCollection ) {\n\tvar controller = Marionette.Object.extend( {\n\t\tinitialize: function() {\n\t\t\t/*\n\t\t\t * Instantiate our setting group collection\n\t\t\t */\n\t\t\tthis.setupCollection();\n\n\t\t\t// Respond to requests for our part setting group collection\n\t\t\tnfRadio.channel( 'mp' ).reply( 'get:settingGroupCollection', this.getCollection, this );\n\t\t},\n\n\t\tsetupCollection: function() {\n\t\t\tvar settingGroupCollection = nfRadio.channel( 'app' ).request( 'get:settingGroupCollectionDefinition' );\n\t\t\tthis.collection = new settingGroupCollection([\n\t\t\t\t{\n\t\t\t\t\tid: 'primary',\n\t\t\t\t\tlabel: '',\n\t\t\t\t\tdisplay: true,\n\t\t\t\t\tpriority: 100,\n\t\t\t\t\tsettings: [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tname: 'title',\n\t\t\t\t\t\t\ttype: 'textbox',\n\t\t\t\t\t\t\tlabel: 'Part Title',\n\t\t\t\t\t\t\twidth: 'full',\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tname: 'mp_remove',\n\t\t\t\t\t\t\ttype: 'html',\n\t\t\t\t\t\t\twidth: 'one-half',\n\t\t\t\t\t\t\tvalue: '<a href=\"#\" class=\"extra\">Remove Part</a>'\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tname: 'mp_duplicate',\n\t\t\t\t\t\t\ttype: 'html',\n\t\t\t\t\t\t\twidth: 'one-half',\n\t\t\t\t\t\t\tvalue: '<a href=\"#\" class=\"extra\">Duplicate Part</a>'\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t] );\n\t\t},\n\n\t\t/**\n\t\t * Return our setting group collection.\n\t\t *\n\t\t * @since  3.0\n\t\t * @return backbone.collection\n\t\t */\n\t\tgetCollection: function() {\n\t\t\treturn this.collection;\n\t\t}\n\n\t});\n\n\treturn controller;\n} );\n","/**\n * Handles events for the part items in our bottom drawer.\n * \n * @package Ninja Forms Multi-Part\n * @subpackage Fields\n * @copyright (c) 2016 WP Ninjas\n * @since 3.0\n */\ndefine(\t'controllers/partDroppable',[],\tfunction () {\n\tvar controller = Marionette.Object.extend( {\n\t\tinitialize: function() {\n\t\t\tthis.listenTo( nfRadio.channel( 'mp' ), 'over:part', this.over );\n\t\t\tthis.listenTo( nfRadio.channel( 'mp' ), 'out:part', this.out );\n\t\t\tthis.listenTo( nfRadio.channel( 'mp' ), 'drop:part', this.drop );\n\t\t},\n\n\t\tover: function( e, ui, partModel, partView ) {\n\t\t\t/*\n\t\t\t * Remove any other draggable placeholders.\n\t\t\t */\n\t\t\tjQuery( '#nf-main' ).find( '.nf-fields-sortable-placeholder' ).addClass( 'nf-sortable-removed' ).removeClass( 'nf-fields-sortable-placeholder' );\n\n\t\t\t// Trigger Ninja Forms default handler for being over a field sortable.\n\t\t\tui.item = ui.draggable;\n\n\t\t\tif ( jQuery( ui.draggable ).hasClass( 'nf-field-type-draggable' ) || jQuery( ui.draggable ).hasClass( 'nf-stage' ) ) {\n\t\t\t\tnfRadio.channel( 'app' ).request( 'over:fieldsSortable', ui );\n\t\t\t} else {\n\t\t\t\tjQuery( ui.helper ).css( { 'width': '300px', 'height': '50px', 'opacity': '0.7' } );\n\t\t\t}\n\t\t},\n\n\t\tout: function( e, ui, partModel, partView ) {\n\t\t\t/*\n\t\t\t * Re-add any draggable placeholders that we removed.\n\t\t\t */\n\t\t\tjQuery( '#nf-main' ).find( '.nf-sortable-removed' ).addClass( 'nf-fields-sortable-placeholder' );\n\n\t\t\t// Trigger Ninja Forms default handler for being out of a field sortable.\n\t\t\tui.item = ui.draggable;\n\t\t\tif ( jQuery( ui.draggable ).hasClass( 'nf-field-type-draggable' ) || jQuery( ui.draggable ).hasClass( 'nf-stage' ) ) {\n\t\t\t\tnfRadio.channel( 'app' ).request( 'out:fieldsSortable', ui );\n\t\t\t} else {\n\t\t\t\t// Get our sortable element.\n\t\t\t\tvar sortableEl = nfRadio.channel( 'fields' ).request( 'get:sortableEl' );\n\t\t\t\t// Get our fieldwidth.\n\t\t\t\tvar fieldWidth = jQuery( sortableEl ).width();\n\t\t\t\tvar fieldHeight = jQuery( sortableEl ).height();\n\n\t\t\t\tjQuery( ui.helper ).css( { 'width': fieldWidth, 'height': '', 'opacity': '' } );\n\t\t\t}\n\t\t},\n\n\t\tdrop: function( e, ui, partModel, partView ) {\n\t\t\tui.draggable.dropping = true;\n\t\t\t// Trigger Ninja Forms default handler for being out of a field sortable.\n\t\t\tui.item = ui.draggable;\n\t\t\tnfRadio.channel( 'app' ).request( 'out:fieldsSortable', ui );\n\n\t\t\tjQuery( ui.draggable ).effect( 'transfer', { to: jQuery( partView.el ) }, 500 );\n\n\t\t\tif ( jQuery( ui.draggable ).hasClass( 'nf-field-wrap' ) ) { // Dropping a field that already exists\n\t\t\t\tthis.dropField( e, ui, partModel, partView );\n\t\t\t} else if ( jQuery( ui.draggable ).hasClass( 'nf-field-type-draggable' ) ) { // Dropping a new field\n\t\t\t\tthis.dropNewField( e, ui, partModel, partView );\n\t\t\t} else if ( jQuery( ui.draggable ).hasClass( 'nf-stage' ) ) { // Dropping the staging area\n\t\t\t\tthis.dropStaging( e, ui, partModel, partView );\n\t\t\t}\n\t\t},\n\n\t\tdropField: function( e, ui, partModel, partView ) {\n\t\t\t/*\n\t\t\t * If we are dropping a field that exists on our form already:\n\t\t\t * Remove it from the current part.\n\t\t\t * Add it to the new part.\n\t\t\t */\n\t\t\tnfRadio.channel( 'fields' ).request( 'sort:fields', null, null, false );\n\t\t\tnfRadio.channel( 'app' ).request( 'out:fieldsSortable', ui );\n\t\t\tvar fieldModel = nfRadio.channel( 'fields' ).request( 'get:field', jQuery( ui.draggable ).data( 'id' ) );\n\t\t\t/*\n\t\t\t * Add the dragged field to the previous part.\n\t\t\t */\n\t\t\tpartModel.collection.getFormContentData().trigger( 'remove:field', fieldModel );\n\t\t\tpartModel.get( 'formContentData' ).trigger( 'append:field', fieldModel );\n\t\t},\n\n\t\tdropNewField: function( e, ui, partModel, partView ) {\n\t\t\tvar type = jQuery( ui.draggable ).data( 'id' );\n\t\t\tvar fieldModel = this.addField( type, partModel.collection );\n\t\t\t/*\n\t\t\t * We have a previous part. Add the new field to it.\n\t\t\t */\n\t\t\tpartModel.get( 'formContentData' ).trigger( 'append:field', fieldModel );\n\t\t},\n\n\t\tdropStaging: function( e, ui, partModel, partView ) {\n\t\t\t/*\n\t\t\t * We are dropping a stage\n\t\t\t */\n\t\t\t\n\t\t\t// Make sure that our staged fields are sorted properly.\t\n\t\t\tnfRadio.channel( 'fields' ).request( 'sort:staging' );\n\t\t\t// Grab our staged fields.\n\t\t\tvar stagedFields = nfRadio.channel( 'fields' ).request( 'get:staging' );\n\n\t\t\t_.each( stagedFields.models, function( field, index ) {\n\t\t\t\t// Add our field.\n\t\t\t\tvar fieldModel = this.addField( field.get( 'slug' ), partModel.collection );\n\t\t\t\tpartModel.get( 'formContentData' ).trigger( 'append:field', fieldModel );\n\t\t\t}, this );\n\n\t\t\t// Clear our staging\n\t\t\tnfRadio.channel( 'fields' ).request( 'clear:staging' );\n\t\t},\t\n\n\t\taddField: function( type, collection ) {\n\t\t\tvar fieldType = nfRadio.channel( 'fields' ).request( 'get:type', type ); \n\t\t\t// Add our field\n\t\t\tvar fieldModel = nfRadio.channel( 'fields' ).request( 'add', {\n\t\t\t\tlabel: fieldType.get( 'nicename' ),\n\t\t\t\ttype: type\n\t\t\t} );\n\n\t\t\tcollection.getFormContentData().trigger( 'remove:field', fieldModel );\n\t\t\treturn fieldModel;\n\t\t}\n\n\n\t});\n\n\treturn controller;\n} );\n","/**\n * Handles events for our bottom drawer part title sortable\n * \n * @package Ninja Forms Multi-Part\n * @subpackage Fields\n * @copyright (c) 2016 WP Ninjas\n * @since 3.0\n */\ndefine(\t'controllers/partSortable',[],\tfunction () {\n\tvar controller = Marionette.Object.extend( {\n\t\tinitialize: function() {\n\t\t\tthis.listenTo( nfRadio.channel( 'mp' ), 'start:partSortable', this.start );\n\t\t\tthis.listenTo( nfRadio.channel( 'mp' ), 'stop:partSortable', this.stop );\n\t\t\tthis.listenTo( nfRadio.channel( 'mp' ), 'update:partSortable', this.update );\n\t\t},\n\n\t\tstart: function( e, ui, collection, collectionView ) {\n\t\t\t// If we aren't dragging an item in from types or staging, update our change log.\n\t\t\tif( ! jQuery( ui.item ).hasClass( 'nf-field-type-draggable' ) && ! jQuery( ui.item ).hasClass( 'nf-stage' ) ) { \n\t\t\t\tjQuery( ui.item ).css( 'opacity', '0.5' ).show();\n\t\t\t\tjQuery( ui.helper ).css( 'opacity', '0.75' );\n\t\t\t}\n\t\t},\n\n\t\tstop: function( e, ui, collection, collectionView ) {\n\t\t\t// If we aren't dragging an item in from types or staging, update our change log.\n\t\t\tif( ! jQuery( ui.item ).hasClass( 'nf-field-type-draggable' ) && ! jQuery( ui.item ).hasClass( 'nf-stage' ) ) { \n\t\t\t\tjQuery( ui.item ).css( 'opacity', '' );\n\t\t\t}\n\t\t},\n\n\t\tupdate: function( e, ui, collection, collectionView ) {\n\t\t\tjQuery( ui.item ).css( 'opacity', '' );\n\t\t\tvar order = _.without( jQuery( collectionView.el ).sortable( 'toArray' ), '' );\n\t\t\t_.each( order, function( cid, index ) {\n\t\t\t\tcollection.get( { cid: cid } ).set( 'order', index );\n\t\t\t}, this );\n\t\t\tcollection.sort();\n\t\t},\n\n\t});\n\n\treturn controller;\n} );\n","/**\n * Respond to undo requests.\n * \n * @package Ninja Forms Multi-Part\n * @subpackage Fields\n * @copyright (c) 2016 WP Ninjas\n * @since 3.0\n */\ndefine( 'controllers/undo',[], function() {\n\tvar controller = Marionette.Object.extend( {\n\t\tinitialize: function() {\n\t\t\tnfRadio.channel( 'changes' ).reply( 'undo:addPart', this.undoAddPart, this );\n\t\t},\n\n\t\tundoAddPart: function( change, undoAll ) {\n\t\t\tvar partModel = change.get( 'model' );\n\t\t\tvar data = change.get( 'data' );\n\t\t\tvar partCollection = data.collection;\n\t\t\tpartCollection.remove( partModel );\n\n\t\t\t/*\n\t\t\t * If we have a fieldModel, then we dragged an existing field to create our part.\n\t\t\t * Undoing should put that field back where it was.\n\t\t\t */\n\t\t\tif ( 'undefined' != typeof data.fieldModel ) {\n\t\t\t\tdata.oldPart.get( 'formContentData' ).trigger( 'add:field', data.fieldModel );\n\t\t\t}\n\n\t\t\t/*\n\t\t\t * Remove any changes that have this model.\n\t\t\t */\n\t\t\tvar changeCollection = nfRadio.channel( 'changes' ).request( 'get:collection' );\n\t\t\tchangeCollection.remove( changeCollection.filter( { model: partModel } ) );\n\t\t\t\n\t\t\tthis.maybeRemoveChange( change, undoAll );\n\t\t},\n\n\t\t/**\n\t\t * If our undo action was requested to 'remove' the change from the collection, remove it.\n\t\t * \n\t\t * @since  3.0\n\t\t * @param  backbone.model \tchange \tmodel of our change\n\t\t * @param  boolean \t\t\tremove \tshould we remove this item from our change collection\n\t\t * @return void\n\t\t */\n\t\tmaybeRemoveChange: function( change, undoAll ) {\t\t\t\n\t\t\tvar undoAll = typeof undoAll !== 'undefined' ? undoAll : false;\n\t\t\tif ( ! undoAll ) {\n\t\t\t\t// Update preview.\n\t\t\t\tnfRadio.channel( 'app' ).request( 'update:db' );\n\t\t\t\tvar changeCollection = nfRadio.channel( 'changes' ).request( 'get:collection' );\n\t\t\t\tchangeCollection.remove( change );\n\t\t\t\tif ( 0 == changeCollection.length ) {\n\t\t\t\t\tnfRadio.channel( 'app' ).request( 'update:setting', 'clean', true );\n\t\t\t\t\tnfRadio.channel( 'app' ).request( 'close:drawer' );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t});\n\n\treturn controller;\n} );\n","/*\n * Load our builder controllers\n */\ndefine( \n\t'controllers/loadControllers',[\n\t\t'controllers/data',\n\t\t'controllers/clickControls',\n\t\t'controllers/gutterDroppables',\n\t\t'controllers/partSettings',\n\t\t'controllers/partDroppable',\n\t\t'controllers/partSortable',\n\t\t'controllers/undo'\n\t], \n\tfunction\n\t(\n\t\tData,\n\t\tClickControls,\n\t\tGutterDroppables,\n\t\tPartSettings,\n\t\tPartDroppable,\n\t\tPartSortable,\n\t\tUndo\n\t)\n\t{\n\tvar controller = Marionette.Object.extend( {\n\t\tinitialize: function() {\n\t\t\tnew Data();\n\t\t\tnew ClickControls();\n\t\t\tnew GutterDroppables();\n\t\t\tnew PartSettings();\n\t\t\tnew PartDroppable();\n\t\t\tnew PartSortable();\n\t\t\tnew Undo();\n\t\t}\n\n\t});\n\n\treturn controller;\n} );\n","/**\n * Top drawer part view\n * \n * @package Ninja Forms builder\n * @subpackage App\n * @copyright (c) 2016 WP Ninjas\n * @since 3.0\n */\ndefine( 'views/drawerItem',[], function() {\n\tvar view = Marionette.ItemView.extend({\n\t\ttagName: 'li',\n\t\ttemplate: '#nf-tmpl-mp-drawer-item',\n\n\t\tinitialize: function() {\n\t\t\tthis.listenTo( this.model, 'change:title', this.render );\n\t\t\tthis.listenTo( this.model.collection, 'change:part', this.maybeChangeActive );\n\t\t},\n\n\t\tmaybeChangeActive: function() {\n\t\t\tjQuery( this.el ).removeClass( 'active' );\n\t\t\tif ( this.model == this.model.collection.getElement() ) {\n\t\t\t\tjQuery( this.el ).addClass( 'active' );\n\t\t\t}\n\t\t},\n\n\t\tattributes: function() {\n\t\t\treturn {\n\t\t\t\tid: this.model.cid\n\t\t\t}\n\t\t},\n\n\t\tonShow: function() {\n\t\t\tvar that = this;\n\t\t\tjQuery( this.el ).droppable( {\n\t\t\t\tactiveClass: 'mp-drag-active',\n\t\t\t\thoverClass: 'mp-drag-hover',\n\t\t\t\taccept: '.nf-field-type-draggable, .nf-field-wrap, .nf-stage',\n\t\t\t\ttolerance: 'pointer',\n\n\t\t\t\tover: function( e, ui ) {\n\t\t\t\t\tnfRadio.channel( 'mp' ).trigger( 'over:part', e, ui, that.model, that );\n\t\t\t\t},\n\n\t\t\t\tout: function( e, ui ) {\n\t\t\t\t\tnfRadio.channel( 'mp' ).trigger( 'out:part', e, ui, that.model, that );\n\t\t\t\t},\n\n\t\t\t\tdrop: function( e, ui ) {\n\t\t\t\t\tnfRadio.channel( 'mp' ).trigger( 'drop:part', e, ui, that.model, that );\n\t\t\t\t}\n\t\t\t} );\n\n\t\t\tthis.maybeChangeActive();\n\t\t},\n\n\t\tevents: {\n\t\t\t'click': 'click',\n\t\t},\n\n\t\tclick: function( e ) {\n\t\t\tnfRadio.channel( 'mp' ).trigger( 'click:part', e, this.model );\n\t\t},\n\n\t\ttemplateHelpers: function() {\n\t\t\tvar that = this;\n\t\t\treturn {\n\t\t\t\tgetIndex: function() {\n\t\t\t\t\treturn that.model.collection.indexOf( that.model ) + 1;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t});\n\n\treturn view;\n} );\n","/**\n * Drawer collection view.\n * \n * @package Ninja Forms builder\n * @subpackage App\n * @copyright (c) 2016 WP Ninjas\n * @since 3.0\n */\ndefine( 'views/drawerCollection',[ 'views/drawerItem' ], function( DrawerItemView ) {\n\tvar view = Marionette.CollectionView.extend( {\n\t\ttagName: 'ul',\n\t\tchildView: DrawerItemView,\n\t\treorderOnSort: true,\n\t\t\n\t\tonShow: function() {\n\t\t\tvar that = this;\n\t\t\tjQuery( this.el ).sortable( {\n\t\t\t\titems: 'li:not(.no-sort)',\n\t\t\t\thelper: 'clone',\n\n\t\t\t\tupdate: function( e, ui ) {\n\t\t\t\t\tnfRadio.channel( 'mp' ).trigger( 'update:partSortable', e, ui, that.collection, that );\n\t\t\t\t},\n\n\t\t\t\tstart: function( e, ui ) {\n\t\t\t\t\tnfRadio.channel( 'mp' ).trigger( 'start:partSortable', e, ui, that.collection, that );\n\t\t\t\t},\n\n\t\t\t\tstop: function( e, ui ) {\n\t\t\t\t\tnfRadio.channel( 'mp' ).trigger( 'stop:partSortable', e, ui, that.collection, that );\n\t\t\t\t}\n\t\t\t} );\n\t\t\n\t\t},\n\t} );\n\n\treturn view;\n} );\n","/**\n * Main layout view\n *\n * Regions:\n * mainContent\n * drawer\n * \n * @package Ninja Forms builder\n * @subpackage App\n * @copyright (c) 2015 WP Ninjas\n * @since 3.0\n */\ndefine( 'views/drawerLayout',[ 'views/drawerCollection' ], function( DrawerCollectionView ) {\n\tvar view = Marionette.LayoutView.extend({\n\t\ttagName: 'div',\n\t\ttemplate: '#nf-tmpl-mp-drawer-layout',\n\t\tregions: {\n\t\t\tviewport: '#nf-mp-drawer-viewport',\n\t\t},\n\n\t\tinitialize: function() {\n\t\t\t/*\n\t\t\t * Make sure that our drawer resizes to match our screen upon resize or drawer open/close.\n\t\t\t */\n\t\t\tjQuery( window ).on( 'resize', { context: this }, this.resizeEvent );\n\t\t\tthis.listenTo( nfRadio.channel( 'drawer' ), 'before:open', this.beforeDrawerOpen );\n\t\t\tthis.listenTo( nfRadio.channel( 'drawer' ), 'before:close', this.beforeDrawerClose );\n\t\t},\n\n\t\tonBeforeDestroy: function() {\n\t\t\tjQuery( window ).off( 'resize', this.resizeViewport );\n\t\t},\n\n\t\tonShow: function() {\n\t\t\tvar that = this;\n\t\t\tthis.viewport.show( new DrawerCollectionView( { collection: this.collection } ) );\n\n\t\t\t/*\n\t\t\t * When we hover over our arrows, scroll our part collection UL\n\t\t\t */\n\t\t\tjQuery( this.el ).find( '.nf-mp-drawer-scroll-previous' ).click( function( e ) {\n\t\t\t\tjQuery( that.viewport.el ).animate( {\n\t\t\t\t\tscrollLeft: '-=400'\n\t\t\t\t}, 'slow' );\n\t\t\t} );\n\n\t\t\tjQuery( this.el ).find( '.nf-mp-drawer-scroll-next' ).click( function( e ) {\n\t\t\t\tjQuery( that.viewport.el ).animate( {\n\t\t\t\t\tscrollLeft: '+=400'\n\t\t\t\t}, 'slow' );\n\t\t\t} );\n\t\t},\n\n\t\tonAttach: function() {\n\t\t\t/*\n\t\t\t * Set our initial part UL size.\n\t\t\t */\n\t\t\tvar ulWidth = 157;\n\t\t\tjQuery( this.viewport.el ).find( 'li' ).each( function() {\n\t\t\t\tulWidth += jQuery( this ).outerWidth();\n\t\t\t} );\n\n\t\t\tjQuery( this.viewport.el ).find( 'ul' ).width( ulWidth );\n\n\t\t\t/*\n\t\t\t * If our UL width is > than our available space, accounting for the drawer:\n\t\t\t * \n\t\t\t *  Set our viewport size.\n\t\t\t *  Show pagination arrows.\n\t\t\t *  \n\t\t\t */\n\t\t\tif ( ulWidth >= jQuery( window ).width() ) {\n\t\t\t \t/*\n\t\t\t \t * Set viewport size\n\t\t\t \t */\n\t\t\t\tthis.resizeViewport( this.viewport.el );\n\t\t\t\t/*\n\t\t\t\t * Show pagination arrows\n\t\t\t\t */\n\t\t\t\tjQuery( this.el ).find( '.nf-mp-drawer-scroll' ).show();\n\t\t\t}\n\t\t},\n\n\t\tresizeEvent: function( e ) {\n\t\t\te.data.context.resizeViewport( e.data.context.viewport.el );\n\t\t},\n\n\t\tbeforeDrawerClose: function() {\n\t\t\tvar targetWidth = jQuery( window ).width() - 140;\n\n\t\t\tvar ulWidth = jQuery( this.viewport.el ).find( 'ul' ).width();\n\n\t\t\tif ( ulWidth >= targetWidth ) {\n\t\t\t\t/*\n\t\t\t\t * Show pagination arrows\n\t\t\t\t */\n\t\t\t\tjQuery( this.el ).find( '.nf-mp-drawer-scroll' ).show();\n\t\t\t} else {\n\t\t\t\t/*\n\t\t\t\t * Hide pagination arrows\n\t\t\t\t */\n\t\t\t\tjQuery( this.el ).find( '.nf-mp-drawer-scroll' ).hide();\n\t\t\t}\n\n\t\t\tjQuery( this.viewport.el ).animate( {\n\t\t\t\twidth: targetWidth\n\t\t\t}, 500 );\n\t\t},\n\n\t\tbeforeDrawerOpen: function() {\n\t\t\tvar drawerEl = nfRadio.channel( 'app' ).request( 'get:drawerEl' );\n\t\t\tvar targetWidth = jQuery( drawerEl ).width() - 60;\n\n\t\t\tvar ulWidth = jQuery( this.viewport.el ).find( 'ul' ).width();\n\n\t\t\tif ( ulWidth >= targetWidth ) {\n\t\t\t\t/*\n\t\t\t\t * Show pagination arrows\n\t\t\t\t */\n\t\t\t\tjQuery( this.el ).find( '.nf-mp-drawer-scroll' ).show();\n\t\t\t} else {\n\t\t\t\t/*\n\t\t\t\t * Hide pagination arrows\n\t\t\t\t */\n\t\t\t\tjQuery( this.el ).find( '.nf-mp-drawer-scroll' ).hide();\n\t\t\t}\n\t\t\t\n\t\t\tjQuery( this.viewport.el ).animate( {\n\t\t\t\twidth: targetWidth\n\t\t\t}, 300 );\n\t\t},\n\n\t\tresizeViewport: function( viewportEl, targetWidth ) {\n\n\n\t\t\tvar builderEl = nfRadio.channel( 'app' ).request( 'get:builderEl' );\n\t\t\tif ( jQuery( builderEl ).hasClass( 'nf-drawer-opened' ) ) {\n\t\t\t\t/*\n\t\t\t\t * If our drawer is open, then the default target width is the drawer size - margins.\n\t\t\t\t */\t\n\t\t\t\tvar drawerEl = nfRadio.channel( 'app' ).request( 'get:drawerEl' );\n\t\t\t\ttargetWidth = targetWidth || jQuery( drawerEl ).outerWidth() - 140;\n\t\t\t} else {\n\t\t\t\t/*\n\t\t\t\t * If our drawer is closed, then the default target width is the window size - margins.\n\t\t\t\t */\n\t\t\t\ttargetWidth = targetWidth || jQuery( window ).width() - 140;\n\t\t\t}\n\n\t\t\tvar ulWidth = jQuery( this.viewport.el ).find( 'ul' ).width();\n\n\t\t\tif ( ulWidth >= targetWidth ) {\n\t\t\t\t/*\n\t\t\t\t * Show pagination arrows\n\t\t\t\t */\n\t\t\t\tjQuery( this.el ).find( '.nf-mp-drawer-scroll' ).show();\n\t\t\t} else {\n\t\t\t\t/*\n\t\t\t\t * Hide pagination arrows\n\t\t\t\t */\n\t\t\t\tjQuery( this.el ).find( '.nf-mp-drawer-scroll' ).hide();\n\t\t\t}\n\t\t\t\n\t\t\tjQuery( viewportEl ).width( targetWidth );\n\t\t}\n\t});\n\n\treturn view;\n} );\n","/**\n * Main layout view\n *\n * Regions:\n * mainContent\n * drawer\n * \n * @package Ninja Forms builder\n * @subpackage App\n * @copyright (c) 2015 WP Ninjas\n * @since 3.0\n */\ndefine( 'views/layout',[ 'views/drawerLayout' ], function( DrawerLayoutView ) {\n\tvar view = Marionette.LayoutView.extend({\n\t\ttagName: 'div',\n\t\ttemplate: '#nf-tmpl-mp-layout',\n\n\t\tregions: {\n\t\t\tmainContent: '#nf-mp-main-content',\n\t\t\tdrawer: '#nf-mp-drawer'\n\t\t},\n\n\t\tinitialize: function() {\n\t\t\tthis.listenTo( this.collection, 'change:part', this.changePart );\n\t\t},\n\n\t\tonShow: function() {\n\t\t\tthis.drawer.show( new DrawerLayoutView( { collection: this.collection } ) );\n\n\t\t\t/*\n\t\t\t * Check our fieldContentViewsFilter to see if we have any defined.\n\t\t\t * If we do, overwrite our default with the view returned from the filter.\n\t\t\t */\n\t\t\tvar formContentViewFilters = nfRadio.channel( 'formContent' ).request( 'get:viewFilters' );\n\t\t\t\n\t\t\t/* \n\t\t\t* Get our first filter, this will be the one with the highest priority.\n\t\t\t*/\n\t\t\tvar sortedArray = _.without( formContentViewFilters, undefined );\n\t\t\tvar callback = sortedArray[1];\n\t\t\tthis.formContentView = callback();\n\n\t\t\t/*\n\t\t\t * Before we display anything, if we don't have any parts, create a new, empty part\n\t\t\t */\n\t\t\tif ( 0 == this.collection.length ) {\n\t\t\t\tthis.collection.add( {}, { silent: true } );\n\t\t\t}\n\n\t\t\tthis.mainContent.show(  new this.formContentView( { collection: this.collection.getFormContentData() } ) );\n\n\t\t},\n\n\t\tchangePart: function() {\n\t\t\tvar currentIndex = this.collection.indexOf( this.collection.getElement() );\n\t\t\tvar previousIndex = this.collection.indexOf( this.collection.previousElement );\n\n\t\t\tif ( currentIndex > previousIndex ) {\n\t\t\t\tvar hideDir = 'left';\n\t\t\t\tvar showDir = 'right';\n\t\t\t} else {\n\t\t\t\tvar hideDir = 'right';\n\t\t\t\tvar showDir = 'left';\n\t\t\t}\n\n\t\t\tvar that = this;\n\t\t\t/*\n\t\t\t * Start our current part sliding out.\n\t\t\t */\n\t\t\tjQuery( this.mainContent.el ).hide( 'slide', { direction: hideDir }, 300, function() {\n\t\t\t\tthat.mainContent.empty();\n\t\t\t\tthat.mainContent.show( new that.formContentView( { collection: that.collection.getFormContentData() } ) );\n\t\t\t} );\n\n\t\t\tjQuery( that.mainContent.el ).show( 'slide', { direction: showDir }, 200 );\n\t\t}\n\t});\n\n\treturn view;\n} );\n","/**\n * Main content left gutter\n * \n * @package Ninja Forms builder\n * @subpackage App\n * @copyright (c) 2016 WP Ninjas\n * @since 3.0\n */\ndefine( 'views/gutterLeft',[], function() {\n\tvar view = Marionette.ItemView.extend({\n\t\ttagName: 'div',\n\t\ttemplate: '#nf-tmpl-mp-gutter-left',\n\n\t\tevents: {\n\t\t\t'click .fa': 'clickPrevious'\n\t\t},\n\n\t\tinitialize: function() {\n\t\t\tthis.collection = nfRadio.channel( 'mp' ).request( 'get:collection' );\n\t\t\tthis.listenTo( this.collection, 'change:part', this.render );\n\t\t\tthis.listenTo( this.collection, 'sort', this.render );\n\t\t\tthis.listenTo( this.collection, 'remove', this.render );\n\t\t},\n\n\t\tonRender: function() {\n\t\t\tvar that = this;\n\t\t\tjQuery( this.el ).find( '.fa' ).droppable( {\n\t\t\t\t// Activate by pointer\n\t\t\t\ttolerance: 'pointer',\n\t\t\t\t// Class added when we're dragging over\n\t\t\t\thoverClass: 'mp-circle-over',\n\t\t\t\tactiveClass: 'mp-circle-active',\n\t\t\t\t// Which elements do we want to accept?\n\t\t\t\taccept: '.nf-field-type-draggable, .nf-field-wrap, .nf-stage',\n\n\t\t\t\t/**\n\t\t\t\t * When we drag over this droppable, trigger a radio event.\n\t\t\t\t * \n\t\t\t\t * @since  3.0\n\t\t\t\t * @param  object \te  event\n\t\t\t\t * @param  object \tui jQuery UI element\n\t\t\t\t * @return void\n\t\t\t\t */\n\t\t\t\tover: function( e, ui ) {\n\t\t\t\t\tnfRadio.channel( 'mp' ).trigger( 'over:gutter', ui, that.collection );\n\t\t\t\t},\n\n\t\t\t\t/**\n\t\t\t\t * When we drag out of this droppable, trigger a radio event.\n\t\t\t\t * \n\t\t\t\t * @since  3.0\n\t\t\t\t * @param  object \te  event\n\t\t\t\t * @param  object \tui jQuery UI element\n\t\t\t\t * @return void\n\t\t\t\t */\n\t\t\t\tout: function( e, ui ) {\n\t\t\t\t\tnfRadio.channel( 'mp' ).trigger( 'out:gutter', ui, that.collection );\n\t\t\t\t},\n\n\t\t\t\t/**\n\t\t\t\t * When we drop on this droppable, trigger a radio event.\n\t\t\t\t * \n\t\t\t\t * @since  3.0\n\t\t\t\t * @param  object \te  event\n\t\t\t\t * @param  object \tui jQuery UI element\n\t\t\t\t * @return void\n\t\t\t\t */\n\t\t\t\tdrop: function( e, ui ) {\n\t\t\t\t\tnfRadio.channel( 'mp' ).trigger( 'drop:leftGutter', ui, that.collection );\n\t\t\t\t}\n\t\t\t} );\n\t\t},\n\n\t\tclickPrevious: function( e ) {\n\t\t\tnfRadio.channel( 'mp' ).trigger( 'click:previous', e );\n\t\t},\n\n\t\ttemplateHelpers: function() {\n\t\t\tvar that = this;\n\t\t\treturn {\n\t\t\t\thasPrevious: function() {\n\t\t\t\t\treturn that.collection.hasPrevious();\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\n\t\tchangePart: function( context ) {\n\t\t\tcontext.collection.previous();\n\t\t}\n\t});\n\n\treturn view;\n} );\n","/**\n * Main content right gutter\n * \n * @package Ninja Forms builder\n * @subpackage App\n * @copyright (c) 2015 WP Ninjas\n * @since 3.0\n */\ndefine( 'views/gutterRight',[], function() {\n\tvar view = Marionette.ItemView.extend({\n\t\ttagName: 'div',\n\t\ttemplate: '#nf-tmpl-mp-gutter-right',\n\n\t\tevents: {\n\t\t\t'click .next': 'clickNext',\n\t\t\t'click .new': 'clickNew'\n\t\t},\n\n\t\tinitialize: function() {\n\t\t\tthis.collection = nfRadio.channel( 'mp' ).request( 'get:collection' );\n\t\t\tthis.listenTo( this.collection, 'change:part', this.render );\n\t\t\tthis.listenTo( this.collection, 'sort', this.render );\n\t\t\tthis.listenTo( this.collection, 'remove', this.render );\n\t\t\tthis.listenTo( this.collection, 'add', this.render );\n\n\t\t\tthis.listenTo( nfRadio.channel( 'fields' ), 'add:field', this.render );\n\t\t},\n\n\t\ttest: function() {\n\t\t\tconsole.log( 'test test test' );\n\t\t},\n\n\t\tonRender: function() {\n\t\t\tvar that = this;\n\t\t\tjQuery( this.el ).find( '.fa' ).droppable( {\n\t\t\t\t// Activate by pointer\n\t\t\t\ttolerance: 'pointer',\n\t\t\t\t// Class added when we're dragging over\n\t\t\t\thoverClass: 'mp-circle-over',\n\t\t\t\tactiveClass: 'mp-circle-active',\n\t\t\t\t// Which elements do we want to accept?\n\t\t\t\taccept: '.nf-field-type-draggable, .nf-field-wrap, .nf-stage',\n\n\t\t\t\t/**\n\t\t\t\t * When we drag over this droppable, trigger a radio event.\n\t\t\t\t * \n\t\t\t\t * @since  3.0\n\t\t\t\t * @param  object \te  event\n\t\t\t\t * @param  object \tui jQuery UI element\n\t\t\t\t * @return void\n\t\t\t\t */\n\t\t\t\tover: function( e, ui ) {\n\t\t\t\t\tnfRadio.channel( 'mp' ).trigger( 'over:gutter', ui, that.collection );\n\t\t\t\t},\n\n\t\t\t\t/**\n\t\t\t\t * When we drag out of this droppable, trigger a radio event.\n\t\t\t\t * \n\t\t\t\t * @since  3.0\n\t\t\t\t * @param  object \te  event\n\t\t\t\t * @param  object \tui jQuery UI element\n\t\t\t\t * @return void\n\t\t\t\t */\n\t\t\t\tout: function( e, ui ) {\n\t\t\t\t\tnfRadio.channel( 'mp' ).trigger( 'out:gutter', ui, that.collection );\n\t\t\t\t},\n\n\t\t\t\t/**\n\t\t\t\t * When we drop on this droppable, trigger a radio event.\n\t\t\t\t * \n\t\t\t\t * @since  3.0\n\t\t\t\t * @param  object \te  event\n\t\t\t\t * @param  object \tui jQuery UI element\n\t\t\t\t * @return void\n\t\t\t\t */\n\t\t\t\tdrop: function( e, ui ) {\n\t\t\t\t\tnfRadio.channel( 'mp' ).trigger( 'drop:rightGutter', ui, that.collection );\n\t\t\t\t}\n\t\t\t} );\n\t\t},\n\n\t\tclickNext: function( e ) {\n\t\t\tnfRadio.channel( 'mp' ).trigger( 'click:next', e );\n\t\t},\n\n\t\tclickNew: function( e ) {\n\t\t\tnfRadio.channel( 'mp' ).trigger( 'click:new', e );\n\t\t},\n\n\t\ttemplateHelpers: function() {\n\t\t\tvar that = this;\n\t\t\treturn {\n\t\t\t\thasNext: function() {\n\t\t\t\t\treturn that.collection.hasNext();\n\t\t\t\t},\n\n\t\t\t\thasContent: function() {\n\t\t\t\t\treturn 0 != nfRadio.channel( 'fields' ).request( 'get:collection' ).length;\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\n\t\tchangePart: function( context ) {\n\t\t\tcontext.collection.next();\n\t\t}\n\t});\n\n\treturn view;\n} );\n","define( 'views/mainContentEmpty',[], function() {\n\tvar view = Marionette.ItemView.extend({\n\t\ttagName: 'div',\n\t\ttemplate: '#nf-tmpl-mp-main-content-fields-empty',\n\n\t\tonBeforeDestroy: function() {\n\t\t\tjQuery( this.el ).parent().removeClass( 'nf-fields-empty-droppable' ).droppable( 'destroy' );\n\t\t},\n\n\t\tonRender: function() {\n\t\t\tthis.$el = this.$el.children();\n\t\t\tthis.$el.unwrap();\n\t\t\tthis.setElement( this.$el );\n\t\t},\n\n\t\tonShow: function() {\n\t\t\tif ( jQuery( this.el ).parent().hasClass( 'ui-sortable' ) ) {\n\t\t\t\tjQuery( this.el ).parent().sortable( 'destroy' );\n\t\t\t}\n\t\t\tjQuery( this.el ).parent().addClass( 'nf-fields-empty-droppable' );\n\t\t\tjQuery( this.el ).parent().droppable( {\n\t\t\t\taccept: function( draggable ) {\n\t\t\t\t\tif ( jQuery( draggable ).hasClass( 'nf-stage' ) || jQuery( draggable ).hasClass( 'nf-field-type-button' ) ) {\n\t\t\t\t\t\treturn true;\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\tactiveClass: 'nf-droppable-active',\n\t\t\t\thoverClass: 'nf-droppable-hover',\n\t\t\t\ttolerance: 'pointer',\n\t\t\t\tover: function( e, ui ) {\n\t\t\t\t\tui.item = ui.draggable;\n\t\t\t\t\tnfRadio.channel( 'app' ).request( 'over:fieldsSortable', ui );\n\t\t\t\t},\n\t\t\t\tout: function( e, ui ) {\n\t\t\t\t\tui.item = ui.draggable;\n\t\t\t\t\tnfRadio.channel( 'app' ).request( 'out:fieldsSortable', ui );\n\t\t\t\t},\n\t\t\t\tdrop: function( e, ui ) {\n\t\t\t\t\tui.item = ui.draggable;\n\t\t\t\t\tnfRadio.channel( 'app' ).request( 'receive:fieldsSortable', ui );\n\t\t\t\t\tvar fieldCollection = nfRadio.channel( 'fields' ).request( 'get:collection' );\n\t\t\t\t\tfieldCollection.trigger( 'reset', fieldCollection );\n\t\t\t\t},\n\t\t\t} );\n\t\t}\n\t});\n\n\treturn view;\n} );\n","/**\n * Add our view and content load filters.\n * \n * @package Ninja Forms Multi-Part\n * @subpackage Fields\n * @copyright (c) 2016 WP Ninjas\n * @since 3.0\n */\ndefine(\n\t'controllers/filters',[\n\t\t'views/layout',\n\t\t'views/gutterLeft',\n\t\t'views/gutterRight',\n\t\t'views/mainContentEmpty',\n\t\t'models/partCollection',\n\t],\n\tfunction (\n\t\tLayoutView,\n\t\tGutterLeftView,\n\t\tGutterRightView,\n\t\tMainContentEmptyView,\n\t\tPartCollection\n\t)\n\t{\n\tvar controller = Marionette.Object.extend( {\n\t\tinitialize: function() {\n\t\t\tthis.listenTo( nfRadio.channel( 'app' ), 'after:loadViews', this.addFilters );\n\t\t},\n\n\t\taddFilters: function() {\n\t\t\tnfRadio.channel( 'formContentGutters' ).request( 'add:leftFilter', this.getLeftView, 1, this );\n\t\t\tnfRadio.channel( 'formContentGutters' ).request( 'add:rightFilter', this.getRightView, 1, this );\n\t\t\n\t\t\tnfRadio.channel( 'formContent' ).request( 'add:viewFilter', this.getContentView, 1 );\n\t\t\tnfRadio.channel( 'formContent' ).request( 'add:saveFilter', this.formContentSave, 1 );\n\t\t\t\n\t\t\tnfRadio.channel( 'formContent' ).request( 'add:loadFilter', this.formContentLoad, 1 );\n\n\t\t\tthis.emptyView();\n\t\t},\n\n\t\tgetLeftView: function() {\n\t\t\treturn GutterLeftView;\n\t\t},\n\n\t\tgetRightView: function() {\n\t\t\treturn GutterRightView;\n\t\t},\n\n\t\tformContentLoad: function( formContentData ) {\n\t\t\tif ( true === formContentData instanceof Backbone.Collection ) return formContentData;\n\t\t\t\n\t\t\tvar partCollection = new PartCollection( formContentData );\n\t\t\tnfRadio.channel( 'mp' ).request( 'init:partCollection', partCollection );\n\t\t\treturn partCollection;\n\t\t},\n\n\t\tgetContentView: function() {\n\t\t\treturn LayoutView;\n\t\t},\n\n\t\tformContentSave: function( partCollection ) {\n\t\t\t/*\n\t\t\t * For each of our part models, call the next save filter for its formContentData\n\t\t\t */\n\t\t\tvar collectionClone = nfRadio.channel( 'app' ).request( 'clone:collectionDeep', partCollection );\n\t\t\t\n\t\t\t/*\n\t\t\t * If we don't have a filter for our formContentData, default to fieldCollection.\n\t\t\t */\n\t\t\tvar formContentSaveFilters = nfRadio.channel( 'formContent' ).request( 'get:saveFilters' );\n\t\t\t\n\t\t\tcollectionClone.each( function( partModel ) {\n\t\t\t\t/* \n\t\t\t\t * Get our first filter, this will be the one with the highest priority.\n\t\t\t\t */\n\t\t\t\tvar sortedArray = _.without( formContentSaveFilters, undefined );\n\t\t\t\tvar callback = sortedArray[1];\n\t\t\t\tpartModel.set( 'formContentData', callback( partModel.get( 'formContentData' ) ) );\n\t\t\t} );\n\n\t\t\treturn collectionClone.toJSON();\n\t\t},\n\n\t\temptyView: function() {\n\t\t\tthis.defaultMainContentEmptyView = nfRadio.channel( 'views' ).request( 'get:mainContentEmpty' );\n\t\t\tnfRadio.channel( 'views' ).reply( 'get:mainContentEmpty', this.getMainContentEmpty, this );\n\t\t},\n\n\t\tgetMainContentEmpty: function() {\n\t\t\tif ( 1 == nfRadio.channel( 'mp' ).request( 'get:collection' ).length ) {\n\t\t\t\treturn this.defaultMainContentEmptyView;\n\t\t\t} else {\n\t\t\t\treturn MainContentEmptyView;\n\t\t\t}\n\t\t}\n\t});\n\n\treturn controller;\n} );\n","var nfRadio = Backbone.Radio;\n\nrequire( [ 'controllers/loadControllers', 'controllers/filters' ], function( LoadControllers, LoadFilters ) {\n\n\tvar NFMultiPart = Marionette.Application.extend( {\n\n\t\tinitialize: function( options ) {\n\t\t\tthis.listenTo( nfRadio.channel( 'app' ), 'after:loadControllers', this.loadControllers );\n\t\t},\n\n\t\tloadControllers: function() {\n\t\t\tnew LoadControllers();\n\t\t},\n\n\t\tonStart: function() {\n\t\t\tnew LoadFilters();\n\t\t}\n\t} );\n\n\tvar nfMultiPart = new NFMultiPart();\n\tnfMultiPart.start();\n} );\ndefine(\"main\", function(){});\n\n"],"sourceRoot":"/source/"}