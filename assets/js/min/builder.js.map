{"version":3,"sources":["../lib/almond.js","models/partModel.js","models/partCollection.js","controllers/data.js","controllers/clickControls.js","controllers/gutterDroppables.js","controllers/partSettings.js","controllers/loadControllers.js","views/drawerItem.js","views/drawerCollection.js","views/layout.js","views/gutterLeft.js","views/gutterRight.js","views/mainContentEmpty.js","controllers/filters.js","main.js"],"names":["requirejs","require","define","undef","hasProp","obj","prop","hasOwn","call","normalize","name","baseName","nameParts","nameSegment","mapValue","foundMap","lastIndex","foundI","foundStarMap","starI","i","j","part","baseParts","split","map","config","starMap","charAt","length","nodeIdCompat","jsSuffixRegExp","test","replace","slice","concat","splice","join","indexOf","substring","makeRequire","relName","forceSync","args","aps","arguments","push","req","apply","makeNormalize","makeLoad","depName","value","defined","callDep","waiting","defining","main","Error","splitPrefix","prefix","index","makeConfig","makeMap","handlers","Object","prototype","hasOwnProperty","plugin","parts","f","n","pr","p","exports","e","module","id","uri","deps","callback","cjsModule","ret","usingExports","callbackType","load","undefined","alt","setTimeout","cfg","_defined","amd","jQuery","model","Backbone","Model","extend","defaults","formContentData","order","type","initialize","this","get","set","filterFormContentData","listenTo","sortFormContentData","fieldCollection","nfRadio","channel","request","triggerRemove","sort","fieldModel","isArray","trigger","formContentLoadFilters","sortedArray","_","without","PartModel","collection","Collection","currentElement","comparator","models","options","on","afterRemove","afterAdd","maybeChangeBuilderClass","changeCurrentPart","moveToEnd","openDrawer","setElement","count","changeBuilderClass","settingGroupCollection","groupCollection","focusTitle","drawerEl","find","select","focus","off","hasParts","builderEl","addClass","removeClass","getElement","at","append","data","add","silent","previousElement","currentDrawer","next","hasNext","previous","hasPrevious","getFormContentData","updateOrder","each","max","pluck","PartCollection","controller","Marionette","reply","initPartCollection","getCollection","addField","partCollection","clickPrevious","clickNext","clickNew","over","out","dropRight","dropLeft","ui","item","draggable","drop","dir","dropping","hasClass","stagedFields","field","newPart","keys","fieldType","label","changePart","helper","SettingGroupCollection","setupCollection","display","priority","settings","placeholder","width","Data","ClickControls","GutterDroppables","PartSettings","view","ItemView","tagName","template","className","render","maybeChangeActive","el","attributes","cid","onShow","that","droppable","activeClass","hoverClass","accept","tolerance","css","height","opacity","sortableEl","fieldWidth","effect","to","dropField","dropNewField","dropStaging","events","click","target","partClone","remove","templateHelpers","getIndex","DrawerItemView","CollectionView","childView","reorderOnSort","html","leftPagination","rightPagination","sortable","items","update","start","show","stop","DrawerCollectionView","LayoutView","regions","mainContent","drawer","formContentViewFilters","formContentView","currentIndex","previousIndex","hideDir","showDir","hide","direction","empty","click .fa","onRender","context","click .next","click .new","console","log","hasContent","onBeforeDestroy","parent","$el","children","unwrap","GutterLeftView","GutterRightView","MainContentEmptyView","addFilters","getLeftView","getRightView","getContentView","formContentSave","formContentLoad","emptyView","collectionClone","formContentSaveFilters","partModel","toJSON","defaultMainContentEmptyView","getMainContentEmpty","Radio","LoadControllers","LoadFilters","NFMultiPart","Application","loadControllers","onStart","nfMultiPart"],"mappings":"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,OAAA,wBAAAR,KAAAyM,kBAGAA,gBAAA,WACA,GAAAJ,IAGAK,QAAA,WACA,GAAAJ,MAIAK,EAAA,GAAAJ,EACAI,GAAArD,UAEA1P,EAAA,OAAA;AfrjbA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AC/DA,ADghLA,ADiLA;AChLA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AC7CA,AD8CA;AC7CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,ACpvMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACvDA,ADwDA;ACvpMA,ADqMA;ACphFA,ADiFA;AChhDA,ADiDA;AChpGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"builder.js","sourcesContent":["/**\n * @license almond 0.3.1 Copyright (c) 2011-2014, The Dojo Foundation All Rights Reserved.\n * Available via the MIT or new BSD license.\n * see: http://github.com/jrburke/almond for details\n */\n//Going sloppy to avoid 'use strict' string cost, but strict practices should\n//be followed.\n/*jslint sloppy: true */\n/*global setTimeout: false */\n\nvar requirejs, require, define;\n(function (undef) {\n    var main, req, makeMap, handlers,\n        defined = {},\n        waiting = {},\n        config = {},\n        defining = {},\n        hasOwn = Object.prototype.hasOwnProperty,\n        aps = [].slice,\n        jsSuffixRegExp = /\\.js$/;\n\n    function hasProp(obj, prop) {\n        return hasOwn.call(obj, prop);\n    }\n\n    /**\n     * Given a relative module name, like ./something, normalize it to\n     * a real name that can be mapped to a path.\n     * @param {String} name the relative name\n     * @param {String} baseName a real name that the name arg is relative\n     * to.\n     * @returns {String} normalized name\n     */\n    function normalize(name, baseName) {\n        var nameParts, nameSegment, mapValue, foundMap, lastIndex,\n            foundI, foundStarMap, starI, i, j, part,\n            baseParts = baseName && baseName.split(\"/\"),\n            map = config.map,\n            starMap = (map && map['*']) || {};\n\n        //Adjust any relative paths.\n        if (name && name.charAt(0) === \".\") {\n            //If have a base name, try to normalize against it,\n            //otherwise, assume it is a top-level require that will\n            //be relative to baseUrl in the end.\n            if (baseName) {\n                name = name.split('/');\n                lastIndex = name.length - 1;\n\n                // Node .js allowance:\n                if (config.nodeIdCompat && jsSuffixRegExp.test(name[lastIndex])) {\n                    name[lastIndex] = name[lastIndex].replace(jsSuffixRegExp, '');\n                }\n\n                //Lop off the last part of baseParts, so that . matches the\n                //\"directory\" and not name of the baseName's module. For instance,\n                //baseName of \"one/two/three\", maps to \"one/two/three.js\", but we\n                //want the directory, \"one/two\" for this normalization.\n                name = baseParts.slice(0, baseParts.length - 1).concat(name);\n\n                //start trimDots\n                for (i = 0; i < name.length; i += 1) {\n                    part = name[i];\n                    if (part === \".\") {\n                        name.splice(i, 1);\n                        i -= 1;\n                    } else if (part === \"..\") {\n                        if (i === 1 && (name[2] === '..' || name[0] === '..')) {\n                            //End of the line. Keep at least one non-dot\n                            //path segment at the front so it can be mapped\n                            //correctly to disk. Otherwise, there is likely\n                            //no path mapping for a path starting with '..'.\n                            //This can still fail, but catches the most reasonable\n                            //uses of ..\n                            break;\n                        } else if (i > 0) {\n                            name.splice(i - 1, 2);\n                            i -= 2;\n                        }\n                    }\n                }\n                //end trimDots\n\n                name = name.join(\"/\");\n            } else if (name.indexOf('./') === 0) {\n                // No baseName, so this is ID is resolved relative\n                // to baseUrl, pull off the leading dot.\n                name = name.substring(2);\n            }\n        }\n\n        //Apply map config if available.\n        if ((baseParts || starMap) && map) {\n            nameParts = name.split('/');\n\n            for (i = nameParts.length; i > 0; i -= 1) {\n                nameSegment = nameParts.slice(0, i).join(\"/\");\n\n                if (baseParts) {\n                    //Find the longest baseName segment match in the config.\n                    //So, do joins on the biggest to smallest lengths of baseParts.\n                    for (j = baseParts.length; j > 0; j -= 1) {\n                        mapValue = map[baseParts.slice(0, j).join('/')];\n\n                        //baseName segment has  config, find if it has one for\n                        //this name.\n                        if (mapValue) {\n                            mapValue = mapValue[nameSegment];\n                            if (mapValue) {\n                                //Match, update name to the new value.\n                                foundMap = mapValue;\n                                foundI = i;\n                                break;\n                            }\n                        }\n                    }\n                }\n\n                if (foundMap) {\n                    break;\n                }\n\n                //Check for a star map match, but just hold on to it,\n                //if there is a shorter segment match later in a matching\n                //config, then favor over this star map.\n                if (!foundStarMap && starMap && starMap[nameSegment]) {\n                    foundStarMap = starMap[nameSegment];\n                    starI = i;\n                }\n            }\n\n            if (!foundMap && foundStarMap) {\n                foundMap = foundStarMap;\n                foundI = starI;\n            }\n\n            if (foundMap) {\n                nameParts.splice(0, foundI, foundMap);\n                name = nameParts.join('/');\n            }\n        }\n\n        return name;\n    }\n\n    function makeRequire(relName, forceSync) {\n        return function () {\n            //A version of a require function that passes a moduleName\n            //value for items that may need to\n            //look up paths relative to the moduleName\n            var args = aps.call(arguments, 0);\n\n            //If first arg is not require('string'), and there is only\n            //one arg, it is the array form without a callback. Insert\n            //a null so that the following concat is correct.\n            if (typeof args[0] !== 'string' && args.length === 1) {\n                args.push(null);\n            }\n            return req.apply(undef, args.concat([relName, forceSync]));\n        };\n    }\n\n    function makeNormalize(relName) {\n        return function (name) {\n            return normalize(name, relName);\n        };\n    }\n\n    function makeLoad(depName) {\n        return function (value) {\n            defined[depName] = value;\n        };\n    }\n\n    function callDep(name) {\n        if (hasProp(waiting, name)) {\n            var args = waiting[name];\n            delete waiting[name];\n            defining[name] = true;\n            main.apply(undef, args);\n        }\n\n        if (!hasProp(defined, name) && !hasProp(defining, name)) {\n            throw new Error('No ' + name);\n        }\n        return defined[name];\n    }\n\n    //Turns a plugin!resource to [plugin, resource]\n    //with the plugin being undefined if the name\n    //did not have a plugin prefix.\n    function splitPrefix(name) {\n        var prefix,\n            index = name ? name.indexOf('!') : -1;\n        if (index > -1) {\n            prefix = name.substring(0, index);\n            name = name.substring(index + 1, name.length);\n        }\n        return [prefix, name];\n    }\n\n    /**\n     * Makes a name map, normalizing the name, and using a plugin\n     * for normalization if necessary. Grabs a ref to plugin\n     * too, as an optimization.\n     */\n    makeMap = function (name, relName) {\n        var plugin,\n            parts = splitPrefix(name),\n            prefix = parts[0];\n\n        name = parts[1];\n\n        if (prefix) {\n            prefix = normalize(prefix, relName);\n            plugin = callDep(prefix);\n        }\n\n        //Normalize according\n        if (prefix) {\n            if (plugin && plugin.normalize) {\n                name = plugin.normalize(name, makeNormalize(relName));\n            } else {\n                name = normalize(name, relName);\n            }\n        } else {\n            name = normalize(name, relName);\n            parts = splitPrefix(name);\n            prefix = parts[0];\n            name = parts[1];\n            if (prefix) {\n                plugin = callDep(prefix);\n            }\n        }\n\n        //Using ridiculous property names for space reasons\n        return {\n            f: prefix ? prefix + '!' + name : name, //fullName\n            n: name,\n            pr: prefix,\n            p: plugin\n        };\n    };\n\n    function makeConfig(name) {\n        return function () {\n            return (config && config.config && config.config[name]) || {};\n        };\n    }\n\n    handlers = {\n        require: function (name) {\n            return makeRequire(name);\n        },\n        exports: function (name) {\n            var e = defined[name];\n            if (typeof e !== 'undefined') {\n                return e;\n            } else {\n                return (defined[name] = {});\n            }\n        },\n        module: function (name) {\n            return {\n                id: name,\n                uri: '',\n                exports: defined[name],\n                config: makeConfig(name)\n            };\n        }\n    };\n\n    main = function (name, deps, callback, relName) {\n        var cjsModule, depName, ret, map, i,\n            args = [],\n            callbackType = typeof callback,\n            usingExports;\n\n        //Use name if no relName\n        relName = relName || name;\n\n        //Call the callback to define the module, if necessary.\n        if (callbackType === 'undefined' || callbackType === 'function') {\n            //Pull out the defined dependencies and pass the ordered\n            //values to the callback.\n            //Default to [require, exports, module] if no deps\n            deps = !deps.length && callback.length ? ['require', 'exports', 'module'] : deps;\n            for (i = 0; i < deps.length; i += 1) {\n                map = makeMap(deps[i], relName);\n                depName = map.f;\n\n                //Fast path CommonJS standard dependencies.\n                if (depName === \"require\") {\n                    args[i] = handlers.require(name);\n                } else if (depName === \"exports\") {\n                    //CommonJS module spec 1.1\n                    args[i] = handlers.exports(name);\n                    usingExports = true;\n                } else if (depName === \"module\") {\n                    //CommonJS module spec 1.1\n                    cjsModule = args[i] = handlers.module(name);\n                } else if (hasProp(defined, depName) ||\n                           hasProp(waiting, depName) ||\n                           hasProp(defining, depName)) {\n                    args[i] = callDep(depName);\n                } else if (map.p) {\n                    map.p.load(map.n, makeRequire(relName, true), makeLoad(depName), {});\n                    args[i] = defined[depName];\n                } else {\n                    throw new Error(name + ' missing ' + depName);\n                }\n            }\n\n            ret = callback ? callback.apply(defined[name], args) : undefined;\n\n            if (name) {\n                //If setting exports via \"module\" is in play,\n                //favor that over return value and exports. After that,\n                //favor a non-undefined return value over exports use.\n                if (cjsModule && cjsModule.exports !== undef &&\n                        cjsModule.exports !== defined[name]) {\n                    defined[name] = cjsModule.exports;\n                } else if (ret !== undef || !usingExports) {\n                    //Use the return value from the function.\n                    defined[name] = ret;\n                }\n            }\n        } else if (name) {\n            //May just be an object definition for the module. Only\n            //worry about defining if have a module name.\n            defined[name] = callback;\n        }\n    };\n\n    requirejs = require = req = function (deps, callback, relName, forceSync, alt) {\n        if (typeof deps === \"string\") {\n            if (handlers[deps]) {\n                //callback in this case is really relName\n                return handlers[deps](callback);\n            }\n            //Just return the module wanted. In this scenario, the\n            //deps arg is the module name, and second arg (if passed)\n            //is just the relName.\n            //Normalize module name, if it contains . or ..\n            return callDep(makeMap(deps, callback).f);\n        } else if (!deps.splice) {\n            //deps is a config object, not an array.\n            config = deps;\n            if (config.deps) {\n                req(config.deps, config.callback);\n            }\n            if (!callback) {\n                return;\n            }\n\n            if (callback.splice) {\n                //callback is an array, which means it is a dependency list.\n                //Adjust args if there are dependencies\n                deps = callback;\n                callback = relName;\n                relName = null;\n            } else {\n                deps = undef;\n            }\n        }\n\n        //Support require(['a'])\n        callback = callback || function () {};\n\n        //If relName is a function, it is an errback handler,\n        //so remove it.\n        if (typeof relName === 'function') {\n            relName = forceSync;\n            forceSync = alt;\n        }\n\n        //Simulate async callback;\n        if (forceSync) {\n            main(undef, deps, callback, relName);\n        } else {\n            //Using a non-zero value because of concern for what old browsers\n            //do, and latest browsers \"upgrade\" to 4 if lower value is used:\n            //http://www.whatwg.org/specs/web-apps/current-work/multipage/timers.html#dom-windowtimers-settimeout:\n            //If want a value immediately, use require('id') instead -- something\n            //that works in almond on the global level, but not guaranteed and\n            //unlikely to work in other AMD implementations.\n            setTimeout(function () {\n                main(undef, deps, callback, relName);\n            }, 4);\n        }\n\n        return req;\n    };\n\n    /**\n     * Just drops the config on the floor, but returns req in case\n     * the config return value is used.\n     */\n    req.config = function (cfg) {\n        return req(cfg);\n    };\n\n    /**\n     * Expose module registry for debugging and tooling\n     */\n    requirejs._defined = defined;\n\n    define = function (name, deps, callback) {\n        if (typeof name !== 'string') {\n            throw new Error('See almond README: incorrect module build, no module name');\n        }\n\n        //This module may not have dependencies\n        if (!deps.splice) {\n            //deps is not an array, so probably means\n            //an object literal or factory function for\n            //the value. Adjust args.\n            callback = deps;\n            deps = [];\n        }\n\n        if (!hasProp(defined, name) && !hasProp(waiting, name)) {\n            waiting[name] = [name, deps, callback];\n        }\n    };\n\n    define.amd = {\n        jQuery: true\n    };\n}());\n\ndefine(\"../lib/almond\", function(){});\n\n","/**\n * Model that represents part information.\n * \n * @package Ninja Forms Multi-Part\n * @subpackage Fields\n * @copyright (c) 2016 WP Ninjas\n * @since 3.0\n */\ndefine( 'models/partModel',[], function() {\n\tvar model = Backbone.Model.extend( {\n\t\tdefaults: {\n\t\t\tformContentData: [],\n\t\t\torder: 0,\n\t\t\ttype: 'part'\n\t\t},\n\n\t\tinitialize: function() {\n\t\t\t/*\n\t\t\t * If we don't have a part title, set a default one.\n\t\t\t */\n\t\t\tif ( ! this.get( 'title' ) ) {\n\t\t\t\tthis.set( 'title', 'Part Title' );\n\t\t\t}\n\n\t\t\tthis.filterFormContentData();\n\t\t\n\t\t\tthis.listenTo( this.get( 'formContentData' ), 'change:order', this.sortFormContentData );\n\t\t\t/*\n\t\t\t * When we remove a field from our field collection, remove it from this part if it exists there.\n\t\t\t */\n\t\t\tvar fieldCollection = nfRadio.channel( 'fields' ).request( 'get:collection' );\n\t\t\tthis.listenTo( fieldCollection, 'remove', this.triggerRemove );\n\t\t},\n\n\t\tsortFormContentData: function() {\n\t\t\tthis.get( 'formContentData' ).sort();\n\t\t},\n\n\t\ttriggerRemove: function( fieldModel ) {\n\t\t\tif ( jQuery.isArray( this.get( 'formContentData' ) ) ) {\n\t\t\t\tthis.filterFormContentData();\n\t\t\t}\n\t\t\tthis.get( 'formContentData' ).trigger( 'remove:field', fieldModel );\n\t\t},\n\n\t\tfilterFormContentData: function() {\n\t\t\t/*\n\t\t\t * Update our formContentData by running it through our fromContentData filter\n\t\t\t */\n\t\t\tvar formContentLoadFilters = nfRadio.channel( 'formContent' ).request( 'get:loadFilters' );\n\t\t\t/* \n\t\t\t* Get our second filter, this will be the one with the highest priority after MP Forms.\n\t\t\t*/\n\t\t\tvar sortedArray = _.without( formContentLoadFilters, undefined );\n\t\t\tvar callback = sortedArray[ 1 ];\n\n\t\t\tthis.set( 'formContentData', callback( this.get( 'formContentData' ) ) );\n\t\t}\n\n\t} );\n\n\treturn model;\n} );\n\n","define( 'models/partCollection',[ 'models/partModel' ], function( PartModel ) {\n\tvar collection = Backbone.Collection.extend( {\n\t\tmodel: PartModel,\n\t\tcurrentElement: false,\n\t\tcomparator: 'order',\n\n\t\tinitialize: function( models, options ){\n\t\t\tmodels = models || [];\n\n\t\t\tthis.on( 'remove', this.afterRemove );\n\t\t\tthis.on( 'add', this.afterAdd );\n\n\t\t\tthis.maybeChangeBuilderClass( models.length );\n\t\t},\n\n\t\tafterRemove: function( model, collection, options ) {\n\t\t\tthis.changeCurrentPart( model, collection, options );\n\t\t\tthis.maybeChangeBuilderClass( model, collection, options );\n\t\t\t/*\n\t\t\t * If our drawer is open, close it.\n\t\t\t */\n\t\t\tnfRadio.channel( 'app' ).request( 'close:drawer' );\t\n\t\t},\n\n\t\tafterAdd: function( model ) {\n\t\t\tthis.moveToEnd( model );\n\t\t\tthis.maybeChangeBuilderClass( model );\n\t\t\tthis.openDrawer( model );\n\t\t\tthis.setElement( model );\n\t\t},\n\n\t\tmoveToEnd: function( model ) {\n\t\t\tmodel.set( 'order', this.length - 1 );\n\t\t},\n\n\t\tmaybeChangeBuilderClass: function( count, collection, options ) {\n\t\t\tif ( true === count instanceof Backbone.Model ) {\n\t\t\t\tcount = this.length;\n\t\t\t}\n\n\t\t\tthis.changeBuilderClass( 1 < count );\n\t\t},\n\t\t\n\t\topenDrawer: function( model ) {\n\t\t\tvar settingGroupCollection = nfRadio.channel( 'mp' ).request( 'get:settingGroupCollection' );\n\t\t\tnfRadio.channel( 'app' ).request( 'open:drawer', 'editSettings', { model: model, groupCollection: settingGroupCollection } );\n\t\t\n\t\t\t/*\n\t\t\t * When the drawer opens, focus the input box.\n\t\t\t */\n\t\t\tnfRadio.channel( 'drawer' ).on( 'opened', this.focusTitle );\n\t\t},\n\n\t\tfocusTitle: function() {\n\t\t\tvar drawerEl = nfRadio.channel( 'app' ).request( 'get:drawerEl' );\n\t\t\tjQuery( drawerEl ).find( '#title' ).select();\n\t\t\tjQuery( drawerEl ).find( '#title' ).focus();\n\t\t\tnfRadio.channel( 'drawer' ).off( 'opened', this.focusTitle );\n\t\t},\n\n\t\tchangeBuilderClass: function( hasParts ) {\n\t\t\tvar builderEl = nfRadio.channel( 'app' ).request( 'get:builderEl' );\n\t\t\tif ( hasParts ) {\n\t\t\t\tjQuery( builderEl ).addClass( 'nf-has-parts' );\n\t\t\t} else {\n\t\t\t\tjQuery( builderEl ).removeClass( 'nf-has-parts' );\n\t\t\t}\n\t\t},\n\n\t\tchangeCurrentPart: function( model, collection, options ) {\n\t\t\t/*\n\t\t\t * When we remove the current part, change the current part in our collection.\n\t\t\t *\n\t\t\t * TODO: Find a way to pass index to has previous or has next for proper testing.\n\t\t\t * Since the model has been removed, it will always return a -1.\n\t\t\t */\n\t\t\tif ( this.getElement() == model ) {\n\t\t\t\tif ( 0 == options.index ) {\n\t\t\t\t\tthis.setElement( this.at( 0 ) );\n\t\t\t\t} else {\n\t\t\t\t\tthis.setElement( this.at( options.index - 1 ) );\n\t\t\t\t}\n\t\t\t} else if ( 1 == this.length ) {\n\t\t\t\tthis.setElement( this.at( 0 ) );\n\t\t\t}\n\t\t},\n\n\t\tappend: function( data ) {\n\t\t\tdata = data || {};\n\t\t\tvar order = this.length - 1;\n\t\t\tdata = _.extend( { order: order }, data );\n\t\t\treturn this.add( data );\n\t\t},\n\t\t\n\t\tgetElement: function() {\n\t\t\t/*\n\t\t\t * If we haven't set an element yet, set it to the first one.\n\t\t\t */\n\t\t\tif ( ! this.currentElement ) {\n\t\t\t\tthis.setElement( this.at( 0 ), true );\n\t\t\t}\n\t\t\treturn this.currentElement;\n\t\t},\n\t\t  \n\t\tsetElement: function( model, silent ) {\n\t\t\tif ( model == this.currentElement ) return;\n\t\t\tsilent = silent || false;\n\t\t\tthis.previousElement = this.currentElement;\n\t\t\tthis.currentElement = model;\n\t\t\tif ( ! silent ) {\n\t\t\t\t/*\n\t\t\t\t * Close the drawer for editing this title if it is open.\n\t\t\t\t */\n\t\t\t\tvar currentDrawer = nfRadio.channel( 'app' ).request( 'get:currentDrawer' );\n\t\t\t\tif ( currentDrawer && 'editSettings' == currentDrawer.get( 'id' ) ) {\n\t\t\t\t\t// nfRadio.channel( 'app' ).request( 'close:drawer' );\n\t\t\t\t}\n\t\t\t\tthis.trigger( 'change:part', this );\t\n\t\t\t}\n\t\t},\n\t\t\n\t\tnext: function (){\n\t\t\t/*\n\t\t\t * If this isn't the last part, move forward.\n\t\t\t */\n\t\t\tif ( this.hasNext() ) {\n\t\t\t\tthis.setElement( this.at( this.indexOf( this.getElement() ) + 1 ) );\n\t\t\t}\n\t\t\t\n\t\t\treturn this;\n\t\t},\n\n\t\tprevious: function() {\n\t\t\t/*\n\t\t\t * If this isn't the first part, move backward.\n\t\t\t */\n\t\t\tif ( this.hasPrevious() ) {\n\t\t\t\tthis.setElement( this.at( this.indexOf( this.getElement() ) - 1 ) );\t\n\t\t\t}\n\t\t\t\n\t\t\treturn this;\n\t\t},\n\n\t\thasNext: function() {\n\t\t\tif ( 0 == this.length ) return false;\n\t\t\treturn this.length - 1 != this.indexOf( this.getElement() );\n\t\t},\n\n\t\thasPrevious: function() {\n\t\t\tif ( 0 == this.length ) return false;\n\t\t\treturn 0 != this.indexOf( this.getElement() );\n\t\t},\n\n\t\tgetFormContentData: function() {\n\t\t\treturn this.getElement().get( 'formContentData' );\n\t\t},\n\n\t\tupdateOrder: function() {\n\t\t\tthis.each( function( model, index ) {\n\t\t\t\tmodel.set( 'order', index );\n\t\t\t} );\n\t\t\tthis.sort();\n\t\t},\n\n\t\tappend: function( model ) {\n\t\t    var order = _.max( this.pluck( 'order' ) ) + 1;\n\t\t    if( model instanceof Backbone.Model ) {\n\t\t        model.set( 'order', order );\n\t\t    } else {\n\t\t        model.order = order;\n\t\t    }\n\t\t    this.add( model );\n\t\t}\n\t} );\n\n\treturn collection;\n} );\n","/**\n * Holds our part collection.\n * \n * @package Ninja Forms Multi-Part\n * @subpackage Fields\n * @copyright (c) 2016 WP Ninjas\n * @since 3.0\n */\ndefine( 'controllers/data',[ 'models/partCollection' ], function ( PartCollection) {\n\tvar controller = Marionette.Object.extend( {\n\t\tinitialize: function() {\n\t\t\t/*\n\t\t\t * Instantiate our part collection.\n\t\t\t */\n\t\t\tnfRadio.channel( 'mp' ).reply( 'init:partCollection', this.initPartCollection, this );\n\n\t\t\t/*\n\t\t\t * Listen for requests for our part collection.\n\t\t\t */\n\t\t\tnfRadio.channel( 'mp' ).reply( 'get:collection', this.getCollection, this );\n\n\t\t\t/*\n\t\t\t * When we add a field to our field collection, collection, trigger an \"add:model\"\n\t\t\t */\n\t\t\tthis.listenTo( nfRadio.channel( 'fields' ), 'add:field', this.addField );\n\t\t},\n\n\t\tinitPartCollection: function( partCollection ) {\n\t\t\tthis.collection = partCollection;\n\t\t},\n\n\t\tgetCollection: function() {\n\t\t\treturn this.collection;\n\t\t},\n\n\t\taddField: function( fieldModel ) {\n\t\t\tthis.collection.getFormContentData().trigger( 'add:field', fieldModel );\n\t\t\tif( 1 == this.collection.getFormContentData().length ) {\n\t\t\t\tthis.collection.getFormContentData().trigger( 'reset' );\n\t\t\t}\n\t\t}\n\n\t});\n\n\treturn controller;\n} );\n","/**\n * Listen for clicks on our previous and next buttons\n * \n * @package Ninja Forms Multi-Part\n * @subpackage Fields\n * @copyright (c) 2016 WP Ninjas\n * @since 3.0\n */\ndefine(\t'controllers/clickControls',[],\tfunction () {\n\tvar controller = Marionette.Object.extend( {\n\t\tinitialize: function() {\n\t\t\tthis.listenTo( nfRadio.channel( 'mp' ), 'click:previous', this.clickPrevious );\n\t\t\tthis.listenTo( nfRadio.channel( 'mp' ), 'click:next', this.clickNext );\n\t\t\tthis.listenTo( nfRadio.channel( 'mp' ), 'click:new', this.clickNew );\n\t\t},\n\n\t\tclickPrevious: function( e ) {\n\t\t\tvar collection = nfRadio.channel( 'mp' ).request( 'get:collection' );\n\t\t\tcollection.previous();\n\t\t},\n\n\t\tclickNext: function( e ) {\n\t\t\tvar collection = nfRadio.channel( 'mp' ).request( 'get:collection' );\n\t\t\tcollection.next();\n\t\t},\n\n\t\tclickNew: function( e ) {\n\t\t\tvar collection = nfRadio.channel( 'mp' ).request( 'get:collection' );\n\t\t\tvar newPart = collection.append({});\n\t\t\t// collection.sort();\n\t\t}\n\n\t});\n\n\treturn controller;\n} );\n","/**\n * Listen for drag events on our arrows.\n * \n * @package Ninja Forms Multi-Part\n * @subpackage Fields\n * @copyright (c) 2016 WP Ninjas\n * @since 3.0\n */\ndefine(\t'controllers/gutterDroppables',[],\tfunction () {\n\tvar controller = Marionette.Object.extend( {\n\t\tinitialize: function() {\n\t\t\tthis.listenTo( nfRadio.channel( 'mp' ), 'over:gutter', this.over );\n\t\t\tthis.listenTo( nfRadio.channel( 'mp' ), 'out:gutter', this.out );\n\t\t\tthis.listenTo( nfRadio.channel( 'mp' ), 'drop:rightGutter', this.dropRight );\n\t\t\tthis.listenTo( nfRadio.channel( 'mp' ), 'drop:leftGutter', this.dropLeft );\n\t\t},\n\n\t\tover: function( ui, partCollection ) {\n\t\t\t/*\n\t\t\t * Remove any other draggable placeholders.\n\t\t\t */\n\t\t\tjQuery( '#nf-main' ).find( '.nf-fields-sortable-placeholder' ).addClass( 'nf-sortable-removed' ).removeClass( 'nf-fields-sortable-placeholder' );\n\n\t\t\t// Trigger Ninja Forms default handler for being over a field sortable.\n\t\t\tui.item = ui.draggable;\n\t\t\tnfRadio.channel( 'app' ).request( 'over:fieldsSortable', ui );\n\t\t\t\n\t\t\t/*\n\t\t\t * If we hover over our droppable for more than x seconds, change the part.\n\t\t\t */\n\t\t\t// setTimeout( this.changePart, 1500, ui, partCollection );\n\t\t},\n\n\t\tout: function( ui, partCollection ) {\n\t\t\t/*\n\t\t\t * Re-add any draggable placeholders that we removed.\n\t\t\t */\n\t\t\tjQuery( '#nf-main' ).find( '.nf-sortable-removed' ).addClass( 'nf-fields-sortable-placeholder' );\n\t\t\t\n\t\t\t// Trigger Ninja Forms default handler for being out of a field sortable.\n\t\t\tui.item = ui.draggable;\n\t\t\tnfRadio.channel( 'app' ).request( 'out:fieldsSortable', ui );\n\n\t\t\t/*\n\t\t\t * If we hover over our droppable for more than x seconds, change the part.\n\t\t\t */\n\t\t\t// clearTimeout( this.changePart );\n\t\t},\n\n\t\tdrop: function( ui, partCollection, dir ) {\n\t\t\tui.draggable.dropping = true;\n\t\t\tui.item = ui.draggable;\n\t\t\tnfRadio.channel( 'app' ).request( 'out:fieldsSortable', ui );\n\t\t\tnfRadio.channel( 'fields' ).request( 'sort:fields', null, null, false );\n\n\t\t\t/*\n\t\t\t * If we hover over our droppable for more than x seconds, change the part.\n\t\t\t */\n\t\t\t// clearTimeout( this.changePart );\t\t\t\t\n\t\t},\n\n\t\tdropLeft: function( ui, partCollection ) {\n\t\t\tthis.drop( ui, partCollection, 'left' );\n\t\t\t/*\n\t\t\t * Check to see if we have a previous part.\n\t\t\t */\n\t\t\tif ( ! partCollection.hasPrevious() ) return;\n\t\t\t/*\n\t\t\t * If we're dealing with a field that already exists on our form, handle moving it.\n\t\t\t */\n\t\t\tif ( jQuery( ui.draggable ).hasClass( 'nf-field-wrap' ) ) {\n\t\t\t\tvar fieldModel = nfRadio.channel( 'fields' ).request( 'get:field', jQuery( ui.draggable ).data( 'id' ) );\n\t\t\t\t/*\n\t\t\t\t * Add the dragged field to the previous part.\n\t\t\t\t */\n\t\t\t\tpartCollection.getFormContentData().trigger( 'remove:field', fieldModel );\n\t\t\t\tpartCollection.at( partCollection.indexOf( partCollection.getElement() ) - 1 ).get( 'formContentData' ).trigger( 'append:field', fieldModel );\n\t\t\t} else if ( jQuery( ui.draggable ).hasClass( 'nf-field-type-draggable' ) ) {\n\t\t\t\tvar type = jQuery( ui.draggable ).data( 'id' );\n\t\t\t\tvar fieldModel = this.addField( type, partCollection );\n\t\t\t\t/*\n\t\t\t\t * We have a previous part. Add the new field to it.\n\t\t\t\t */\n\t\t\t\tpartCollection.at( partCollection.indexOf( partCollection.getElement() ) - 1 ).get( 'formContentData' ).trigger( 'append:field', fieldModel );\n\t\t\t} else {\n\t\t\t\t/*\n\t\t\t\t * We are dropping a stage\n\t\t\t\t */\n\t\t\t\t\n\t\t\t\t// Make sure that our staged fields are sorted properly.\t\n\t\t\t\tnfRadio.channel( 'fields' ).request( 'sort:staging' );\n\t\t\t\t// Grab our staged fields.\n\t\t\t\tvar stagedFields = nfRadio.channel( 'fields' ).request( 'get:staging' );\n\n\t\t\t\t_.each( stagedFields.models, function( field, index ) {\n\t\t\t\t\t// Add our field.\n\t\t\t\t\t\n\t\t\t\t\tvar fieldModel = this.addField( field.get( 'slug' ), partCollection );\n\t\t\t\t\tpartCollection.at( partCollection.indexOf( partCollection.getElement() ) - 1 ).get( 'formContentData' ).trigger( 'append:field', fieldModel );\n\t\t\t\t}, this );\n\n\t\t\t\t// Clear our staging\n\t\t\t\tnfRadio.channel( 'fields' ).request( 'clear:staging' );\n\t\t\t}\n\t\t},\n\n\t\tdropRight: function( ui, partCollection ) {\n\t\t\tthis.drop( ui, partCollection );\n\t\t\t/*\n\t\t\t * If we're dealing with a field that already exists on our form, handle moving it.\n\t\t\t */\n\t\t\tif ( jQuery( ui.draggable ).hasClass( 'nf-field-wrap' ) ) {\n\t\t\t\tvar fieldModel = nfRadio.channel( 'fields' ).request( 'get:field', jQuery( ui.draggable ).data( 'id' ) );\n\t\t\t\t/*\n\t\t\t\t * Check to see if we have a next part.\n\t\t\t\t */\n\t\t\t\tif ( partCollection.hasNext() ) {\n\t\t\t\t\t/*\n\t\t\t\t\t * Add the dragged field to the next part.\n\t\t\t\t\t */\n\t\t\t\t\tpartCollection.getFormContentData().trigger( 'remove:field', fieldModel );\n\t\t\t\t\tpartCollection.at( partCollection.indexOf( partCollection.getElement() ) + 1 ).get( 'formContentData' ).trigger( 'append:field', fieldModel );\n\t\t\t\t} else {\n\t\t\t\t\t/*\n\t\t\t\t\t * Add the dragged field to a new part.\n\t\t\t\t\t */\n\t\t\t\t\tpartCollection.getFormContentData().trigger( 'remove:field', fieldModel );\n\t\t\t\t\tvar newPart = partCollection.append( { formContentData: [ fieldModel.get( 'key' ) ] } );\n\t\t\t\t\tpartCollection.setElement( newPart );\n\t\t\t\t}\n\t\t\t} else if ( jQuery( ui.draggable ).hasClass( 'nf-field-type-draggable' ) ) {\n\t\t\t\tvar type = jQuery( ui.draggable ).data( 'id' );\n\t\t\t\tvar fieldModel = this.addField( type, partCollection );\n\t\t\t\tif ( partCollection.hasNext() ) {\n\t\t\t\t\t/*\n\t\t\t\t\t * We have a next part. Add the new field to it.\n\t\t\t\t\t */\n\t\t\t\t\tpartCollection.at( partCollection.indexOf( partCollection.getElement() ) + 1 ).get( 'formContentData' ).trigger( 'append:field', fieldModel );\n\t\t\t\t\treturn false;\n\t\t\t\t} else {\n\t\t\t\t\t/*\n\t\t\t\t\t * We don't have a next part, so add a new one, then add this field to it.\n\t\t\t\t\t */\n\t\t\t\t\tvar newPart = partCollection.append( { formContentData: [ fieldModel.get( 'key' ) ] } );\n\t\t\t\t\tpartCollection.setElement( newPart );\n\t\t\t\t\treturn newPart;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t// Make sure that our staged fields are sorted properly.\t\n\t\t\t\tnfRadio.channel( 'fields' ).request( 'sort:staging' );\n\t\t\t\t// Grab our staged fields.\n\t\t\t\tvar stagedFields = nfRadio.channel( 'fields' ).request( 'get:staging' );\n\t\t\t\t\n\t\t\t\tvar keys = [];\n\t\t\t\t_.each( stagedFields.models, function( field, index ) {\n\t\t\t\t\t// Add our field.\n\t\t\t\t\tvar fieldModel = this.addField( field.get( 'slug' ), partCollection );\n\t\t\t\t\tif ( partCollection.hasNext() ) {\n\t\t\t\t\t\tpartCollection.at( partCollection.indexOf( partCollection.getElement() ) + 1 ).get( 'formContentData' ).trigger( 'append:field', fieldModel );\n\t\t\t\t\t} else {\n\t\t\t\t\t\tkeys.push( fieldModel.get( 'key' ) );\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t}, this );\n\n\t\t\t\tif ( ! partCollection.hasNext() ) {\n\t\t\t\t\t/*\n\t\t\t\t\t * Add each of our fields to our next part\n\t\t\t\t\t */\n\t\t\t\t\tvar newPart = partCollection.append( { formContentData: keys } );\n\t\t\t\t\tpartCollection.setElement( newPart );\t\t\t\t\t\n\t\t\t\t}\n\n\t\t\t\t// Clear our staging\n\t\t\t\tnfRadio.channel( 'fields' ).request( 'clear:staging' );\n\t\t\t}\n\t\t},\n\n\t\taddField: function( type, collection ) {\n\t\t\tvar fieldType = nfRadio.channel( 'fields' ).request( 'get:type', type ); \n\t\t\t// Add our field\n\t\t\tvar fieldModel = nfRadio.channel( 'fields' ).request( 'add', {\n\t\t\t\tlabel: fieldType.get( 'nicename' ),\n\t\t\t\ttype: type\n\t\t\t} );\n\n\t\t\tcollection.getFormContentData().trigger( 'remove:field', fieldModel );\n\t\t\treturn fieldModel;\n\t\t},\n\n\t\tchangePart: function( ui, partCollection ) {\n\t\t\tpartCollection.next();\n\t\t\tjQuery( ui.helper ).draggable();\n\t\t}\n\n\t});\n\n\treturn controller;\n} );\n","/**\n * Stores part setting information.\n * \n * @package Ninja Forms builder\n * @subpackage App - Edit Settings Drawer\n * @copyright (c) 2016 WP Ninjas\n * @since 3.0\n */\ndefine( 'controllers/partSettings',[], function( SettingGroupCollection ) {\n\tvar controller = Marionette.Object.extend( {\n\t\tinitialize: function() {\n\t\t\t/*\n\t\t\t * Instantiate our setting group collection\n\t\t\t */\n\t\t\tthis.setupCollection();\n\n\t\t\t// Respond to requests for our part setting group collection\n\t\t\tnfRadio.channel( 'mp' ).reply( 'get:settingGroupCollection', this.getCollection, this );\n\t\t},\n\n\t\tsetupCollection: function() {\n\t\t\tvar settingGroupCollection = nfRadio.channel( 'app' ).request( 'get:settingGroupCollectionDefinition' );\n\t\t\tthis.collection = new settingGroupCollection([\n\t\t\t\t{\n\t\t\t\t\tid: 'primary',\n\t\t\t\t\tlabel: '',\n\t\t\t\t\tdisplay: true,\n\t\t\t\t\tpriority: 100,\n\t\t\t\t\tsettings: [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tname: 'title',\n\t\t\t\t\t\t\ttype: 'textbox',\n\t\t\t\t\t\t\tlabel: 'Part Title',\n\t\t\t\t\t\t\tplaceholder: '',\n\t\t\t\t\t\t\twidth: 'full',\n\t\t\t\t\t\t\tvalue: ''\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t] );\n\t\t},\n\n\t\t/**\n\t\t * Return our setting group collection.\n\t\t *\n\t\t * @since  3.0\n\t\t * @return backbone.collection\n\t\t */\n\t\tgetCollection: function() {\n\t\t\treturn this.collection;\n\t\t}\n\n\t});\n\n\treturn controller;\n} );\n","/*\n * Load our builder controllers\n */\ndefine( \n\t'controllers/loadControllers',[\n\t\t'controllers/data',\n\t\t'controllers/clickControls',\n\t\t'controllers/gutterDroppables',\n\t\t'controllers/partSettings'\n\t], \n\tfunction\n\t(\n\t\tData,\n\t\tClickControls,\n\t\tGutterDroppables,\n\t\tPartSettings\n\t)\n\t{\n\tvar controller = Marionette.Object.extend( {\n\t\tinitialize: function() {\n\t\t\tnew Data();\n\t\t\tnew ClickControls();\n\t\t\tnew GutterDroppables();\n\t\t\tnew PartSettings();\n\t\t}\n\n\t});\n\n\treturn controller;\n} );\n","/**\n * Top drawer part view\n * \n * @package Ninja Forms builder\n * @subpackage App\n * @copyright (c) 2016 WP Ninjas\n * @since 3.0\n */\ndefine( 'views/drawerItem',[], function() {\n\tvar view = Marionette.ItemView.extend({\n\t\ttagName: 'li',\n\t\ttemplate: '#nf-tmpl-mp-drawer-item',\n\n\t\tclassName: function() {\n\t\t\tif ( this.model == this.model.collection.getElement() ) {\n\t\t\t\treturn 'active';\n\t\t\t}\n\n\t\t\treturn '';\n\t\t},\n\n\t\tinitialize: function() {\n\t\t\tthis.listenTo( this.model, 'change:title', this.render );\n\t\t\tthis.listenTo( this.model.collection, 'change:part', this.maybeChangeActive );\n\t\t},\n\n\t\tmaybeChangeActive: function() {\n\t\t\tjQuery( this.el ).removeClass( 'active' );\n\t\t\tjQuery( this.el ).addClass( this.className() );\n\t\t},\n\n\t\tattributes: function() {\n\t\t\treturn {\n\t\t\t\tid: this.model.cid\n\t\t\t}\n\t\t},\n\n\t\tonShow: function() {\n\t\t\tvar that = this;\n\t\t\tjQuery( this.el ).droppable( {\n\t\t\t\tactiveClass: 'mp-drag-active',\n\t\t\t\thoverClass: 'mp-drag-hover',\n\t\t\t\taccept: '.nf-field-type-draggable, .nf-field-wrap, .nf-stage',\n\t\t\t\ttolerance: 'pointer',\n\n\t\t\t\tover: function( e, ui ) {\n\t\t\t\t\t/*\n\t\t\t\t\t * Remove any other draggable placeholders.\n\t\t\t\t\t */\n\t\t\t\t\tjQuery( '#nf-main' ).find( '.nf-fields-sortable-placeholder' ).addClass( 'nf-sortable-removed' ).removeClass( 'nf-fields-sortable-placeholder' );\n\n\t\t\t\t\t// Trigger Ninja Forms default handler for being over a field sortable.\n\t\t\t\t\tui.item = ui.draggable;\n\n\t\t\t\t\tif ( jQuery( ui.draggable ).hasClass( 'nf-field-type-draggable' ) || jQuery( ui.draggable ).hasClass( 'nf-stage' ) ) {\n\t\t\t\t\t\tnfRadio.channel( 'app' ).request( 'over:fieldsSortable', ui );\n\t\t\t\t\t} else {\n\t\t\t\t\t\tjQuery( ui.helper ).css( { 'width': '300px', 'height': '50px', 'opacity': '0.7' } );\n\t\t\t\t\t}\n\t\t\t\t},\n\n\t\t\t\tout: function( e, ui ) {\n\t\t\t\t\t/*\n\t\t\t\t\t * Re-add any draggable placeholders that we removed.\n\t\t\t\t\t */\n\t\t\t\t\tjQuery( '#nf-main' ).find( '.nf-sortable-removed' ).addClass( 'nf-fields-sortable-placeholder' );\n\n\t\t\t\t\t// Trigger Ninja Forms default handler for being out of a field sortable.\n\t\t\t\t\tui.item = ui.draggable;\n\t\t\t\t\tif ( jQuery( ui.draggable ).hasClass( 'nf-field-type-draggable' ) || jQuery( ui.draggable ).hasClass( 'nf-stage' ) ) {\n\t\t\t\t\t\tnfRadio.channel( 'app' ).request( 'out:fieldsSortable', ui );\n\t\t\t\t\t} else {\n\t\t\t\t\t\t// Get our sortable element.\n\t\t\t\t\t\tvar sortableEl = nfRadio.channel( 'fields' ).request( 'get:sortableEl' );\n\t\t\t\t\t\t// Get our fieldwidth.\n\t\t\t\t\t\tvar fieldWidth = jQuery( sortableEl ).width();\n\t\t\t\t\t\tvar fieldHeight = jQuery( sortableEl ).height();\n\n\t\t\t\t\t\tjQuery( ui.helper ).css( { 'width': fieldWidth, 'height': '', 'opacity': '' } );\n\t\t\t\t\t}\n\t\t\t\t},\n\n\t\t\t\tdrop: function( e, ui ) {\n\t\t\t\t\tui.draggable.dropping = true;\n\t\t\t\t\t// Trigger Ninja Forms default handler for being out of a field sortable.\n\t\t\t\t\tui.item = ui.draggable;\n\t\t\t\t\tnfRadio.channel( 'app' ).request( 'out:fieldsSortable', ui );\n\n\t\t\t\t\tjQuery( ui.draggable ).effect( 'transfer', { to: jQuery( that.el ) }, 500 );\n\n\t\t\t\t\tif ( jQuery( ui.draggable ).hasClass( 'nf-field-wrap' ) ) { // Dropping a field that already exists\n\t\t\t\t\t\tthat.dropField( e, ui );\n\t\t\t\t\t} else if ( jQuery( ui.draggable ).hasClass( 'nf-field-type-draggable' ) ) { // Dropping a new field\n\t\t\t\t\t\tthat.dropNewField( e, ui );\n\t\t\t\t\t} else if ( jQuery( ui.draggable ).hasClass( 'nf-stage' ) ) { // Dropping the staging area\n\t\t\t\t\t\tthat.dropStaging( e, ui );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} );\n\t\t},\n\n\t\tevents: {\n\t\t\t'click': 'click'\n\t\t},\n\n\t\tclick: function( e ) {\n\t\t\t/*\n\t\t\t * Because our items are stacked, we have to do a bit of investigation to see what the user actually clicked on.\n\t\t\t */\n\t\t\tif ( jQuery( e.target ).hasClass( 'nf-edit' ) ) {\n\t\t\t\tvar settingGroupCollection = nfRadio.channel( 'mp' ).request( 'get:settingGroupCollection' );\n\t\t\t\tnfRadio.channel( 'app' ).request( 'open:drawer', 'editSettings', { model: this.model, groupCollection: settingGroupCollection } );\n\t\t\t} else if ( jQuery( e.target ).hasClass( 'nf-duplicate' ) ) {\n\t\t\t\tvar partClone = nfRadio.channel( 'app' ).request( 'clone:modelDeep', this.model );\n\t\t\t\tthis.model.collection.add( partClone );\n\t\t\t\tpartClone.set( 'order', this.model.get( 'order' ) );\n\t\t\t\tthis.model.collection.updateOrder();\n\t\t\t\tthis.model.collection.setElement( partClone );\n\t\t\t} else if ( jQuery( e.target ).hasClass( 'nf-delete' ) ) {\n\t\t\t\tthis.model.collection.remove( this.model );\n\t\t\t} else {\n\t\t\t\tif ( this.model != this.model.collection.getElement() ) {\n\t\t\t\t\tthis.model.collection.setElement( this.model );\n\t\t\t\t}\t\t\t\t\n\t\t\t}\n\t\t},\n\n\t\ttemplateHelpers: function() {\n\t\t\tvar that = this;\n\t\t\treturn {\n\t\t\t\tgetIndex: function() {\n\t\t\t\t\treturn that.model.collection.indexOf( that.model ) + 1;\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\n\t\tdropField: function( e, ui ) {\n\t\t\t/*\n\t\t\t * If we are dropping a field that exists on our form already:\n\t\t\t * Remove it from the current part.\n\t\t\t * Add it to the new part.\n\t\t\t */\n\t\t\tnfRadio.channel( 'fields' ).request( 'sort:fields', null, null, false );\n\t\t\tnfRadio.channel( 'app' ).request( 'out:fieldsSortable', ui );\n\t\t\tvar fieldModel = nfRadio.channel( 'fields' ).request( 'get:field', jQuery( ui.draggable ).data( 'id' ) );\n\t\t\t/*\n\t\t\t * Add the dragged field to the previous part.\n\t\t\t */\n\t\t\tthis.model.collection.getFormContentData().trigger( 'remove:field', fieldModel );\n\t\t\tthis.model.get( 'formContentData' ).trigger( 'append:field', fieldModel );\n\t\t},\n\n\t\tdropNewField: function( e, ui ) {\n\t\t\tvar type = jQuery( ui.draggable ).data( 'id' );\n\t\t\tvar fieldModel = this.addField( type, this.model.collection );\n\t\t\t/*\n\t\t\t * We have a previous part. Add the new field to it.\n\t\t\t */\n\t\t\tthis.model.get( 'formContentData' ).trigger( 'append:field', fieldModel );\n\t\t},\n\n\t\tdropStaging: function( e, ui ) {\n\t\t\t/*\n\t\t\t * We are dropping a stage\n\t\t\t */\n\t\t\t\n\t\t\t// Make sure that our staged fields are sorted properly.\t\n\t\t\tnfRadio.channel( 'fields' ).request( 'sort:staging' );\n\t\t\t// Grab our staged fields.\n\t\t\tvar stagedFields = nfRadio.channel( 'fields' ).request( 'get:staging' );\n\n\t\t\t_.each( stagedFields.models, function( field, index ) {\n\t\t\t\t// Add our field.\n\t\t\t\tvar fieldModel = this.addField( field.get( 'slug' ), this.model.collection );\n\t\t\t\tthis.model.get( 'formContentData' ).trigger( 'append:field', fieldModel );\n\t\t\t}, this );\n\n\t\t\t// Clear our staging\n\t\t\tnfRadio.channel( 'fields' ).request( 'clear:staging' );\n\t\t},\t\n\n\t\taddField: function( type, collection ) {\n\t\t\tvar fieldType = nfRadio.channel( 'fields' ).request( 'get:type', type ); \n\t\t\t// Add our field\n\t\t\tvar fieldModel = nfRadio.channel( 'fields' ).request( 'add', {\n\t\t\t\tlabel: fieldType.get( 'nicename' ),\n\t\t\t\ttype: type\n\t\t\t} );\n\n\t\t\tcollection.getFormContentData().trigger( 'remove:field', fieldModel );\n\t\t\treturn fieldModel;\n\t\t}\n\n\t});\n\n\treturn view;\n} );\n","/**\n * Drawer collection view.\n * \n * @package Ninja Forms builder\n * @subpackage App\n * @copyright (c) 2016 WP Ninjas\n * @since 3.0\n */\ndefine( 'views/drawerCollection',[ 'views/drawerItem' ], function( DrawerItemView ) {\n\tvar view = Marionette.CollectionView.extend( {\n\t\ttagName: 'ul',\n\t\tchildView: DrawerItemView,\n\t\treorderOnSort: true,\n\n\t\tinitialize: function() {\n\t\t\tvar template = _.template( jQuery( '#nf-tmpl-mp-drawer-pagination-left' ).html() );\n\t\t\tthis.leftPagination = template();\n\n\t\t\ttemplate = _.template( jQuery( '#nf-tmpl-mp-drawer-pagination-right' ).html() );\n\t\t\tthis.rightPagination = template();\n\t\t},\n\n\t\tonShow: function() {\n\t\t\tvar that = this;\n\t\t\tjQuery( this.el ).sortable( {\n\t\t\t\titems: 'li:not(.no-sort)',\n\t\t\t\thelper: 'clone',\n\n\t\t\t\tupdate: function( e, ui ) {\n\t\t\t\t\tjQuery( ui.item ).css( 'opacity', '' );\n\t\t\t\t\tvar order = _.without( jQuery( this ).sortable( 'toArray' ), '' );\n\t\t\t\t\t_.each( order, function( cid, index ) {\n\t\t\t\t\t\tthat.collection.get( { cid: cid } ).set( 'order', index );\n\t\t\t\t\t}, this );\n\t\t\t\t\tthat.collection.sort();\n\t\t\t\t},\n\n\t\t\t\tstart: function( e, ui ) {\n\t\t\t\t\t// If we aren't dragging an item in from types or staging, update our change log.\n\t\t\t\t\tif( ! jQuery( ui.item ).hasClass( 'nf-field-type-draggable' ) && ! jQuery( ui.item ).hasClass( 'nf-stage' ) ) { \n\t\t\t\t\t\tjQuery( ui.item ).css( 'opacity', '0.5' ).show();\n\t\t\t\t\t\tjQuery( ui.helper ).css( 'opacity', '0.75' );\n\t\t\t\t\t}\n\t\t\t\t},\n\n\t\t\t\tstop: function( e, ui ) {\n\t\t\t\t\t// If we aren't dragging an item in from types or staging, update our change log.\n\t\t\t\t\tif( ! jQuery( ui.item ).hasClass( 'nf-field-type-draggable' ) && ! jQuery( ui.item ).hasClass( 'nf-stage' ) ) { \n\t\t\t\t\t\tjQuery( ui.item ).css( 'opacity', '' );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} );\n\t\t},\n\n\t\t// The default implementation:\n\t\t// attachHtml: function(collectionView, childView, index){\n\t\t// \tif (collectionView.isBuffering) {\n\t\t// \t\t// buffering happens on reset events and initial renders\n\t\t// \t\t// in order to reduce the number of inserts into the\n\t\t// \t\t// document, which are expensive.\n\t\t// \t\tcollectionView._bufferedChildren.splice( index, 0, childView );\n\t\t// \t} else {\n\t\t// \t\t// If we've already rendered the main collection, append\n\t\t// \t\t// the new child into the correct order if we need to. Otherwise\n\t\t// \t\t// append to the end.\n\t\t// \t\tif ( ! collectionView._insertBefore( childView, index ) ) {\n\t\t// \t\t\t/*\n\t\t// \t\t\t * Remove our last item (right pagination)\n\t\t// \t\t\t */\n\t\t// \t\t\tjQuery( collectionView.el ).find( '.no-sort' ).remove();\n\t\t// \t\t\tcollectionView._insertAfter(childView);\n\t\t// \t\t\t/*\n\t\t// \t\t\t * Add our pagination LIs\n\t\t// \t\t\t */\n\t\t// \t\t\tjQuery( collectionView.el ).prepend( this.leftPagination );\n\t\t// \t\t\tjQuery( collectionView.el ).append( this.rightPagination );\n\t\t// \t\t}\n\t\t// \t}\n\t\t// },\n\n\t\t// // Called after all children have been appended into the elBuffer\n\t\t// attachBuffer: function(collectionView, buffer) {\n\t\t// \tcollectionView.$el.find( '.no-sort' ).remove();\n\t\t// \tcollectionView.$el.prepend( this.leftPagination );\n\t\t// \tcollectionView.$el.append( buffer );\n\t\t// \tcollectionView.$el.append( this.rightPagination );\n\t\t// },\n\t} );\n\n\treturn view;\n} );\n","/**\n * Main layout view\n *\n * Regions:\n * mainContent\n * drawer\n * \n * @package Ninja Forms builder\n * @subpackage App\n * @copyright (c) 2015 WP Ninjas\n * @since 3.0\n */\ndefine( 'views/layout',[ 'views/drawerCollection' ], function( DrawerCollectionView ) {\n\tvar view = Marionette.LayoutView.extend({\n\t\ttagName: 'div',\n\t\ttemplate: '#nf-tmpl-mp-layout',\n\n\t\tregions: {\n\t\t\tmainContent: '#nf-mp-main-content',\n\t\t\tdrawer: '#nf-mp-drawer'\n\t\t},\n\n\t\tinitialize: function() {\n\t\t\tthis.listenTo( this.collection, 'change:part', this.changePart );\n\t\t},\n\n\t\tonShow: function() {\n\t\t\tthis.drawer.show( new DrawerCollectionView( { collection: this.collection } ) );\n\n\n\t\t\t/*\n\t\t\t * Check our fieldContentViewsFilter to see if we have any defined.\n\t\t\t * If we do, overwrite our default with the view returned from the filter.\n\t\t\t */\n\t\t\tvar formContentViewFilters = nfRadio.channel( 'formContent' ).request( 'get:viewFilters' );\n\t\t\t\n\t\t\t/* \n\t\t\t* Get our first filter, this will be the one with the highest priority.\n\t\t\t*/\n\t\t\tvar sortedArray = _.without( formContentViewFilters, undefined );\n\t\t\tvar callback = sortedArray[1];\n\t\t\tthis.formContentView = callback();\n\n\t\t\t/*\n\t\t\t * Before we display anything, if we don't have any parts, create a new, empty part\n\t\t\t */\n\t\t\tif ( 0 == this.collection.length ) {\n\t\t\t\tthis.collection.add( {}, { silent: true } );\n\t\t\t}\n\n\t\t\tthis.mainContent.show(  new this.formContentView( { collection: this.collection.getFormContentData() } ) );\n\n\t\t},\n\n\t\tchangePart: function() {\n\t\t\tvar currentIndex = this.collection.indexOf( this.collection.getElement() );\n\t\t\tvar previousIndex = this.collection.indexOf( this.collection.previousElement );\n\n\t\t\tif ( currentIndex > previousIndex ) {\n\t\t\t\tvar hideDir = 'left';\n\t\t\t\tvar showDir = 'right';\n\t\t\t} else {\n\t\t\t\tvar hideDir = 'right';\n\t\t\t\tvar showDir = 'left';\n\t\t\t}\n\n\t\t\tvar that = this;\n\t\t\t/*\n\t\t\t * Start our current part sliding out.\n\t\t\t */\n\t\t\tjQuery( this.mainContent.el ).hide( 'slide', { direction: hideDir }, 300, function() {\n\t\t\t\tthat.mainContent.empty();\n\t\t\t\tthat.mainContent.show( new that.formContentView( { collection: that.collection.getFormContentData() } ) );\n\t\t\t} );\n\n\t\t\tjQuery( that.mainContent.el ).show( 'slide', { direction: showDir }, 200 );\n\t\t}\n\t});\n\n\treturn view;\n} );\n","/**\n * Main content left gutter\n * \n * @package Ninja Forms builder\n * @subpackage App\n * @copyright (c) 2016 WP Ninjas\n * @since 3.0\n */\ndefine( 'views/gutterLeft',[], function() {\n\tvar view = Marionette.ItemView.extend({\n\t\ttagName: 'div',\n\t\ttemplate: '#nf-tmpl-mp-gutter-left',\n\n\t\tevents: {\n\t\t\t'click .fa': 'clickPrevious'\n\t\t},\n\n\t\tinitialize: function() {\n\t\t\tthis.collection = nfRadio.channel( 'mp' ).request( 'get:collection' );\n\t\t\tthis.listenTo( this.collection, 'change:part', this.render );\n\t\t\tthis.listenTo( this.collection, 'sort', this.render );\n\t\t\tthis.listenTo( this.collection, 'remove', this.render );\n\t\t},\n\n\t\tonRender: function() {\n\t\t\tvar that = this;\n\t\t\tjQuery( this.el ).find( '.fa' ).droppable( {\n\t\t\t\t// Activate by pointer\n\t\t\t\ttolerance: 'pointer',\n\t\t\t\t// Class added when we're dragging over\n\t\t\t\thoverClass: 'mp-circle-over',\n\t\t\t\tactiveClass: 'mp-circle-active',\n\t\t\t\t// Which elements do we want to accept?\n\t\t\t\taccept: '.nf-field-type-draggable, .nf-field-wrap, .nf-stage',\n\n\t\t\t\t/**\n\t\t\t\t * When we drag over this droppable, trigger a radio event.\n\t\t\t\t * \n\t\t\t\t * @since  3.0\n\t\t\t\t * @param  object \te  event\n\t\t\t\t * @param  object \tui jQuery UI element\n\t\t\t\t * @return void\n\t\t\t\t */\n\t\t\t\tover: function( e, ui ) {\n\t\t\t\t\tnfRadio.channel( 'mp' ).trigger( 'over:gutter', ui, that.collection );\n\t\t\t\t},\n\n\t\t\t\t/**\n\t\t\t\t * When we drag out of this droppable, trigger a radio event.\n\t\t\t\t * \n\t\t\t\t * @since  3.0\n\t\t\t\t * @param  object \te  event\n\t\t\t\t * @param  object \tui jQuery UI element\n\t\t\t\t * @return void\n\t\t\t\t */\n\t\t\t\tout: function( e, ui ) {\n\t\t\t\t\tnfRadio.channel( 'mp' ).trigger( 'out:gutter', ui, that.collection );\n\t\t\t\t},\n\n\t\t\t\t/**\n\t\t\t\t * When we drop on this droppable, trigger a radio event.\n\t\t\t\t * \n\t\t\t\t * @since  3.0\n\t\t\t\t * @param  object \te  event\n\t\t\t\t * @param  object \tui jQuery UI element\n\t\t\t\t * @return void\n\t\t\t\t */\n\t\t\t\tdrop: function( e, ui ) {\n\t\t\t\t\tnfRadio.channel( 'mp' ).trigger( 'drop:leftGutter', ui, that.collection );\n\t\t\t\t}\n\t\t\t} );\n\t\t},\n\n\t\tclickPrevious: function( e ) {\n\t\t\tnfRadio.channel( 'mp' ).trigger( 'click:previous', e );\n\t\t},\n\n\t\ttemplateHelpers: function() {\n\t\t\tvar that = this;\n\t\t\treturn {\n\t\t\t\thasPrevious: function() {\n\t\t\t\t\treturn that.collection.hasPrevious();\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\n\t\tchangePart: function( context ) {\n\t\t\tcontext.collection.previous();\n\t\t}\n\t});\n\n\treturn view;\n} );\n","/**\n * Main content right gutter\n * \n * @package Ninja Forms builder\n * @subpackage App\n * @copyright (c) 2015 WP Ninjas\n * @since 3.0\n */\ndefine( 'views/gutterRight',[], function() {\n\tvar view = Marionette.ItemView.extend({\n\t\ttagName: 'div',\n\t\ttemplate: '#nf-tmpl-mp-gutter-right',\n\n\t\tevents: {\n\t\t\t'click .next': 'clickNext',\n\t\t\t'click .new': 'clickNew'\n\t\t},\n\n\t\tinitialize: function() {\n\t\t\tthis.collection = nfRadio.channel( 'mp' ).request( 'get:collection' );\n\t\t\tthis.listenTo( this.collection, 'change:part', this.render );\n\t\t\tthis.listenTo( this.collection, 'sort', this.render );\n\t\t\tthis.listenTo( this.collection, 'remove', this.render );\n\t\t\tthis.listenTo( this.collection, 'add', this.render );\n\n\t\t\tthis.listenTo( nfRadio.channel( 'fields' ), 'add:field', this.render );\n\t\t},\n\n\t\ttest: function() {\n\t\t\tconsole.log( 'test test test' );\n\t\t},\n\n\t\tonRender: function() {\n\t\t\tvar that = this;\n\t\t\tjQuery( this.el ).find( '.fa' ).droppable( {\n\t\t\t\t// Activate by pointer\n\t\t\t\ttolerance: 'pointer',\n\t\t\t\t// Class added when we're dragging over\n\t\t\t\thoverClass: 'mp-circle-over',\n\t\t\t\tactiveClass: 'mp-circle-active',\n\t\t\t\t// Which elements do we want to accept?\n\t\t\t\taccept: '.nf-field-type-draggable, .nf-field-wrap, .nf-stage',\n\n\t\t\t\t/**\n\t\t\t\t * When we drag over this droppable, trigger a radio event.\n\t\t\t\t * \n\t\t\t\t * @since  3.0\n\t\t\t\t * @param  object \te  event\n\t\t\t\t * @param  object \tui jQuery UI element\n\t\t\t\t * @return void\n\t\t\t\t */\n\t\t\t\tover: function( e, ui ) {\n\t\t\t\t\tnfRadio.channel( 'mp' ).trigger( 'over:gutter', ui, that.collection );\n\t\t\t\t},\n\n\t\t\t\t/**\n\t\t\t\t * When we drag out of this droppable, trigger a radio event.\n\t\t\t\t * \n\t\t\t\t * @since  3.0\n\t\t\t\t * @param  object \te  event\n\t\t\t\t * @param  object \tui jQuery UI element\n\t\t\t\t * @return void\n\t\t\t\t */\n\t\t\t\tout: function( e, ui ) {\n\t\t\t\t\tnfRadio.channel( 'mp' ).trigger( 'out:gutter', ui, that.collection );\n\t\t\t\t},\n\n\t\t\t\t/**\n\t\t\t\t * When we drop on this droppable, trigger a radio event.\n\t\t\t\t * \n\t\t\t\t * @since  3.0\n\t\t\t\t * @param  object \te  event\n\t\t\t\t * @param  object \tui jQuery UI element\n\t\t\t\t * @return void\n\t\t\t\t */\n\t\t\t\tdrop: function( e, ui ) {\n\t\t\t\t\tnfRadio.channel( 'mp' ).trigger( 'drop:rightGutter', ui, that.collection );\n\t\t\t\t}\n\t\t\t} );\n\t\t},\n\n\t\tclickNext: function( e ) {\n\t\t\tnfRadio.channel( 'mp' ).trigger( 'click:next', e );\n\t\t},\n\n\t\tclickNew: function( e ) {\n\t\t\tnfRadio.channel( 'mp' ).trigger( 'click:new', e );\n\t\t},\n\n\t\ttemplateHelpers: function() {\n\t\t\tvar that = this;\n\t\t\treturn {\n\t\t\t\thasNext: function() {\n\t\t\t\t\treturn that.collection.hasNext();\n\t\t\t\t},\n\n\t\t\t\thasContent: function() {\n\t\t\t\t\treturn 0 != nfRadio.channel( 'fields' ).request( 'get:collection' ).length;\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\n\t\tchangePart: function( context ) {\n\t\t\tcontext.collection.next();\n\t\t}\n\t});\n\n\treturn view;\n} );\n","define( 'views/mainContentEmpty',[], function() {\n\tvar view = Marionette.ItemView.extend({\n\t\ttagName: 'div',\n\t\ttemplate: '#nf-tmpl-mp-main-content-fields-empty',\n\n\t\tonBeforeDestroy: function() {\n\t\t\tjQuery( this.el ).parent().removeClass( 'nf-fields-empty-droppable' ).droppable( 'destroy' );\n\t\t},\n\n\t\tonRender: function() {\n\t\t\tthis.$el = this.$el.children();\n\t\t\tthis.$el.unwrap();\n\t\t\tthis.setElement( this.$el );\n\t\t},\n\n\t\tonShow: function() {\n\t\t\tif ( jQuery( this.el ).parent().hasClass( 'ui-sortable' ) ) {\n\t\t\t\tjQuery( this.el ).parent().sortable( 'destroy' );\n\t\t\t}\n\t\t\tjQuery( this.el ).parent().addClass( 'nf-fields-empty-droppable' );\n\t\t\tjQuery( this.el ).parent().droppable( {\n\t\t\t\taccept: function( draggable ) {\n\t\t\t\t\tif ( jQuery( draggable ).hasClass( 'nf-stage' ) || jQuery( draggable ).hasClass( 'nf-field-type-button' ) ) {\n\t\t\t\t\t\treturn true;\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\tactiveClass: 'nf-droppable-active',\n\t\t\t\thoverClass: 'nf-droppable-hover',\n\t\t\t\ttolerance: 'pointer',\n\t\t\t\tover: function( e, ui ) {\n\t\t\t\t\tui.item = ui.draggable;\n\t\t\t\t\tnfRadio.channel( 'app' ).request( 'over:fieldsSortable', ui );\n\t\t\t\t},\n\t\t\t\tout: function( e, ui ) {\n\t\t\t\t\tui.item = ui.draggable;\n\t\t\t\t\tnfRadio.channel( 'app' ).request( 'out:fieldsSortable', ui );\n\t\t\t\t},\n\t\t\t\tdrop: function( e, ui ) {\n\t\t\t\t\tui.item = ui.draggable;\n\t\t\t\t\tnfRadio.channel( 'app' ).request( 'receive:fieldsSortable', ui );\n\t\t\t\t\tvar fieldCollection = nfRadio.channel( 'fields' ).request( 'get:collection' );\n\t\t\t\t\tfieldCollection.trigger( 'reset', fieldCollection );\n\t\t\t\t},\n\t\t\t} );\n\t\t}\n\t});\n\n\treturn view;\n} );\n","/**\n * Add our view and content load filters.\n * \n * @package Ninja Forms Multi-Part\n * @subpackage Fields\n * @copyright (c) 2016 WP Ninjas\n * @since 3.0\n */\ndefine(\n\t'controllers/filters',[\n\t\t'views/layout',\n\t\t'views/gutterLeft',\n\t\t'views/gutterRight',\n\t\t'views/mainContentEmpty',\n\t\t'models/partCollection',\n\t],\n\tfunction (\n\t\tLayoutView,\n\t\tGutterLeftView,\n\t\tGutterRightView,\n\t\tMainContentEmptyView,\n\t\tPartCollection\n\t)\n\t{\n\tvar controller = Marionette.Object.extend( {\n\t\tinitialize: function() {\n\t\t\tthis.listenTo( nfRadio.channel( 'app' ), 'after:loadViews', this.addFilters );\n\t\t},\n\n\t\taddFilters: function() {\n\t\t\tnfRadio.channel( 'formContentGutters' ).request( 'add:leftFilter', this.getLeftView, 1, this );\n\t\t\tnfRadio.channel( 'formContentGutters' ).request( 'add:rightFilter', this.getRightView, 1, this );\n\t\t\n\t\t\tnfRadio.channel( 'formContent' ).request( 'add:viewFilter', this.getContentView, 1 );\n\t\t\tnfRadio.channel( 'formContent' ).request( 'add:saveFilter', this.formContentSave, 1 );\n\t\t\t\n\t\t\tnfRadio.channel( 'formContent' ).request( 'add:loadFilter', this.formContentLoad, 1 );\n\n\t\t\tthis.emptyView();\n\t\t},\n\n\t\tgetLeftView: function() {\n\t\t\treturn GutterLeftView;\n\t\t},\n\n\t\tgetRightView: function() {\n\t\t\treturn GutterRightView;\n\t\t},\n\n\t\tformContentLoad: function( formContentData ) {\n\t\t\tif ( true === formContentData instanceof Backbone.Collection ) return formContentData;\n\t\t\t\n\t\t\tvar partCollection = new PartCollection( formContentData );\n\t\t\tnfRadio.channel( 'mp' ).request( 'init:partCollection', partCollection );\n\t\t\treturn partCollection;\n\t\t},\n\n\t\tgetContentView: function() {\n\t\t\treturn LayoutView;\n\t\t},\n\n\t\tformContentSave: function( partCollection ) {\n\t\t\t/*\n\t\t\t * For each of our part models, call the next save filter for its formContentData\n\t\t\t */\n\t\t\tvar collectionClone = nfRadio.channel( 'app' ).request( 'clone:collectionDeep', partCollection );\n\t\t\t\n\t\t\t/*\n\t\t\t * If we don't have a filter for our formContentData, default to fieldCollection.\n\t\t\t */\n\t\t\tvar formContentSaveFilters = nfRadio.channel( 'formContent' ).request( 'get:saveFilters' );\n\t\t\t\n\t\t\tcollectionClone.each( function( partModel ) {\n\t\t\t\t/* \n\t\t\t\t * Get our first filter, this will be the one with the highest priority.\n\t\t\t\t */\n\t\t\t\tvar sortedArray = _.without( formContentSaveFilters, undefined );\n\t\t\t\tvar callback = sortedArray[1];\n\t\t\t\tpartModel.set( 'formContentData', callback( partModel.get( 'formContentData' ) ) );\n\t\t\t} );\n\n\t\t\treturn collectionClone.toJSON();\n\t\t},\n\n\t\temptyView: function() {\n\t\t\tthis.defaultMainContentEmptyView = nfRadio.channel( 'views' ).request( 'get:mainContentEmpty' );\n\t\t\tnfRadio.channel( 'views' ).reply( 'get:mainContentEmpty', this.getMainContentEmpty, this );\n\t\t},\n\n\t\tgetMainContentEmpty: function() {\n\t\t\tif ( 1 == nfRadio.channel( 'mp' ).request( 'get:collection' ).length ) {\n\t\t\t\treturn this.defaultMainContentEmptyView;\n\t\t\t} else {\n\t\t\t\treturn MainContentEmptyView;\n\t\t\t}\n\t\t}\n\t});\n\n\treturn controller;\n} );\n","var nfRadio = Backbone.Radio;\n\nrequire( [ 'controllers/loadControllers', 'controllers/filters' ], function( LoadControllers, LoadFilters ) {\n\n\tvar NFMultiPart = Marionette.Application.extend( {\n\n\t\tinitialize: function( options ) {\n\t\t\tthis.listenTo( nfRadio.channel( 'app' ), 'after:loadControllers', this.loadControllers );\n\t\t},\n\n\t\tloadControllers: function() {\n\t\t\tnew LoadControllers();\n\t\t},\n\n\t\tonStart: function() {\n\t\t\tnew LoadFilters();\n\t\t}\n\t} );\n\n\tvar nfMultiPart = new NFMultiPart();\n\tnfMultiPart.start();\n} );\ndefine(\"main\", function(){});\n\n"],"sourceRoot":"/source/"}